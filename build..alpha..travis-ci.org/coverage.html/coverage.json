{"/home/travis/build/npmtest/node-npmtest-bson/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bson */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bson/lib.npmtest_bson.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/lib.npmtest_bson.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bson */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bson = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bson = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bson/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bson && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bson */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bson","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bson.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bson.rollup.js'] =","            local.assetsDict['/assets.npmtest_bson.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bson.__dirname + '/lib.npmtest_bson.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":46}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":35}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":21}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":17}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":19}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":29}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":21}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":19}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":17}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":15}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":21}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":21}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":25}},"19":{"start":{"line":40,"column":0},"end":{"line":40,"column":25}},"20":{"start":{"line":41,"column":0},"end":{"line":41,"column":29}},"21":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}},"22":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}},"23":{"start":{"line":46,"column":0},"end":{"line":46,"column":22}}},"branchMap":{},"code":["var BSON = require('./lib/bson/bson'),","  Binary = require('./lib/bson/binary'),","  Code = require('./lib/bson/code'),","  DBRef = require('./lib/bson/db_ref'),","  Decimal128 = require('./lib/bson/decimal128'),","  Double = require('./lib/bson/double'),","  Int32 = require('./lib/bson/int_32'),","  Long = require('./lib/bson/long'),","  Map = require('./lib/bson/map'),","  MaxKey = require('./lib/bson/max_key'),","  MinKey = require('./lib/bson/min_key'),","  ObjectId = require('./lib/bson/objectid'),","  BSONRegExp = require('./lib/bson/regexp'),","  Symbol = require('./lib/bson/symbol'),","  Timestamp = require('./lib/bson/timestamp');","","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","BSON.BSON_INT32_MIN = -0x80000000;","","BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;","BSON.BSON_INT64_MIN = -Math.pow(2, 63);","","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Add BSON types to function creation","BSON.Binary = Binary;","BSON.Code = Code;","BSON.DBRef = DBRef;","BSON.Decimal128 = Decimal128;","BSON.Double = Double;","BSON.Int32 = Int32;","BSON.Long = Long;","BSON.Map = Map;","BSON.MaxKey = MaxKey;","BSON.MinKey = MinKey;","BSON.ObjectId = ObjectId;","BSON.ObjectID = ObjectId;","BSON.BSONRegExp = BSONRegExp;","BSON.Symbol = Symbol;","BSON.Timestamp = Timestamp;","","// Return the BSON","module.exports = BSON;",""],"l":{"1":1,"18":1,"19":1,"21":1,"22":1,"25":1,"26":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/bson.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/bson.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":22}}},"2":{"name":"serialize","line":47,"loc":{"start":{"line":47,"column":27},"end":{"line":47,"column":63}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":45},"end":{"line":79,"column":84}}},"4":{"name":"(anonymous_4)","line":114,"loc":{"start":{"line":114,"column":29},"end":{"line":114,"column":55}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":37},"end":{"line":127,"column":63}}},"6":{"name":"(anonymous_6)","line":158,"loc":{"start":{"line":158,"column":35},"end":{"line":158,"column":116}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":18,"column":31}},"2":{"start":{"line":21,"column":0},"end":{"line":23,"column":58}},"3":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":33}},"5":{"start":{"line":34,"column":0},"end":{"line":35,"column":1}},"6":{"start":{"line":47,"column":0},"end":{"line":65,"column":1}},"7":{"start":{"line":48,"column":1},"end":{"line":48,"column":25}},"8":{"start":{"line":50,"column":1},"end":{"line":51,"column":30}},"9":{"start":{"line":52,"column":1},"end":{"line":53,"column":39}},"10":{"start":{"line":54,"column":1},"end":{"line":55,"column":35}},"11":{"start":{"line":58,"column":1},"end":{"line":58,"column":111}},"12":{"start":{"line":60,"column":1},"end":{"line":60,"column":53}},"13":{"start":{"line":62,"column":1},"end":{"line":62,"column":58}},"14":{"start":{"line":64,"column":1},"end":{"line":64,"column":23}},"15":{"start":{"line":79,"column":0},"end":{"line":97,"column":1}},"16":{"start":{"line":80,"column":1},"end":{"line":80,"column":25}},"17":{"start":{"line":82,"column":1},"end":{"line":83,"column":30}},"18":{"start":{"line":84,"column":1},"end":{"line":85,"column":39}},"19":{"start":{"line":86,"column":1},"end":{"line":87,"column":35}},"20":{"start":{"line":88,"column":1},"end":{"line":89,"column":22}},"21":{"start":{"line":92,"column":1},"end":{"line":92,"column":121}},"22":{"start":{"line":93,"column":1},"end":{"line":93,"column":61}},"23":{"start":{"line":96,"column":1},"end":{"line":96,"column":31}},"24":{"start":{"line":114,"column":0},"end":{"line":116,"column":1}},"25":{"start":{"line":115,"column":2},"end":{"line":115,"column":38}},"26":{"start":{"line":127,"column":0},"end":{"line":136,"column":1}},"27":{"start":{"line":128,"column":1},"end":{"line":128,"column":25}},"28":{"start":{"line":130,"column":1},"end":{"line":131,"column":39}},"29":{"start":{"line":132,"column":1},"end":{"line":133,"column":35}},"30":{"start":{"line":135,"column":2},"end":{"line":135,"column":74}},"31":{"start":{"line":158,"column":0},"end":{"line":175,"column":1}},"32":{"start":{"line":159,"column":2},"end":{"line":159,"column":43}},"33":{"start":{"line":160,"column":2},"end":{"line":160,"column":25}},"34":{"start":{"line":162,"column":2},"end":{"line":171,"column":3}},"35":{"start":{"line":164,"column":4},"end":{"line":164,"column":98}},"36":{"start":{"line":166,"column":4},"end":{"line":166,"column":29}},"37":{"start":{"line":168,"column":4},"end":{"line":168,"column":67}},"38":{"start":{"line":170,"column":4},"end":{"line":170,"column":25}},"39":{"start":{"line":174,"column":2},"end":{"line":174,"column":15}},"40":{"start":{"line":182,"column":0},"end":{"line":182,"column":33}},"41":{"start":{"line":183,"column":0},"end":{"line":183,"column":34}},"42":{"start":{"line":185,"column":0},"end":{"line":185,"column":42}},"43":{"start":{"line":186,"column":0},"end":{"line":186,"column":39}},"44":{"start":{"line":189,"column":0},"end":{"line":189,"column":35}},"45":{"start":{"line":190,"column":0},"end":{"line":190,"column":36}},"46":{"start":{"line":193,"column":0},"end":{"line":193,"column":56}},"47":{"start":{"line":194,"column":0},"end":{"line":194,"column":57}},"48":{"start":{"line":201,"column":0},"end":{"line":201,"column":26}},"49":{"start":{"line":207,"column":0},"end":{"line":207,"column":26}},"50":{"start":{"line":213,"column":0},"end":{"line":213,"column":26}},"51":{"start":{"line":219,"column":0},"end":{"line":219,"column":25}},"52":{"start":{"line":225,"column":0},"end":{"line":225,"column":26}},"53":{"start":{"line":231,"column":0},"end":{"line":231,"column":23}},"54":{"start":{"line":237,"column":0},"end":{"line":237,"column":27}},"55":{"start":{"line":243,"column":0},"end":{"line":243,"column":24}},"56":{"start":{"line":249,"column":0},"end":{"line":249,"column":25}},"57":{"start":{"line":255,"column":0},"end":{"line":255,"column":27}},"58":{"start":{"line":261,"column":0},"end":{"line":261,"column":25}},"59":{"start":{"line":267,"column":0},"end":{"line":267,"column":27}},"60":{"start":{"line":273,"column":0},"end":{"line":273,"column":33}},"61":{"start":{"line":279,"column":0},"end":{"line":279,"column":24}},"62":{"start":{"line":285,"column":0},"end":{"line":285,"column":30}},"63":{"start":{"line":291,"column":0},"end":{"line":291,"column":25}},"64":{"start":{"line":297,"column":0},"end":{"line":297,"column":30}},"65":{"start":{"line":303,"column":0},"end":{"line":303,"column":30}},"66":{"start":{"line":310,"column":0},"end":{"line":310,"column":37}},"67":{"start":{"line":316,"column":0},"end":{"line":316,"column":38}},"68":{"start":{"line":322,"column":0},"end":{"line":322,"column":40}},"69":{"start":{"line":328,"column":0},"end":{"line":328,"column":34}},"70":{"start":{"line":334,"column":0},"end":{"line":334,"column":33}},"71":{"start":{"line":340,"column":0},"end":{"line":340,"column":44}},"72":{"start":{"line":343,"column":0},"end":{"line":343,"column":22}},"73":{"start":{"line":344,"column":0},"end":{"line":344,"column":27}},"74":{"start":{"line":345,"column":0},"end":{"line":345,"column":25}},"75":{"start":{"line":346,"column":0},"end":{"line":346,"column":31}},"76":{"start":{"line":347,"column":0},"end":{"line":347,"column":27}},"77":{"start":{"line":348,"column":0},"end":{"line":348,"column":29}},"78":{"start":{"line":349,"column":0},"end":{"line":349,"column":31}},"79":{"start":{"line":350,"column":0},"end":{"line":350,"column":35}},"80":{"start":{"line":351,"column":0},"end":{"line":351,"column":27}},"81":{"start":{"line":352,"column":0},"end":{"line":352,"column":37}},"82":{"start":{"line":353,"column":0},"end":{"line":353,"column":31}},"83":{"start":{"line":354,"column":0},"end":{"line":354,"column":29}},"84":{"start":{"line":355,"column":0},"end":{"line":355,"column":31}},"85":{"start":{"line":356,"column":0},"end":{"line":356,"column":31}},"86":{"start":{"line":357,"column":0},"end":{"line":357,"column":39}},"87":{"start":{"line":358,"column":0},"end":{"line":358,"column":39}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":18}},{"start":{"line":48,"column":22},"end":{"line":48,"column":24}}]},"2":{"line":50,"type":"cond-expr","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":21}},{"start":{"line":51,"column":24},"end":{"line":51,"column":29}}]},"3":{"line":52,"type":"cond-expr","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":30}},{"start":{"line":53,"column":33},"end":{"line":53,"column":38}}]},"4":{"line":54,"type":"cond-expr","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":27}},{"start":{"line":55,"column":30},"end":{"line":55,"column":34}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":11},"end":{"line":80,"column":18}},{"start":{"line":80,"column":22},"end":{"line":80,"column":24}}]},"6":{"line":82,"type":"cond-expr","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":21}},{"start":{"line":83,"column":24},"end":{"line":83,"column":29}}]},"7":{"line":84,"type":"cond-expr","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":30}},{"start":{"line":85,"column":33},"end":{"line":85,"column":38}}]},"8":{"line":86,"type":"cond-expr","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":27}},{"start":{"line":87,"column":30},"end":{"line":87,"column":34}}]},"9":{"line":88,"type":"cond-expr","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":17}},{"start":{"line":89,"column":20},"end":{"line":89,"column":21}}]},"10":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":64},"end":{"line":92,"column":74}},{"start":{"line":92,"column":78},"end":{"line":92,"column":79}}]},"11":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":11},"end":{"line":128,"column":18}},{"start":{"line":128,"column":22},"end":{"line":128,"column":24}}]},"12":{"line":130,"type":"cond-expr","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":30}},{"start":{"line":131,"column":33},"end":{"line":131,"column":38}}]},"13":{"line":132,"type":"cond-expr","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":27}},{"start":{"line":133,"column":30},"end":{"line":133,"column":34}}]},"14":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":30},"end":{"line":159,"column":37}},{"start":{"line":159,"column":40},"end":{"line":159,"column":42}}]}},"code":["\"use strict\"","","var writeIEEE754 = require('./float_parser').writeIEEE754,","\treadIEEE754 = require('./float_parser').readIEEE754,","  Map = require('./map'),","\tLong = require('./long'),","  Double = require('./double'),","  Timestamp = require('./timestamp'),","  ObjectID = require('./objectid'),","  BSONRegExp = require('./regexp'),","  Symbol = require('./symbol'),","\tInt32 = require('./int_32'),","  Code = require('./code'),","\tDecimal128 = require('./decimal128'),","  MinKey = require('./min_key'),","  MaxKey = require('./max_key'),","  DBRef = require('./db_ref'),","  Binary = require('./binary');","","// Parts of the parser","var deserialize = require('./parser/deserializer'),","\tserializer = require('./parser/serializer'),","\tcalculateObjectSize = require('./parser/calculate_size');","","/**"," * @ignore"," * @api private"," */","// Max Size","var MAXSIZE = (1024*1024*17);","// Max Document Buffer size","var buffer = new Buffer(MAXSIZE);","","var BSON = function() {","}","","/**"," * Serialize a Javascript object."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid."," * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**."," * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**."," * @return {Buffer} returns the Buffer object containing the serialized object."," * @api public"," */","BSON.prototype.serialize = function serialize(object, options) {","\toptions = options || {};","\t// Unpack the options","\tvar checkKeys = typeof options.checkKeys == 'boolean'","\t\t? options.checkKeys : false;","\tvar serializeFunctions = typeof options.serializeFunctions == 'boolean'","\t\t? options.serializeFunctions : false;","\tvar ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","\t\t? options.ignoreUndefined : true;","","\t// Attempt to serialize","\tvar serializationIndex = serializer(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);","\t// Create the final buffer","\tvar finishedBuffer = new Buffer(serializationIndex);","\t// Copy into the finished buffer","\tbuffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);","\t// Return the buffer","\treturn finishedBuffer;","}","","/**"," * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization."," *"," * @param {Object} object the Javascript object to serialize."," * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object."," * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid."," * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**."," * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**."," * @param {Number} [options.index] the index in the buffer where we wish to start serializing into."," * @return {Number} returns the index pointing to the last written byte in the buffer."," * @api public"," */","BSON.prototype.serializeWithBufferAndIndex = function(object, finalBuffer, options) {","\toptions = options || {};","\t// Unpack the options","\tvar checkKeys = typeof options.checkKeys == 'boolean'","\t\t? options.checkKeys : false;","\tvar serializeFunctions = typeof options.serializeFunctions == 'boolean'","\t\t? options.serializeFunctions : false;","\tvar ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","\t\t? options.ignoreUndefined : true;","\tvar startIndex = typeof options.index == 'number'","\t\t? options.index : 0;","","\t// Attempt to serialize","\tvar serializationIndex = serializer(buffer, object, checkKeys, startIndex || 0, 0, serializeFunctions, ignoreUndefined);","\tbuffer.copy(finalBuffer, startIndex, 0, serializationIndex);","","\t// Return the index","\treturn serializationIndex - 1;","}","","/**"," * Deserialize data as BSON."," *"," * @param {Buffer} buffer the buffer containing the serialized set of BSON documents."," * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized."," * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse."," * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function."," * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance."," * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types."," * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer."," * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances."," * @return {Object} returns the deserialized Javascript Object."," * @api public"," */","BSON.prototype.deserialize = function(buffer, options) {","  return deserialize(buffer, options);","}","","/**"," * Calculate the bson size for a passed in Javascript object."," *"," * @param {Object} object the Javascript object to calculate the BSON byte size for."," * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**."," * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**."," * @return {Number} returns the number of bytes the BSON object will take up."," * @api public"," */","BSON.prototype.calculateObjectSize = function(object, options) {","\toptions = options || {};","","\tvar serializeFunctions = typeof options.serializeFunctions == 'boolean'","\t\t? options.serializeFunctions : false;","\tvar ignoreUndefined = typeof options.ignoreUndefined == 'boolean'","\t\t? options.ignoreUndefined : true;","","  return calculateObjectSize(object, serializeFunctions, ignoreUndefined);","}","","/**"," * Deserialize stream data as BSON documents."," *"," * @param {Buffer} data the buffer containing the serialized set of BSON documents."," * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start."," * @param {Number} numberOfDocuments number of documents to deserialize."," * @param {Array} documents an array where to store the deserialized documents."," * @param {Number} docStartIndex the index in the documents array from where to start inserting documents."," * @param {Object} [options] additional options used for the deserialization."," * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized."," * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse."," * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function."," * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits"," * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance."," * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types."," * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer."," * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances."," * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents."," * @api public"," */","BSON.prototype.deserializeStream = function(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {","  options = options != null ? options : {};","  var index = startIndex;","  // Loop over all documents","  for(var i = 0; i < numberOfDocuments; i++) {","    // Find size of the document","    var size = data[index] | data[index + 1] << 8 | data[index + 2] << 16 | data[index + 3] << 24;","    // Update options with index","    options['index'] = index;","    // Parse the document at this point","    documents[docStartIndex + i] = this.deserialize(data, options);","    // Adjust index by the document size","    index = index + size;","  }","","  // Return object containing end index of parsing and list of documents","  return index;","}","","/**"," * @ignore"," * @api private"," */","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","BSON.BSON_INT32_MIN = -0x80000000;","","BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;","BSON.BSON_INT64_MIN = -Math.pow(2, 63);","","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","","// Return BSON","module.exports = BSON;","module.exports.Code = Code;","module.exports.Map = Map;","module.exports.Symbol = Symbol;","module.exports.BSON = BSON;","module.exports.DBRef = DBRef;","module.exports.Binary = Binary;","module.exports.ObjectID = ObjectID;","module.exports.Long = Long;","module.exports.Timestamp = Timestamp;","module.exports.Double = Double;","module.exports.Int32 = Int32;","module.exports.MinKey = MinKey;","module.exports.MaxKey = MaxKey;","module.exports.BSONRegExp = BSONRegExp;","module.exports.Decimal128 = Decimal128;",""],"l":{"3":1,"21":1,"30":1,"32":1,"34":1,"47":1,"48":0,"50":0,"52":0,"54":0,"58":0,"60":0,"62":0,"64":0,"79":1,"80":0,"82":0,"84":0,"86":0,"88":0,"92":0,"93":0,"96":0,"114":1,"115":0,"127":1,"128":0,"130":0,"132":0,"135":0,"158":1,"159":0,"160":0,"162":0,"164":0,"166":0,"168":0,"170":0,"174":0,"182":1,"183":1,"185":1,"186":1,"189":1,"190":1,"193":1,"194":1,"201":1,"207":1,"213":1,"219":1,"225":1,"231":1,"237":1,"243":1,"249":1,"255":1,"261":1,"267":1,"273":1,"279":1,"285":1,"291":1,"297":1,"303":1,"310":1,"316":1,"322":1,"328":1,"334":1,"340":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/float_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/float_parser.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":65}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":19},"end":{"line":67,"column":73}}}},"statementMap":{"1":{"start":{"line":33,"column":0},"end":{"line":65,"column":2}},"2":{"start":{"line":34,"column":2},"end":{"line":42,"column":29}},"3":{"start":{"line":44,"column":2},"end":{"line":44,"column":9}},"4":{"start":{"line":46,"column":2},"end":{"line":46,"column":32}},"5":{"start":{"line":47,"column":2},"end":{"line":47,"column":17}},"6":{"start":{"line":48,"column":2},"end":{"line":48,"column":16}},"7":{"start":{"line":49,"column":2},"end":{"line":49,"column":74}},"8":{"start":{"line":51,"column":2},"end":{"line":51,"column":32}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":17}},"10":{"start":{"line":53,"column":2},"end":{"line":53,"column":16}},"11":{"start":{"line":54,"column":2},"end":{"line":54,"column":74}},"12":{"start":{"line":56,"column":2},"end":{"line":63,"column":3}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":18}},"14":{"start":{"line":58,"column":9},"end":{"line":63,"column":3}},"15":{"start":{"line":59,"column":4},"end":{"line":59,"column":47}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":30}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":18}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":50}},"19":{"start":{"line":67,"column":0},"end":{"line":118,"column":2}},"20":{"start":{"line":68,"column":2},"end":{"line":76,"column":62}},"21":{"start":{"line":78,"column":2},"end":{"line":78,"column":26}},"22":{"start":{"line":80,"column":2},"end":{"line":109,"column":3}},"23":{"start":{"line":81,"column":4},"end":{"line":81,"column":29}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":13}},"25":{"start":{"line":84,"column":4},"end":{"line":84,"column":47}},"26":{"start":{"line":85,"column":4},"end":{"line":88,"column":5}},"27":{"start":{"line":86,"column":6},"end":{"line":86,"column":10}},"28":{"start":{"line":87,"column":6},"end":{"line":87,"column":13}},"29":{"start":{"line":89,"column":4},"end":{"line":93,"column":5}},"30":{"start":{"line":90,"column":6},"end":{"line":90,"column":22}},"31":{"start":{"line":92,"column":6},"end":{"line":92,"column":43}},"32":{"start":{"line":94,"column":4},"end":{"line":97,"column":5}},"33":{"start":{"line":95,"column":6},"end":{"line":95,"column":10}},"34":{"start":{"line":96,"column":6},"end":{"line":96,"column":13}},"35":{"start":{"line":99,"column":4},"end":{"line":108,"column":5}},"36":{"start":{"line":100,"column":6},"end":{"line":100,"column":12}},"37":{"start":{"line":101,"column":6},"end":{"line":101,"column":15}},"38":{"start":{"line":102,"column":11},"end":{"line":108,"column":5}},"39":{"start":{"line":103,"column":6},"end":{"line":103,"column":46}},"40":{"start":{"line":104,"column":6},"end":{"line":104,"column":20}},"41":{"start":{"line":106,"column":6},"end":{"line":106,"column":61}},"42":{"start":{"line":107,"column":6},"end":{"line":107,"column":12}},"43":{"start":{"line":111,"column":2},"end":{"line":111,"column":80}},"44":{"start":{"line":113,"column":2},"end":{"line":113,"column":22}},"45":{"start":{"line":114,"column":2},"end":{"line":114,"column":15}},"46":{"start":{"line":115,"column":2},"end":{"line":115,"column":79}},"47":{"start":{"line":117,"column":2},"end":{"line":117,"column":36}},"48":{"start":{"line":120,"column":0},"end":{"line":120,"column":34}},"49":{"start":{"line":121,"column":0},"end":{"line":121,"column":36}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":17}},{"start":{"line":40,"column":21},"end":{"line":40,"column":31}}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":17}},{"start":{"line":41,"column":20},"end":{"line":41,"column":22}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":9}},{"start":{"line":58,"column":9},"end":{"line":58,"column":9}}]},"5":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":18}},{"start":{"line":59,"column":22},"end":{"line":59,"column":45}}]},"6":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":27},"end":{"line":59,"column":29}},{"start":{"line":59,"column":32},"end":{"line":59,"column":33}}]},"7":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":14},"end":{"line":64,"column":16}},{"start":{"line":64,"column":19},"end":{"line":64,"column":20}}]},"8":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":26},"end":{"line":73,"column":61}},{"start":{"line":73,"column":64},"end":{"line":73,"column":65}}]},"9":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":17},"end":{"line":74,"column":25}},{"start":{"line":74,"column":29},"end":{"line":74,"column":30}}]},"10":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":18}},{"start":{"line":75,"column":21},"end":{"line":75,"column":22}}]},"11":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":56},"end":{"line":76,"column":57}},{"start":{"line":76,"column":60},"end":{"line":76,"column":61}}]},"12":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":19}},{"start":{"line":76,"column":24},"end":{"line":76,"column":35}},{"start":{"line":76,"column":39},"end":{"line":76,"column":52}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"14":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":18}},{"start":{"line":80,"column":22},"end":{"line":80,"column":40}}]},"15":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":23},"end":{"line":81,"column":24}},{"start":{"line":81,"column":27},"end":{"line":81,"column":28}}]},"16":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"17":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"18":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"19":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"20":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":11},"end":{"line":102,"column":11}},{"start":{"line":102,"column":11},"end":{"line":102,"column":11}}]}},"code":["// Copyright (c) 2008, Fair Oaks Labs, Inc.","// All rights reserved.","// ","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions are met:","// ","//  * Redistributions of source code must retain the above copyright notice,","//    this list of conditions and the following disclaimer.","// ","//  * Redistributions in binary form must reproduce the above copyright notice,","//    this list of conditions and the following disclaimer in the documentation","//    and/or other materials provided with the distribution.","// ","//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors","//    may be used to endorse or promote products derived from this software","//    without specific prior written permission.","// ","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"","// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE","// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE","// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR","// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF","// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS","// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN","// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)","// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE","// POSSIBILITY OF SUCH DAMAGE.","//","//","// Modifications to writeIEEE754 to support negative zeroes made by Brian White","","var readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {","  var e, m,","      bBE = (endian === 'big'),","      eLen = nBytes * 8 - mLen - 1,","      eMax = (1 << eLen) - 1,","      eBias = eMax >> 1,","      nBits = -7,","      i = bBE ? 0 : (nBytes - 1),","      d = bBE ? 1 : -1,","      s = buffer[offset + i];","","  i += d;","","  e = s & ((1 << (-nBits)) - 1);","  s >>= (-nBits);","  nBits += eLen;","  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);","","  m = e & ((1 << (-nBits)) - 1);","  e >>= (-nBits);","  nBits += mLen;","  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);","","  if (e === 0) {","    e = 1 - eBias;","  } else if (e === eMax) {","    return m ? NaN : ((s ? -1 : 1) * Infinity);","  } else {","    m = m + Math.pow(2, mLen);","    e = e - eBias;","  }","  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);","};","","var writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {","  var e, m, c,","      bBE = (endian === 'big'),","      eLen = nBytes * 8 - mLen - 1,","      eMax = (1 << eLen) - 1,","      eBias = eMax >> 1,","      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),","      i = bBE ? (nBytes-1) : 0,","      d = bBE ? -1 : 1,","      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;","","  value = Math.abs(value);","","  if (isNaN(value) || value === Infinity) {","    m = isNaN(value) ? 1 : 0;","    e = eMax;","  } else {","    e = Math.floor(Math.log(value) / Math.LN2);","    if (value * (c = Math.pow(2, -e)) < 1) {","      e--;","      c *= 2;","    }","    if (e+eBias >= 1) {","      value += rt / c;","    } else {","      value += rt * Math.pow(2, 1 - eBias);","    }","    if (value * c >= 2) {","      e++;","      c /= 2;","    }","","    if (e + eBias >= eMax) {","      m = 0;","      e = eMax;","    } else if (e + eBias >= 1) {","      m = (value * c - 1) * Math.pow(2, mLen);","      e = e + eBias;","    } else {","      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);","      e = 0;","    }","  }","","  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);","","  e = (e << mLen) | m;","  eLen += mLen;","  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);","","  buffer[offset + i - d] |= s * 128;","};","","exports.readIEEE754 = readIEEE754;","exports.writeIEEE754 = writeIEEE754;"],"l":{"33":1,"34":0,"44":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"64":0,"67":1,"68":0,"78":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"92":0,"94":0,"95":0,"96":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"111":0,"113":0,"114":0,"115":0,"117":0,"120":1,"121":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/map.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/map.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":28}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":24},"end":{"line":26,"column":35}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":39}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":26},"end":{"line":41,"column":37}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":23}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":51}}},"7":{"name":"(anonymous_7)","line":66,"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":36}}},"8":{"name":"(anonymous_8)","line":70,"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":36}}},"9":{"name":"(anonymous_9)","line":74,"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":37}}},"10":{"name":"(anonymous_10)","line":79,"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":23}}},"11":{"name":"(anonymous_11)","line":89,"loc":{"start":{"line":89,"column":22},"end":{"line":89,"column":43}}},"12":{"name":"(anonymous_12)","line":103,"loc":{"start":{"line":103,"column":25},"end":{"line":103,"column":46}}},"13":{"name":"(anonymous_13)","line":108,"loc":{"start":{"line":108,"column":12},"end":{"line":108,"column":23}}},"14":{"name":"(anonymous_14)","line":121,"loc":{"start":{"line":121,"column":9},"end":{"line":121,"column":20}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":126,"column":1}},"2":{"start":{"line":5,"column":2},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":34}},"4":{"start":{"line":9,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":20}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":22}},"7":{"start":{"line":13,"column":4},"end":{"line":23,"column":5}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":36}},"9":{"start":{"line":14,"column":27},"end":{"line":14,"column":36}},"10":{"start":{"line":15,"column":6},"end":{"line":15,"column":27}},"11":{"start":{"line":16,"column":6},"end":{"line":16,"column":25}},"12":{"start":{"line":17,"column":6},"end":{"line":17,"column":27}},"13":{"start":{"line":19,"column":6},"end":{"line":19,"column":27}},"14":{"start":{"line":22,"column":6},"end":{"line":22,"column":63}},"15":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":20}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"18":{"start":{"line":31,"column":2},"end":{"line":39,"column":3}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":34}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":35}},"21":{"start":{"line":33,"column":22},"end":{"line":33,"column":35}},"22":{"start":{"line":35,"column":4},"end":{"line":35,"column":29}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":34}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":16}},"25":{"start":{"line":41,"column":2},"end":{"line":54,"column":3}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":20}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":18}},"28":{"start":{"line":45,"column":4},"end":{"line":53,"column":6}},"29":{"start":{"line":47,"column":8},"end":{"line":47,"column":38}},"30":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"31":{"start":{"line":56,"column":2},"end":{"line":64,"column":3}},"32":{"start":{"line":57,"column":4},"end":{"line":57,"column":24}},"33":{"start":{"line":59,"column":4},"end":{"line":63,"column":5}},"34":{"start":{"line":60,"column":6},"end":{"line":60,"column":30}},"35":{"start":{"line":62,"column":6},"end":{"line":62,"column":58}},"36":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"37":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"38":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":37}},"40":{"start":{"line":74,"column":2},"end":{"line":87,"column":3}},"41":{"start":{"line":75,"column":4},"end":{"line":75,"column":20}},"42":{"start":{"line":76,"column":4},"end":{"line":76,"column":18}},"43":{"start":{"line":78,"column":4},"end":{"line":86,"column":6}},"44":{"start":{"line":80,"column":8},"end":{"line":80,"column":38}},"45":{"start":{"line":81,"column":8},"end":{"line":84,"column":9}},"46":{"start":{"line":89,"column":2},"end":{"line":101,"column":3}},"47":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"48":{"start":{"line":91,"column":6},"end":{"line":91,"column":34}},"49":{"start":{"line":92,"column":6},"end":{"line":92,"column":18}},"50":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"51":{"start":{"line":99,"column":4},"end":{"line":99,"column":61}},"52":{"start":{"line":100,"column":4},"end":{"line":100,"column":16}},"53":{"start":{"line":103,"column":2},"end":{"line":116,"column":3}},"54":{"start":{"line":104,"column":4},"end":{"line":104,"column":20}},"55":{"start":{"line":105,"column":4},"end":{"line":105,"column":18}},"56":{"start":{"line":107,"column":4},"end":{"line":115,"column":6}},"57":{"start":{"line":109,"column":8},"end":{"line":109,"column":38}},"58":{"start":{"line":110,"column":8},"end":{"line":113,"column":9}},"59":{"start":{"line":119,"column":2},"end":{"line":122,"column":5}},"60":{"start":{"line":121,"column":22},"end":{"line":121,"column":47}},"61":{"start":{"line":124,"column":2},"end":{"line":124,"column":23}},"62":{"start":{"line":125,"column":2},"end":{"line":125,"column":27}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":0},"end":{"line":4,"column":0}},{"start":{"line":4,"column":0},"end":{"line":4,"column":0}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"4":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":37},"end":{"line":49,"column":63}},{"start":{"line":49,"column":66},"end":{"line":49,"column":75}}]},"5":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":36},"end":{"line":50,"column":41}},{"start":{"line":50,"column":44},"end":{"line":50,"column":48}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":15}},{"start":{"line":57,"column":19},"end":{"line":57,"column":23}}]},"7":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":31},"end":{"line":67,"column":50}},{"start":{"line":67,"column":53},"end":{"line":67,"column":62}}]},"8":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":37},"end":{"line":82,"column":40}},{"start":{"line":82,"column":43},"end":{"line":82,"column":52}}]},"9":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":36},"end":{"line":83,"column":41}},{"start":{"line":83,"column":44},"end":{"line":83,"column":48}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"11":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":37},"end":{"line":111,"column":56}},{"start":{"line":111,"column":59},"end":{"line":111,"column":68}}]},"12":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":36},"end":{"line":112,"column":41}},{"start":{"line":112,"column":44},"end":{"line":112,"column":48}}]}},"code":["\"use strict\"","","// We have an ES6 Map available, return the native instance","if(typeof global.Map !== 'undefined') {","  module.exports = global.Map;","  module.exports.Map = global.Map;","} else {","  // We will return a polyfill","  var Map = function(array) {","    this._keys = [];","    this._values = {};","","    for(var i = 0; i < array.length; i++) {","      if(array[i] == null) continue;  // skip null and undefined","      var entry = array[i];","      var key = entry[0];","      var value = entry[1];","      // Add the key to the list of keys in order","      this._keys.push(key);","      // Add the key and value to the values dictionary with a point","      // to the location in the ordered keys list","      this._values[key] = {v: value, i: this._keys.length - 1};","    }","  }","","  Map.prototype.clear = function() {","    this._keys = [];","    this._values = {};","  }","","  Map.prototype.delete = function(key) {","    var value = this._values[key];","    if(value == null) return false;","    // Delete entry","    delete this._values[key];","    // Remove the key from the ordered keys list","    this._keys.splice(value.i, 1);","    return true;","  }","","  Map.prototype.entries = function() {","    var self = this;","    var index = 0;","","    return {","      next: function() {","        var key = self._keys[index++];","        return {","          value: key !== undefined ? [key, self._values[key].v] : undefined,","          done: key !== undefined ? false : true","        }","      }","    };","  }","","  Map.prototype.forEach = function(callback, self) {","    self = self || this;","","    for(var i = 0; i < this._keys.length; i++) {","      var key = this._keys[i];","      // Call the forEach callback","      callback.call(self, this._values[key].v, key, self);","    }","  }","","  Map.prototype.get = function(key) {","    return this._values[key] ? this._values[key].v : undefined;","  }","","  Map.prototype.has = function(key) {","    return this._values[key] != null;","  }","","  Map.prototype.keys = function(key) {","    var self = this;","    var index = 0;","","    return {","      next: function() {","        var key = self._keys[index++];","        return {","          value: key !== undefined ? key : undefined,","          done: key !== undefined ? false : true","        }","      }","    };","  }","","  Map.prototype.set = function(key, value) {","    if(this._values[key]) {","      this._values[key].v = value;","      return this;","    }","","    // Add the key to the list of keys in order","    this._keys.push(key);","    // Add the key and value to the values dictionary with a point","    // to the location in the ordered keys list","    this._values[key] = {v: value, i: this._keys.length - 1};","    return this;","  }","","  Map.prototype.values = function(key, value) {","    var self = this;","    var index = 0;","","    return {","      next: function() {","        var key = self._keys[index++];","        return {","          value: key !== undefined ? self._values[key].v : undefined,","          done: key !== undefined ? false : true","        }","      }","    };","  }","","  // Last ismaster","  Object.defineProperty(Map.prototype, 'size', {","    enumerable:true,","    get: function() { return this._keys.length; }","  });","","  module.exports = Map;","  module.exports.Map = Map;","}"],"l":{"4":1,"5":1,"6":1,"9":0,"10":0,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"22":0,"26":0,"27":0,"28":0,"31":0,"32":0,"33":0,"35":0,"37":0,"38":0,"41":0,"42":0,"43":0,"45":0,"47":0,"48":0,"56":0,"57":0,"59":0,"60":0,"62":0,"66":0,"67":0,"70":0,"71":0,"74":0,"75":0,"76":0,"78":0,"80":0,"81":0,"89":0,"90":0,"91":0,"92":0,"96":0,"99":0,"100":0,"103":0,"104":0,"105":0,"107":0,"109":0,"110":0,"119":0,"121":0,"124":0,"125":0}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/long.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/long.js","s":{"1":1,"2":18,"3":0,"4":18,"5":18,"6":18,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":3,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":3,"87":0,"88":3,"89":1,"90":3,"91":3,"92":3,"93":3,"94":3,"95":3,"96":3,"97":3,"98":3,"99":3,"100":3,"101":3,"102":3,"103":3,"104":3,"105":3,"106":3,"107":3,"108":3,"109":3,"110":3,"111":1,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":1,"205":3,"206":1,"207":0,"208":1,"209":0,"210":1,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":4,"243":3,"244":3,"245":0,"246":4,"247":4,"248":3,"249":4,"250":1,"251":9,"252":0,"253":9,"254":0,"255":9,"256":0,"257":9,"258":3,"259":6,"260":1,"261":8,"262":1,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1},"b":{"1":[0,18],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[3,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,3],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[3,1],"60":[4,4],"61":[0,3],"62":[1,3],"63":[3,1],"64":[4,4],"65":[0,9],"66":[9,9],"67":[0,9],"68":[0,9],"69":[3,6],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0]},"f":{"1":18,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":3,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":3,"21":3,"22":0,"23":0,"24":0,"25":0,"26":3,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":4,"34":9,"35":8,"36":0},"fnMap":{"1":{"name":"Long","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":25}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":23},"end":{"line":66,"column":34}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":26},"end":{"line":76,"column":37}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":24},"end":{"line":87,"column":35}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":26},"end":{"line":98,"column":46}}},"6":{"name":"(anonymous_6)","line":150,"loc":{"start":{"line":150,"column":29},"end":{"line":150,"column":40}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":28},"end":{"line":160,"column":39}}},"8":{"name":"(anonymous_8)","line":170,"loc":{"start":{"line":170,"column":36},"end":{"line":170,"column":47}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":42}}},"10":{"name":"(anonymous_10)","line":205,"loc":{"start":{"line":205,"column":24},"end":{"line":205,"column":35}}},"11":{"name":"(anonymous_11)","line":215,"loc":{"start":{"line":215,"column":28},"end":{"line":215,"column":39}}},"12":{"name":"(anonymous_12)","line":225,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":34}}},"13":{"name":"(anonymous_13)","line":236,"loc":{"start":{"line":236,"column":24},"end":{"line":236,"column":40}}},"14":{"name":"(anonymous_14)","line":247,"loc":{"start":{"line":247,"column":27},"end":{"line":247,"column":43}}},"15":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":26},"end":{"line":258,"column":42}}},"16":{"name":"(anonymous_16)","line":269,"loc":{"start":{"line":269,"column":33},"end":{"line":269,"column":49}}},"17":{"name":"(anonymous_17)","line":280,"loc":{"start":{"line":280,"column":29},"end":{"line":280,"column":45}}},"18":{"name":"(anonymous_18)","line":291,"loc":{"start":{"line":291,"column":36},"end":{"line":291,"column":52}}},"19":{"name":"(anonymous_19)","line":302,"loc":{"start":{"line":302,"column":25},"end":{"line":302,"column":41}}},"20":{"name":"(anonymous_20)","line":330,"loc":{"start":{"line":330,"column":24},"end":{"line":330,"column":35}}},"21":{"name":"(anonymous_21)","line":345,"loc":{"start":{"line":345,"column":21},"end":{"line":345,"column":37}}},"22":{"name":"(anonymous_22)","line":380,"loc":{"start":{"line":380,"column":26},"end":{"line":380,"column":42}}},"23":{"name":"(anonymous_23)","line":391,"loc":{"start":{"line":391,"column":26},"end":{"line":391,"column":42}}},"24":{"name":"(anonymous_24)","line":464,"loc":{"start":{"line":464,"column":21},"end":{"line":464,"column":37}}},"25":{"name":"(anonymous_25)","line":549,"loc":{"start":{"line":549,"column":24},"end":{"line":549,"column":40}}},"26":{"name":"(anonymous_26)","line":559,"loc":{"start":{"line":559,"column":21},"end":{"line":559,"column":32}}},"27":{"name":"(anonymous_27)","line":570,"loc":{"start":{"line":570,"column":21},"end":{"line":570,"column":37}}},"28":{"name":"(anonymous_28)","line":581,"loc":{"start":{"line":581,"column":20},"end":{"line":581,"column":36}}},"29":{"name":"(anonymous_29)","line":592,"loc":{"start":{"line":592,"column":21},"end":{"line":592,"column":37}}},"30":{"name":"(anonymous_30)","line":603,"loc":{"start":{"line":603,"column":27},"end":{"line":603,"column":45}}},"31":{"name":"(anonymous_31)","line":627,"loc":{"start":{"line":627,"column":28},"end":{"line":627,"column":46}}},"32":{"name":"(anonymous_32)","line":653,"loc":{"start":{"line":653,"column":36},"end":{"line":653,"column":54}}},"33":{"name":"(anonymous_33)","line":679,"loc":{"start":{"line":679,"column":15},"end":{"line":679,"column":31}}},"34":{"name":"(anonymous_34)","line":701,"loc":{"start":{"line":701,"column":18},"end":{"line":701,"column":34}}},"35":{"name":"(anonymous_35)","line":725,"loc":{"start":{"line":725,"column":16},"end":{"line":725,"column":44}}},"36":{"name":"(anonymous_36)","line":737,"loc":{"start":{"line":737,"column":18},"end":{"line":737,"column":43}}}},"statementMap":{"1":{"start":{"line":43,"column":0},"end":{"line":58,"column":1}},"2":{"start":{"line":44,"column":2},"end":{"line":44,"column":57}},"3":{"start":{"line":44,"column":30},"end":{"line":44,"column":57}},"4":{"start":{"line":46,"column":2},"end":{"line":46,"column":26}},"5":{"start":{"line":51,"column":2},"end":{"line":51,"column":22}},"6":{"start":{"line":57,"column":2},"end":{"line":57,"column":24}},"7":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"8":{"start":{"line":67,"column":2},"end":{"line":67,"column":19}},"9":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"10":{"start":{"line":77,"column":2},"end":{"line":78,"column":35}},"11":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"12":{"start":{"line":88,"column":2},"end":{"line":88,"column":25}},"13":{"start":{"line":98,"column":0},"end":{"line":142,"column":2}},"14":{"start":{"line":99,"column":2},"end":{"line":99,"column":30}},"15":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"16":{"start":{"line":101,"column":4},"end":{"line":101,"column":48}},"17":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"18":{"start":{"line":105,"column":4},"end":{"line":105,"column":15}},"19":{"start":{"line":108,"column":2},"end":{"line":119,"column":3}},"20":{"start":{"line":109,"column":4},"end":{"line":118,"column":5}},"21":{"start":{"line":112,"column":6},"end":{"line":112,"column":45}},"22":{"start":{"line":113,"column":6},"end":{"line":113,"column":36}},"23":{"start":{"line":114,"column":6},"end":{"line":114,"column":55}},"24":{"start":{"line":115,"column":6},"end":{"line":115,"column":63}},"25":{"start":{"line":117,"column":6},"end":{"line":117,"column":49}},"26":{"start":{"line":123,"column":2},"end":{"line":123,"column":57}},"27":{"start":{"line":125,"column":2},"end":{"line":125,"column":17}},"28":{"start":{"line":126,"column":2},"end":{"line":126,"column":18}},"29":{"start":{"line":127,"column":2},"end":{"line":141,"column":3}},"30":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"31":{"start":{"line":129,"column":4},"end":{"line":129,"column":69}},"32":{"start":{"line":130,"column":4},"end":{"line":130,"column":40}},"33":{"start":{"line":132,"column":4},"end":{"line":132,"column":17}},"34":{"start":{"line":133,"column":4},"end":{"line":140,"column":5}},"35":{"start":{"line":134,"column":6},"end":{"line":134,"column":29}},"36":{"start":{"line":136,"column":6},"end":{"line":138,"column":7}},"37":{"start":{"line":137,"column":8},"end":{"line":137,"column":30}},"38":{"start":{"line":139,"column":6},"end":{"line":139,"column":36}},"39":{"start":{"line":150,"column":0},"end":{"line":152,"column":2}},"40":{"start":{"line":151,"column":2},"end":{"line":151,"column":20}},"41":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"42":{"start":{"line":161,"column":2},"end":{"line":161,"column":19}},"43":{"start":{"line":170,"column":0},"end":{"line":173,"column":2}},"44":{"start":{"line":171,"column":2},"end":{"line":172,"column":51}},"45":{"start":{"line":181,"column":0},"end":{"line":197,"column":2}},"46":{"start":{"line":182,"column":2},"end":{"line":196,"column":3}},"47":{"start":{"line":183,"column":4},"end":{"line":187,"column":5}},"48":{"start":{"line":184,"column":6},"end":{"line":184,"column":16}},"49":{"start":{"line":186,"column":6},"end":{"line":186,"column":43}},"50":{"start":{"line":189,"column":4},"end":{"line":189,"column":55}},"51":{"start":{"line":190,"column":4},"end":{"line":194,"column":5}},"52":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":14}},"54":{"start":{"line":195,"column":4},"end":{"line":195,"column":48}},"55":{"start":{"line":205,"column":0},"end":{"line":207,"column":2}},"56":{"start":{"line":206,"column":2},"end":{"line":206,"column":43}},"57":{"start":{"line":215,"column":0},"end":{"line":217,"column":2}},"58":{"start":{"line":216,"column":2},"end":{"line":216,"column":24}},"59":{"start":{"line":225,"column":0},"end":{"line":227,"column":2}},"60":{"start":{"line":226,"column":2},"end":{"line":226,"column":30}},"61":{"start":{"line":236,"column":0},"end":{"line":238,"column":2}},"62":{"start":{"line":237,"column":2},"end":{"line":237,"column":66}},"63":{"start":{"line":247,"column":0},"end":{"line":249,"column":2}},"64":{"start":{"line":248,"column":2},"end":{"line":248,"column":66}},"65":{"start":{"line":258,"column":0},"end":{"line":260,"column":2}},"66":{"start":{"line":259,"column":2},"end":{"line":259,"column":33}},"67":{"start":{"line":269,"column":0},"end":{"line":271,"column":2}},"68":{"start":{"line":270,"column":2},"end":{"line":270,"column":34}},"69":{"start":{"line":280,"column":0},"end":{"line":282,"column":2}},"70":{"start":{"line":281,"column":2},"end":{"line":281,"column":33}},"71":{"start":{"line":291,"column":0},"end":{"line":293,"column":2}},"72":{"start":{"line":292,"column":2},"end":{"line":292,"column":34}},"73":{"start":{"line":302,"column":0},"end":{"line":322,"column":2}},"74":{"start":{"line":303,"column":2},"end":{"line":305,"column":3}},"75":{"start":{"line":304,"column":4},"end":{"line":304,"column":13}},"76":{"start":{"line":307,"column":2},"end":{"line":307,"column":34}},"77":{"start":{"line":308,"column":2},"end":{"line":308,"column":36}},"78":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"79":{"start":{"line":310,"column":4},"end":{"line":310,"column":14}},"80":{"start":{"line":312,"column":2},"end":{"line":314,"column":3}},"81":{"start":{"line":313,"column":4},"end":{"line":313,"column":13}},"82":{"start":{"line":317,"column":2},"end":{"line":321,"column":3}},"83":{"start":{"line":318,"column":4},"end":{"line":318,"column":14}},"84":{"start":{"line":320,"column":4},"end":{"line":320,"column":13}},"85":{"start":{"line":330,"column":0},"end":{"line":336,"column":2}},"86":{"start":{"line":331,"column":2},"end":{"line":335,"column":3}},"87":{"start":{"line":332,"column":4},"end":{"line":332,"column":26}},"88":{"start":{"line":334,"column":4},"end":{"line":334,"column":36}},"89":{"start":{"line":345,"column":0},"end":{"line":371,"column":2}},"90":{"start":{"line":348,"column":2},"end":{"line":348,"column":30}},"91":{"start":{"line":349,"column":2},"end":{"line":349,"column":32}},"92":{"start":{"line":350,"column":2},"end":{"line":350,"column":29}},"93":{"start":{"line":351,"column":2},"end":{"line":351,"column":31}},"94":{"start":{"line":353,"column":2},"end":{"line":353,"column":31}},"95":{"start":{"line":354,"column":2},"end":{"line":354,"column":33}},"96":{"start":{"line":355,"column":2},"end":{"line":355,"column":30}},"97":{"start":{"line":356,"column":2},"end":{"line":356,"column":32}},"98":{"start":{"line":358,"column":2},"end":{"line":358,"column":41}},"99":{"start":{"line":359,"column":2},"end":{"line":359,"column":19}},"100":{"start":{"line":360,"column":2},"end":{"line":360,"column":20}},"101":{"start":{"line":361,"column":2},"end":{"line":361,"column":16}},"102":{"start":{"line":362,"column":2},"end":{"line":362,"column":19}},"103":{"start":{"line":363,"column":2},"end":{"line":363,"column":20}},"104":{"start":{"line":364,"column":2},"end":{"line":364,"column":16}},"105":{"start":{"line":365,"column":2},"end":{"line":365,"column":19}},"106":{"start":{"line":366,"column":2},"end":{"line":366,"column":20}},"107":{"start":{"line":367,"column":2},"end":{"line":367,"column":16}},"108":{"start":{"line":368,"column":2},"end":{"line":368,"column":19}},"109":{"start":{"line":369,"column":2},"end":{"line":369,"column":16}},"110":{"start":{"line":370,"column":2},"end":{"line":370,"column":61}},"111":{"start":{"line":380,"column":0},"end":{"line":382,"column":2}},"112":{"start":{"line":381,"column":2},"end":{"line":381,"column":34}},"113":{"start":{"line":391,"column":0},"end":{"line":455,"column":2}},"114":{"start":{"line":392,"column":2},"end":{"line":396,"column":3}},"115":{"start":{"line":393,"column":4},"end":{"line":393,"column":21}},"116":{"start":{"line":394,"column":9},"end":{"line":396,"column":3}},"117":{"start":{"line":395,"column":4},"end":{"line":395,"column":21}},"118":{"start":{"line":398,"column":2},"end":{"line":402,"column":3}},"119":{"start":{"line":399,"column":4},"end":{"line":399,"column":54}},"120":{"start":{"line":400,"column":9},"end":{"line":402,"column":3}},"121":{"start":{"line":401,"column":4},"end":{"line":401,"column":53}},"122":{"start":{"line":404,"column":2},"end":{"line":412,"column":3}},"123":{"start":{"line":405,"column":4},"end":{"line":409,"column":5}},"124":{"start":{"line":406,"column":6},"end":{"line":406,"column":52}},"125":{"start":{"line":408,"column":6},"end":{"line":408,"column":52}},"126":{"start":{"line":410,"column":9},"end":{"line":412,"column":3}},"127":{"start":{"line":411,"column":4},"end":{"line":411,"column":50}},"128":{"start":{"line":415,"column":2},"end":{"line":418,"column":3}},"129":{"start":{"line":417,"column":4},"end":{"line":417,"column":63}},"130":{"start":{"line":423,"column":2},"end":{"line":423,"column":30}},"131":{"start":{"line":424,"column":2},"end":{"line":424,"column":32}},"132":{"start":{"line":425,"column":2},"end":{"line":425,"column":29}},"133":{"start":{"line":426,"column":2},"end":{"line":426,"column":31}},"134":{"start":{"line":428,"column":2},"end":{"line":428,"column":31}},"135":{"start":{"line":429,"column":2},"end":{"line":429,"column":33}},"136":{"start":{"line":430,"column":2},"end":{"line":430,"column":30}},"137":{"start":{"line":431,"column":2},"end":{"line":431,"column":32}},"138":{"start":{"line":433,"column":2},"end":{"line":433,"column":41}},"139":{"start":{"line":434,"column":2},"end":{"line":434,"column":19}},"140":{"start":{"line":435,"column":2},"end":{"line":435,"column":20}},"141":{"start":{"line":436,"column":2},"end":{"line":436,"column":16}},"142":{"start":{"line":437,"column":2},"end":{"line":437,"column":19}},"143":{"start":{"line":438,"column":2},"end":{"line":438,"column":20}},"144":{"start":{"line":439,"column":2},"end":{"line":439,"column":16}},"145":{"start":{"line":440,"column":2},"end":{"line":440,"column":19}},"146":{"start":{"line":441,"column":2},"end":{"line":441,"column":20}},"147":{"start":{"line":442,"column":2},"end":{"line":442,"column":16}},"148":{"start":{"line":443,"column":2},"end":{"line":443,"column":19}},"149":{"start":{"line":444,"column":2},"end":{"line":444,"column":20}},"150":{"start":{"line":445,"column":2},"end":{"line":445,"column":16}},"151":{"start":{"line":446,"column":2},"end":{"line":446,"column":19}},"152":{"start":{"line":447,"column":2},"end":{"line":447,"column":20}},"153":{"start":{"line":448,"column":2},"end":{"line":448,"column":16}},"154":{"start":{"line":449,"column":2},"end":{"line":449,"column":19}},"155":{"start":{"line":450,"column":2},"end":{"line":450,"column":20}},"156":{"start":{"line":451,"column":2},"end":{"line":451,"column":16}},"157":{"start":{"line":452,"column":2},"end":{"line":452,"column":55}},"158":{"start":{"line":453,"column":2},"end":{"line":453,"column":16}},"159":{"start":{"line":454,"column":2},"end":{"line":454,"column":61}},"160":{"start":{"line":464,"column":0},"end":{"line":540,"column":2}},"161":{"start":{"line":465,"column":2},"end":{"line":469,"column":3}},"162":{"start":{"line":466,"column":4},"end":{"line":466,"column":36}},"163":{"start":{"line":467,"column":9},"end":{"line":469,"column":3}},"164":{"start":{"line":468,"column":4},"end":{"line":468,"column":21}},"165":{"start":{"line":471,"column":2},"end":{"line":491,"column":3}},"166":{"start":{"line":472,"column":4},"end":{"line":488,"column":5}},"167":{"start":{"line":474,"column":6},"end":{"line":474,"column":28}},"168":{"start":{"line":475,"column":11},"end":{"line":488,"column":5}},"169":{"start":{"line":476,"column":6},"end":{"line":476,"column":22}},"170":{"start":{"line":479,"column":6},"end":{"line":479,"column":40}},"171":{"start":{"line":480,"column":6},"end":{"line":480,"column":52}},"172":{"start":{"line":481,"column":6},"end":{"line":487,"column":7}},"173":{"start":{"line":482,"column":8},"end":{"line":482,"column":60}},"174":{"start":{"line":484,"column":8},"end":{"line":484,"column":56}},"175":{"start":{"line":485,"column":8},"end":{"line":485,"column":48}},"176":{"start":{"line":486,"column":8},"end":{"line":486,"column":22}},"177":{"start":{"line":489,"column":9},"end":{"line":491,"column":3}},"178":{"start":{"line":490,"column":4},"end":{"line":490,"column":21}},"179":{"start":{"line":493,"column":2},"end":{"line":501,"column":3}},"180":{"start":{"line":494,"column":4},"end":{"line":498,"column":5}},"181":{"start":{"line":495,"column":6},"end":{"line":495,"column":47}},"182":{"start":{"line":497,"column":6},"end":{"line":497,"column":47}},"183":{"start":{"line":499,"column":9},"end":{"line":501,"column":3}},"184":{"start":{"line":500,"column":4},"end":{"line":500,"column":45}},"185":{"start":{"line":508,"column":2},"end":{"line":508,"column":22}},"186":{"start":{"line":509,"column":2},"end":{"line":509,"column":17}},"187":{"start":{"line":510,"column":2},"end":{"line":538,"column":3}},"188":{"start":{"line":513,"column":4},"end":{"line":513,"column":76}},"189":{"start":{"line":517,"column":4},"end":{"line":517,"column":54}},"190":{"start":{"line":518,"column":4},"end":{"line":518,"column":58}},"191":{"start":{"line":522,"column":4},"end":{"line":522,"column":44}},"192":{"start":{"line":523,"column":4},"end":{"line":523,"column":46}},"193":{"start":{"line":524,"column":4},"end":{"line":528,"column":5}},"194":{"start":{"line":525,"column":6},"end":{"line":525,"column":22}},"195":{"start":{"line":526,"column":6},"end":{"line":526,"column":42}},"196":{"start":{"line":527,"column":6},"end":{"line":527,"column":44}},"197":{"start":{"line":532,"column":4},"end":{"line":534,"column":5}},"198":{"start":{"line":533,"column":6},"end":{"line":533,"column":27}},"199":{"start":{"line":536,"column":4},"end":{"line":536,"column":29}},"200":{"start":{"line":537,"column":4},"end":{"line":537,"column":34}},"201":{"start":{"line":539,"column":2},"end":{"line":539,"column":13}},"202":{"start":{"line":549,"column":0},"end":{"line":551,"column":2}},"203":{"start":{"line":550,"column":2},"end":{"line":550,"column":56}},"204":{"start":{"line":559,"column":0},"end":{"line":561,"column":2}},"205":{"start":{"line":560,"column":2},"end":{"line":560,"column":48}},"206":{"start":{"line":570,"column":0},"end":{"line":572,"column":2}},"207":{"start":{"line":571,"column":2},"end":{"line":571,"column":73}},"208":{"start":{"line":581,"column":0},"end":{"line":583,"column":2}},"209":{"start":{"line":582,"column":2},"end":{"line":582,"column":73}},"210":{"start":{"line":592,"column":0},"end":{"line":594,"column":2}},"211":{"start":{"line":593,"column":2},"end":{"line":593,"column":73}},"212":{"start":{"line":603,"column":0},"end":{"line":618,"column":2}},"213":{"start":{"line":604,"column":2},"end":{"line":604,"column":16}},"214":{"start":{"line":605,"column":2},"end":{"line":617,"column":3}},"215":{"start":{"line":606,"column":4},"end":{"line":606,"column":16}},"216":{"start":{"line":608,"column":4},"end":{"line":608,"column":24}},"217":{"start":{"line":609,"column":4},"end":{"line":616,"column":5}},"218":{"start":{"line":610,"column":6},"end":{"line":610,"column":28}},"219":{"start":{"line":611,"column":6},"end":{"line":613,"column":63}},"220":{"start":{"line":615,"column":6},"end":{"line":615,"column":53}},"221":{"start":{"line":627,"column":0},"end":{"line":644,"column":2}},"222":{"start":{"line":628,"column":2},"end":{"line":628,"column":16}},"223":{"start":{"line":629,"column":2},"end":{"line":643,"column":3}},"224":{"start":{"line":630,"column":4},"end":{"line":630,"column":16}},"225":{"start":{"line":632,"column":4},"end":{"line":632,"column":26}},"226":{"start":{"line":633,"column":4},"end":{"line":642,"column":5}},"227":{"start":{"line":634,"column":6},"end":{"line":634,"column":26}},"228":{"start":{"line":635,"column":6},"end":{"line":637,"column":34}},"229":{"start":{"line":639,"column":6},"end":{"line":641,"column":37}},"230":{"start":{"line":653,"column":0},"end":{"line":670,"column":2}},"231":{"start":{"line":654,"column":2},"end":{"line":654,"column":16}},"232":{"start":{"line":655,"column":2},"end":{"line":669,"column":3}},"233":{"start":{"line":656,"column":4},"end":{"line":656,"column":16}},"234":{"start":{"line":658,"column":4},"end":{"line":658,"column":26}},"235":{"start":{"line":659,"column":4},"end":{"line":668,"column":5}},"236":{"start":{"line":660,"column":6},"end":{"line":660,"column":26}},"237":{"start":{"line":661,"column":6},"end":{"line":663,"column":35}},"238":{"start":{"line":664,"column":11},"end":{"line":668,"column":5}},"239":{"start":{"line":665,"column":6},"end":{"line":665,"column":36}},"240":{"start":{"line":667,"column":6},"end":{"line":667,"column":55}},"241":{"start":{"line":679,"column":0},"end":{"line":692,"column":2}},"242":{"start":{"line":680,"column":2},"end":{"line":685,"column":3}},"243":{"start":{"line":681,"column":4},"end":{"line":681,"column":43}},"244":{"start":{"line":682,"column":4},"end":{"line":684,"column":5}},"245":{"start":{"line":683,"column":6},"end":{"line":683,"column":23}},"246":{"start":{"line":687,"column":2},"end":{"line":687,"column":52}},"247":{"start":{"line":688,"column":2},"end":{"line":690,"column":3}},"248":{"start":{"line":689,"column":4},"end":{"line":689,"column":33}},"249":{"start":{"line":691,"column":2},"end":{"line":691,"column":13}},"250":{"start":{"line":701,"column":0},"end":{"line":715,"column":2}},"251":{"start":{"line":702,"column":2},"end":{"line":714,"column":3}},"252":{"start":{"line":703,"column":4},"end":{"line":703,"column":21}},"253":{"start":{"line":704,"column":9},"end":{"line":714,"column":3}},"254":{"start":{"line":705,"column":4},"end":{"line":705,"column":26}},"255":{"start":{"line":706,"column":9},"end":{"line":714,"column":3}},"256":{"start":{"line":707,"column":4},"end":{"line":707,"column":26}},"257":{"start":{"line":708,"column":9},"end":{"line":714,"column":3}},"258":{"start":{"line":709,"column":4},"end":{"line":709,"column":44}},"259":{"start":{"line":711,"column":4},"end":{"line":713,"column":51}},"260":{"start":{"line":725,"column":0},"end":{"line":727,"column":2}},"261":{"start":{"line":726,"column":2},"end":{"line":726,"column":37}},"262":{"start":{"line":737,"column":0},"end":{"line":770,"column":2}},"263":{"start":{"line":738,"column":2},"end":{"line":740,"column":3}},"264":{"start":{"line":739,"column":4},"end":{"line":739,"column":53}},"265":{"start":{"line":742,"column":2},"end":{"line":742,"column":30}},"266":{"start":{"line":743,"column":2},"end":{"line":745,"column":3}},"267":{"start":{"line":744,"column":4},"end":{"line":744,"column":48}},"268":{"start":{"line":747,"column":2},"end":{"line":751,"column":3}},"269":{"start":{"line":748,"column":4},"end":{"line":748,"column":61}},"270":{"start":{"line":749,"column":9},"end":{"line":751,"column":3}},"271":{"start":{"line":750,"column":4},"end":{"line":750,"column":71}},"272":{"start":{"line":755,"column":2},"end":{"line":755,"column":57}},"273":{"start":{"line":757,"column":2},"end":{"line":757,"column":25}},"274":{"start":{"line":758,"column":2},"end":{"line":768,"column":3}},"275":{"start":{"line":759,"column":4},"end":{"line":759,"column":43}},"276":{"start":{"line":760,"column":4},"end":{"line":760,"column":60}},"277":{"start":{"line":761,"column":4},"end":{"line":767,"column":5}},"278":{"start":{"line":762,"column":6},"end":{"line":762,"column":57}},"279":{"start":{"line":763,"column":6},"end":{"line":763,"column":66}},"280":{"start":{"line":765,"column":6},"end":{"line":765,"column":45}},"281":{"start":{"line":766,"column":6},"end":{"line":766,"column":50}},"282":{"start":{"line":769,"column":2},"end":{"line":769,"column":16}},"283":{"start":{"line":781,"column":0},"end":{"line":781,"column":21}},"284":{"start":{"line":792,"column":0},"end":{"line":792,"column":31}},"285":{"start":{"line":798,"column":0},"end":{"line":798,"column":31}},"286":{"start":{"line":804,"column":0},"end":{"line":804,"column":67}},"287":{"start":{"line":810,"column":0},"end":{"line":810,"column":48}},"288":{"start":{"line":816,"column":0},"end":{"line":816,"column":67}},"289":{"start":{"line":822,"column":0},"end":{"line":822,"column":67}},"290":{"start":{"line":828,"column":0},"end":{"line":828,"column":48}},"291":{"start":{"line":831,"column":0},"end":{"line":831,"column":28}},"292":{"start":{"line":834,"column":0},"end":{"line":834,"column":27}},"293":{"start":{"line":837,"column":0},"end":{"line":837,"column":32}},"294":{"start":{"line":840,"column":0},"end":{"line":841,"column":50}},"295":{"start":{"line":844,"column":0},"end":{"line":844,"column":50}},"296":{"start":{"line":850,"column":0},"end":{"line":850,"column":41}},"297":{"start":{"line":855,"column":0},"end":{"line":855,"column":22}},"298":{"start":{"line":856,"column":0},"end":{"line":856,"column":27}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"2":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":14},"end":{"line":99,"column":23}},{"start":{"line":99,"column":27},"end":{"line":99,"column":29}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"4":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":15}},{"start":{"line":100,"column":19},"end":{"line":100,"column":29}}]},"5":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"8":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"9":{"line":171,"type":"cond-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":15}},{"start":{"line":172,"column":18},"end":{"line":172,"column":50}}]},"10":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"11":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"12":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":32},"end":{"line":189,"column":42}},{"start":{"line":189,"column":45},"end":{"line":189,"column":54}}]},"13":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"14":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":29},"end":{"line":195,"column":37}},{"start":{"line":195,"column":40},"end":{"line":195,"column":47}}]},"15":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":9},"end":{"line":206,"column":24}},{"start":{"line":206,"column":28},"end":{"line":206,"column":42}}]},"16":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":10},"end":{"line":237,"column":35}},{"start":{"line":237,"column":41},"end":{"line":237,"column":64}}]},"17":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":35}},{"start":{"line":248,"column":41},"end":{"line":248,"column":64}}]},"18":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"19":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"20":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":13}},{"start":{"line":309,"column":17},"end":{"line":309,"column":26}}]},"21":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"22":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":14}},{"start":{"line":312,"column":18},"end":{"line":312,"column":26}}]},"23":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"24":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"25":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"26":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":9},"end":{"line":394,"column":9}},{"start":{"line":394,"column":9},"end":{"line":394,"column":9}}]},"27":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"28":{"line":399,"type":"cond-expr","locations":[{"start":{"line":399,"column":27},"end":{"line":399,"column":41}},{"start":{"line":399,"column":44},"end":{"line":399,"column":53}}]},"29":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":9},"end":{"line":400,"column":9}},{"start":{"line":400,"column":9},"end":{"line":400,"column":9}}]},"30":{"line":401,"type":"cond-expr","locations":[{"start":{"line":401,"column":26},"end":{"line":401,"column":40}},{"start":{"line":401,"column":43},"end":{"line":401,"column":52}}]},"31":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"32":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"33":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":9},"end":{"line":410,"column":9}},{"start":{"line":410,"column":9},"end":{"line":410,"column":9}}]},"34":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"35":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":37}},{"start":{"line":416,"column":6},"end":{"line":416,"column":38}}]},"36":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"37":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":9},"end":{"line":467,"column":9}},{"start":{"line":467,"column":9},"end":{"line":467,"column":9}}]},"38":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":471,"column":2}},{"start":{"line":471,"column":2},"end":{"line":471,"column":2}}]},"39":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":4},"end":{"line":472,"column":4}},{"start":{"line":472,"column":4},"end":{"line":472,"column":4}}]},"40":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":8},"end":{"line":472,"column":30}},{"start":{"line":473,"column":8},"end":{"line":473,"column":34}}]},"41":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":11},"end":{"line":475,"column":11}},{"start":{"line":475,"column":11},"end":{"line":475,"column":11}}]},"42":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":6},"end":{"line":481,"column":6}},{"start":{"line":481,"column":6},"end":{"line":481,"column":6}}]},"43":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":36},"end":{"line":482,"column":44}},{"start":{"line":482,"column":47},"end":{"line":482,"column":59}}]},"44":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":9},"end":{"line":489,"column":9}},{"start":{"line":489,"column":9},"end":{"line":489,"column":9}}]},"45":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"46":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"47":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":9},"end":{"line":499,"column":9}},{"start":{"line":499,"column":9},"end":{"line":499,"column":9}}]},"48":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":31},"end":{"line":518,"column":32}},{"start":{"line":518,"column":35},"end":{"line":518,"column":57}}]},"49":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":11},"end":{"line":524,"column":33}},{"start":{"line":524,"column":37},"end":{"line":524,"column":63}}]},"50":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":4}},{"start":{"line":532,"column":4},"end":{"line":532,"column":4}}]},"51":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":605,"column":2}},{"start":{"line":605,"column":2},"end":{"line":605,"column":2}}]},"52":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":609,"column":4}},{"start":{"line":609,"column":4},"end":{"line":609,"column":4}}]},"53":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":2},"end":{"line":629,"column":2}},{"start":{"line":629,"column":2},"end":{"line":629,"column":2}}]},"54":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]},"55":{"line":641,"type":"cond-expr","locations":[{"start":{"line":641,"column":29},"end":{"line":641,"column":30}},{"start":{"line":641,"column":33},"end":{"line":641,"column":35}}]},"56":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":2},"end":{"line":655,"column":2}},{"start":{"line":655,"column":2},"end":{"line":655,"column":2}}]},"57":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":659,"column":4}},{"start":{"line":659,"column":4},"end":{"line":659,"column":4}}]},"58":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":11},"end":{"line":664,"column":11}},{"start":{"line":664,"column":11},"end":{"line":664,"column":11}}]},"59":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":2},"end":{"line":680,"column":2}},{"start":{"line":680,"column":2},"end":{"line":680,"column":2}}]},"60":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":6},"end":{"line":680,"column":19}},{"start":{"line":680,"column":23},"end":{"line":680,"column":34}}]},"61":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":4},"end":{"line":682,"column":4}},{"start":{"line":682,"column":4},"end":{"line":682,"column":4}}]},"62":{"line":687,"type":"cond-expr","locations":[{"start":{"line":687,"column":44},"end":{"line":687,"column":46}},{"start":{"line":687,"column":49},"end":{"line":687,"column":50}}]},"63":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":2},"end":{"line":688,"column":2}},{"start":{"line":688,"column":2},"end":{"line":688,"column":2}}]},"64":{"line":688,"type":"binary-expr","locations":[{"start":{"line":688,"column":6},"end":{"line":688,"column":19}},{"start":{"line":688,"column":23},"end":{"line":688,"column":34}}]},"65":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":2},"end":{"line":702,"column":2}},{"start":{"line":702,"column":2},"end":{"line":702,"column":2}}]},"66":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":6},"end":{"line":702,"column":18}},{"start":{"line":702,"column":22},"end":{"line":702,"column":38}}]},"67":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":9},"end":{"line":704,"column":9}},{"start":{"line":704,"column":9},"end":{"line":704,"column":9}}]},"68":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":9},"end":{"line":706,"column":9}},{"start":{"line":706,"column":9},"end":{"line":706,"column":9}}]},"69":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":9},"end":{"line":708,"column":9}},{"start":{"line":708,"column":9},"end":{"line":708,"column":9}}]},"70":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":2},"end":{"line":738,"column":2}},{"start":{"line":738,"column":2},"end":{"line":738,"column":2}}]},"71":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":14},"end":{"line":742,"column":23}},{"start":{"line":742,"column":27},"end":{"line":742,"column":29}}]},"72":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":2},"end":{"line":743,"column":2}},{"start":{"line":743,"column":2},"end":{"line":743,"column":2}}]},"73":{"line":743,"type":"binary-expr","locations":[{"start":{"line":743,"column":6},"end":{"line":743,"column":15}},{"start":{"line":743,"column":19},"end":{"line":743,"column":29}}]},"74":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":2},"end":{"line":747,"column":2}},{"start":{"line":747,"column":2},"end":{"line":747,"column":2}}]},"75":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":9},"end":{"line":749,"column":9}},{"start":{"line":749,"column":9},"end":{"line":749,"column":9}}]},"76":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]}},"code":["// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**"," * Defines a Long class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Long\". This"," * implementation is derived from LongLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Longs."," *"," * The internal representation of a Long is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class"," * @param {number} low  the low (signed) 32 bits of the Long."," * @param {number} high the high (signed) 32 bits of the Long."," * @return {Long}"," */","function Long(low, high) {","  if(!(this instanceof Long)) return new Long(low, high);","  ","  this._bsontype = 'Long';","  /**","   * @type {number}","   * @ignore","   */","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","   * @type {number}","   * @ignore","   */","  this.high_ = high | 0;  // force into 32 signed bits.","};","","/**"," * Return the int value."," *"," * @method"," * @return {number} the value, assuming it is a 32-bit integer."," */","Long.prototype.toInt = function() {","  return this.low_;","};","","/**"," * Return the Number value."," *"," * @method"," * @return {number} the closest floating-point representation to this value."," */","Long.prototype.toNumber = function() {","  return this.high_ * Long.TWO_PWR_32_DBL_ +","         this.getLowBitsUnsigned();","};","","/**"," * Return the JSON value."," *"," * @method"," * @return {string} the JSON representation."," */","Long.prototype.toJSON = function() {","  return this.toString();","}","","/**"," * Return the String value."," *"," * @method"," * @param {number} [opt_radix] the radix in which the text should be written."," * @return {string} the textual representation of this value."," */","Long.prototype.toString = function(opt_radix) {","  var radix = opt_radix || 10;","  if (radix < 2 || 36 < radix) {","    throw Error('radix out of range: ' + radix);","  }","","  if (this.isZero()) {","    return '0';","  }","","  if (this.isNegative()) {","    if (this.equals(Long.MIN_VALUE)) {","      // We need to change the Long value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixLong = Long.fromNumber(radix);","      var div = this.div(radixLong);","      var rem = div.multiply(radixLong).subtract(this);","      return div.toString(radix) + rem.toInt().toString(radix);","    } else {","      return '-' + this.negate().toString(radix);","    }","  }","","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 6));","","  var rem = this;","  var result = '';","  while (true) {","    var remDiv = rem.div(radixToPower);","    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();","    var digits = intval.toString(radix);","","    rem = remDiv;","    if (rem.isZero()) {","      return digits + result;","    } else {","      while (digits.length < 6) {","        digits = '0' + digits;","      }","      result = '' + digits + result;","    }","  }","};","","/**"," * Return the high 32-bits value."," *"," * @method"," * @return {number} the high 32-bits as a signed value."," */","Long.prototype.getHighBits = function() {","  return this.high_;","};","","/**"," * Return the low 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as a signed value."," */","Long.prototype.getLowBits = function() {","  return this.low_;","};","","/**"," * Return the low unsigned 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as an unsigned value."," */","Long.prototype.getLowBitsUnsigned = function() {","  return (this.low_ >= 0) ?","      this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;","};","","/**"," * Returns the number of bits needed to represent the absolute value of this Long."," *"," * @method"," * @return {number} Returns the number of bits needed to represent the absolute value of this Long."," */","Long.prototype.getNumBitsAbs = function() {","  if (this.isNegative()) {","    if (this.equals(Long.MIN_VALUE)) {","      return 64;","    } else {","      return this.negate().getNumBitsAbs();","    }","  } else {","    var val = this.high_ != 0 ? this.high_ : this.low_;","    for (var bit = 31; bit > 0; bit--) {","      if ((val & (1 << bit)) != 0) {","        break;","      }","    }","    return this.high_ != 0 ? bit + 33 : bit + 1;","  }","};","","/**"," * Return whether this value is zero."," *"," * @method"," * @return {boolean} whether this value is zero."," */","Long.prototype.isZero = function() {","  return this.high_ == 0 && this.low_ == 0;","};","","/**"," * Return whether this value is negative."," *"," * @method"," * @return {boolean} whether this value is negative."," */","Long.prototype.isNegative = function() {","  return this.high_ < 0;","};","","/**"," * Return whether this value is odd."," *"," * @method"," * @return {boolean} whether this value is odd."," */","Long.prototype.isOdd = function() {","  return (this.low_ & 1) == 1;","};","","/**"," * Return whether this Long equals the other"," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long equals the other"," */","Long.prototype.equals = function(other) {","  return (this.high_ == other.high_) && (this.low_ == other.low_);","};","","/**"," * Return whether this Long does not equal the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long does not equal the other."," */","Long.prototype.notEquals = function(other) {","  return (this.high_ != other.high_) || (this.low_ != other.low_);","};","","/**"," * Return whether this Long is less than the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is less than the other."," */","Long.prototype.lessThan = function(other) {","  return this.compare(other) < 0;","};","","/**"," * Return whether this Long is less than or equal to the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is less than or equal to the other."," */","Long.prototype.lessThanOrEqual = function(other) {","  return this.compare(other) <= 0;","};","","/**"," * Return whether this Long is greater than the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is greater than the other."," */","Long.prototype.greaterThan = function(other) {","  return this.compare(other) > 0;","};","","/**"," * Return whether this Long is greater than or equal to the other."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} whether this Long is greater than or equal to the other."," */","Long.prototype.greaterThanOrEqual = function(other) {","  return this.compare(other) >= 0;","};","","/**"," * Compares this Long with the given one."," *"," * @method"," * @param {Long} other Long to compare against."," * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," */","Long.prototype.compare = function(other) {","  if (this.equals(other)) {","    return 0;","  }","","  var thisNeg = this.isNegative();","  var otherNeg = other.isNegative();","  if (thisNeg && !otherNeg) {","    return -1;","  }","  if (!thisNeg && otherNeg) {","    return 1;","  }","","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","    return -1;","  } else {","    return 1;","  }","};","","/**"," * The negation of this value."," *"," * @method"," * @return {Long} the negation of this value."," */","Long.prototype.negate = function() {","  if (this.equals(Long.MIN_VALUE)) {","    return Long.MIN_VALUE;","  } else {","    return this.not().add(Long.ONE);","  }","};","","/**"," * Returns the sum of this and the given Long."," *"," * @method"," * @param {Long} other Long to add to this one."," * @return {Long} the sum of this and the given Long."," */","Long.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ >>> 16;","  var a32 = this.high_ & 0xFFFF;","  var a16 = this.low_ >>> 16;","  var a00 = this.low_ & 0xFFFF;","","  var b48 = other.high_ >>> 16;","  var b32 = other.high_ & 0xFFFF;","  var b16 = other.low_ >>> 16;","  var b00 = other.low_ & 0xFFFF;","","  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;","  c00 += a00 + b00;","  c16 += c00 >>> 16;","  c00 &= 0xFFFF;","  c16 += a16 + b16;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c32 += a32 + b32;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c48 += a48 + b48;","  c48 &= 0xFFFF;","  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);","};","","/**"," * Returns the difference of this and the given Long."," *"," * @method"," * @param {Long} other Long to subtract from this."," * @return {Long} the difference of this and the given Long."," */","Long.prototype.subtract = function(other) {","  return this.add(other.negate());","};","","/**"," * Returns the product of this and the given Long."," *"," * @method"," * @param {Long} other Long to multiply with this."," * @return {Long} the product of this and the other."," */","Long.prototype.multiply = function(other) {","  if (this.isZero()) {","    return Long.ZERO;","  } else if (other.isZero()) {","    return Long.ZERO;","  }","","  if (this.equals(Long.MIN_VALUE)) {","    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;","  } else if (other.equals(Long.MIN_VALUE)) {","    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;","  }","","  if (this.isNegative()) {","    if (other.isNegative()) {","      return this.negate().multiply(other.negate());","    } else {","      return this.negate().multiply(other).negate();","    }","  } else if (other.isNegative()) {","    return this.multiply(other.negate()).negate();","  }","","  // If both Longs are small, use float multiplication","  if (this.lessThan(Long.TWO_PWR_24_) &&","      other.lessThan(Long.TWO_PWR_24_)) {","    return Long.fromNumber(this.toNumber() * other.toNumber());","  }","","  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ >>> 16;","  var a32 = this.high_ & 0xFFFF;","  var a16 = this.low_ >>> 16;","  var a00 = this.low_ & 0xFFFF;","","  var b48 = other.high_ >>> 16;","  var b32 = other.high_ & 0xFFFF;","  var b16 = other.low_ >>> 16;","  var b00 = other.low_ & 0xFFFF;","","  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;","  c00 += a00 * b00;","  c16 += c00 >>> 16;","  c00 &= 0xFFFF;","  c16 += a16 * b00;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c16 += a00 * b16;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c32 += a32 * b00;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c32 += a16 * b16;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c32 += a00 * b32;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;","  c48 &= 0xFFFF;","  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);","};","","/**"," * Returns this Long divided by the given one."," *"," * @method"," * @param {Long} other Long by which to divide."," * @return {Long} this Long divided by the given one."," */","Long.prototype.div = function(other) {","  if (other.isZero()) {","    throw Error('division by zero');","  } else if (this.isZero()) {","    return Long.ZERO;","  }","","  if (this.equals(Long.MIN_VALUE)) {","    if (other.equals(Long.ONE) ||","        other.equals(Long.NEG_ONE)) {","      return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Long.MIN_VALUE)) {","      return Long.ONE;","    } else {","      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","      var approx = halfThis.div(other).shiftLeft(1);","      if (approx.equals(Long.ZERO)) {","        return other.isNegative() ? Long.ONE : Long.NEG_ONE;","      } else {","        var rem = this.subtract(other.multiply(approx));","        var result = approx.add(rem.div(other));","        return result;","      }","    }","  } else if (other.equals(Long.MIN_VALUE)) {","    return Long.ZERO;","  }","","  if (this.isNegative()) {","    if (other.isNegative()) {","      return this.negate().div(other.negate());","    } else {","      return this.negate().div(other).negate();","    }","  } else if (other.isNegative()) {","    return this.div(other.negate()).negate();","  }","","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Long.ZERO;","  var rem = this;","  while (rem.greaterThanOrEqual(other)) {","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);","","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Long.fromNumber(approx);","    var approxRem = approxRes.multiply(other);","    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {","      approx -= delta;","      approxRes = Long.fromNumber(approx);","      approxRem = approxRes.multiply(other);","    }","","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","      approxRes = Long.ONE;","    }","","    res = res.add(approxRes);","    rem = rem.subtract(approxRem);","  }","  return res;","};","","/**"," * Returns this Long modulo the given one."," *"," * @method"," * @param {Long} other Long by which to mod."," * @return {Long} this Long modulo the given one."," */","Long.prototype.modulo = function(other) {","  return this.subtract(this.div(other).multiply(other));","};","","/**"," * The bitwise-NOT of this value."," *"," * @method"," * @return {Long} the bitwise-NOT of this value."," */","Long.prototype.not = function() {","  return Long.fromBits(~this.low_, ~this.high_);","};","","/**"," * Returns the bitwise-AND of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to AND."," * @return {Long} the bitwise-AND of this and the other."," */","Long.prototype.and = function(other) {","  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);","};","","/**"," * Returns the bitwise-OR of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to OR."," * @return {Long} the bitwise-OR of this and the other."," */","Long.prototype.or = function(other) {","  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);","};","","/**"," * Returns the bitwise-XOR of this Long and the given one."," *"," * @method"," * @param {Long} other the Long with which to XOR."," * @return {Long} the bitwise-XOR of this and the other."," */","Long.prototype.xor = function(other) {","  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);","};","","/**"," * Returns this Long with bits shifted to the left by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the left by the given amount."," */","Long.prototype.shiftLeft = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var low = this.low_;","    if (numBits < 32) {","      var high = this.high_;","      return Long.fromBits(","                 low << numBits,","                 (high << numBits) | (low >>> (32 - numBits)));","    } else {","      return Long.fromBits(0, low << (numBits - 32));","    }","  }","};","","/**"," * Returns this Long with bits shifted to the right by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount."," */","Long.prototype.shiftRight = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var high = this.high_;","    if (numBits < 32) {","      var low = this.low_;","      return Long.fromBits(","                 (low >>> numBits) | (high << (32 - numBits)),","                 high >> numBits);","    } else {","      return Long.fromBits(","                 high >> (numBits - 32),","                 high >= 0 ? 0 : -1);","    }","  }","};","","/**"," * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits."," */","Long.prototype.shiftRightUnsigned = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var high = this.high_;","    if (numBits < 32) {","      var low = this.low_;","      return Long.fromBits(","                 (low >>> numBits) | (high << (32 - numBits)),","                 high >>> numBits);","    } else if (numBits == 32) {","      return Long.fromBits(high, 0);","    } else {","      return Long.fromBits(high >>> (numBits - 32), 0);","    }","  }","};","","/**"," * Returns a Long representing the given (32-bit) integer value."," *"," * @method"," * @param {number} value the 32-bit integer in question."," * @return {Long} the corresponding Long value."," */","Long.fromInt = function(value) {","  if (-128 <= value && value < 128) {","    var cachedObj = Long.INT_CACHE_[value];","    if (cachedObj) {","      return cachedObj;","    }","  }","","  var obj = new Long(value | 0, value < 0 ? -1 : 0);","  if (-128 <= value && value < 128) {","    Long.INT_CACHE_[value] = obj;","  }","  return obj;","};","","/**"," * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @method"," * @param {number} value the number in question."," * @return {Long} the corresponding Long value."," */","Long.fromNumber = function(value) {","  if (isNaN(value) || !isFinite(value)) {","    return Long.ZERO;","  } else if (value <= -Long.TWO_PWR_63_DBL_) {","    return Long.MIN_VALUE;","  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {","    return Long.MAX_VALUE;","  } else if (value < 0) {","    return Long.fromNumber(-value).negate();","  } else {","    return new Long(","               (value % Long.TWO_PWR_32_DBL_) | 0,","               (value / Long.TWO_PWR_32_DBL_) | 0);","  }","};","","/**"," * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @method"," * @param {number} lowBits the low 32-bits."," * @param {number} highBits the high 32-bits."," * @return {Long} the corresponding Long value."," */","Long.fromBits = function(lowBits, highBits) {","  return new Long(lowBits, highBits);","};","","/**"," * Returns a Long representation of the given string, written using the given radix."," *"," * @method"," * @param {string} str the textual representation of the Long."," * @param {number} opt_radix the radix in which the text is written."," * @return {Long} the corresponding Long value."," */","Long.fromString = function(str, opt_radix) {","  if (str.length == 0) {","    throw Error('number format error: empty string');","  }","","  var radix = opt_radix || 10;","  if (radix < 2 || 36 < radix) {","    throw Error('radix out of range: ' + radix);","  }","","  if (str.charAt(0) == '-') {","    return Long.fromString(str.substring(1), radix).negate();","  } else if (str.indexOf('-') >= 0) {","    throw Error('number format error: interior \"-\" character: ' + str);","  }","","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Long.fromNumber(Math.pow(radix, 8));","","  var result = Long.ZERO;","  for (var i = 0; i < str.length; i += 8) {","    var size = Math.min(8, str.length - i);","    var value = parseInt(str.substring(i, i + size), radix);","    if (size < 8) {","      var power = Long.fromNumber(Math.pow(radix, size));","      result = result.multiply(power).add(Long.fromNumber(value));","    } else {","      result = result.multiply(radixToPower);","      result = result.add(Long.fromNumber(value));","    }","  }","  return result;","};","","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**"," * A cache of the Long representations of small integer values."," * @type {Object}"," * @ignore"," */","Long.INT_CACHE_ = {};","","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @ignore"," */","Long.TWO_PWR_16_DBL_ = 1 << 16;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_24_DBL_ = 1 << 24;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Long.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;","","/** @type {Long} */","Long.ZERO = Long.fromInt(0);","","/** @type {Long} */","Long.ONE = Long.fromInt(1);","","/** @type {Long} */","Long.NEG_ONE = Long.fromInt(-1);","","/** @type {Long} */","Long.MAX_VALUE =","    Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);","","/** @type {Long} */","Long.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);","","/**"," * @type {Long}"," * @ignore"," */","Long.TWO_PWR_24_ = Long.fromInt(1 << 24);","","/**"," * Expose."," */","module.exports = Long;","module.exports.Long = Long;"],"l":{"43":1,"44":18,"46":18,"51":18,"57":18,"66":1,"67":0,"76":1,"77":0,"87":1,"88":0,"98":1,"99":0,"100":0,"101":0,"104":0,"105":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"117":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"139":0,"150":1,"151":0,"160":1,"161":0,"170":1,"171":0,"181":1,"182":0,"183":0,"184":0,"186":0,"189":0,"190":0,"191":0,"192":0,"195":0,"205":1,"206":0,"215":1,"216":0,"225":1,"226":0,"236":1,"237":3,"247":1,"248":0,"258":1,"259":0,"269":1,"270":0,"280":1,"281":0,"291":1,"292":0,"302":1,"303":0,"304":0,"307":0,"308":0,"309":0,"310":0,"312":0,"313":0,"317":0,"318":0,"320":0,"330":1,"331":3,"332":0,"334":3,"345":1,"348":3,"349":3,"350":3,"351":3,"353":3,"354":3,"355":3,"356":3,"358":3,"359":3,"360":3,"361":3,"362":3,"363":3,"364":3,"365":3,"366":3,"367":3,"368":3,"369":3,"370":3,"380":1,"381":0,"391":1,"392":0,"393":0,"394":0,"395":0,"398":0,"399":0,"400":0,"401":0,"404":0,"405":0,"406":0,"408":0,"410":0,"411":0,"415":0,"417":0,"423":0,"424":0,"425":0,"426":0,"428":0,"429":0,"430":0,"431":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"464":1,"465":0,"466":0,"467":0,"468":0,"471":0,"472":0,"474":0,"475":0,"476":0,"479":0,"480":0,"481":0,"482":0,"484":0,"485":0,"486":0,"489":0,"490":0,"493":0,"494":0,"495":0,"497":0,"499":0,"500":0,"508":0,"509":0,"510":0,"513":0,"517":0,"518":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"532":0,"533":0,"536":0,"537":0,"539":0,"549":1,"550":0,"559":1,"560":3,"570":1,"571":0,"581":1,"582":0,"592":1,"593":0,"603":1,"604":0,"605":0,"606":0,"608":0,"609":0,"610":0,"611":0,"615":0,"627":1,"628":0,"629":0,"630":0,"632":0,"633":0,"634":0,"635":0,"639":0,"653":1,"654":0,"655":0,"656":0,"658":0,"659":0,"660":0,"661":0,"664":0,"665":0,"667":0,"679":1,"680":4,"681":3,"682":3,"683":0,"687":4,"688":4,"689":3,"691":4,"701":1,"702":9,"703":0,"704":9,"705":0,"706":9,"707":0,"708":9,"709":3,"711":6,"725":1,"726":8,"737":1,"738":0,"739":0,"742":0,"743":0,"744":0,"747":0,"748":0,"749":0,"750":0,"755":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"765":0,"766":0,"769":0,"781":1,"792":1,"798":1,"804":1,"810":1,"816":1,"822":1,"828":1,"831":1,"834":1,"837":1,"840":1,"844":1,"850":1,"855":1,"856":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/double.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/double.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"Double","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":23}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":38}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":26},"end":{"line":28,"column":37}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":9,"column":2},"end":{"line":9,"column":57}},"3":{"start":{"line":9,"column":32},"end":{"line":9,"column":57}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":28}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":21}},"6":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"8":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":31}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]}},"code":["/**"," * A class representation of the BSON Double type."," *"," * @class"," * @param {number} value the number we want to represent as a double."," * @return {Double}"," */","function Double(value) {","  if(!(this instanceof Double)) return new Double(value);","","  this._bsontype = 'Double';","  this.value = value;","}","","/**"," * Access the number value."," *"," * @method"," * @return {number} returns the wrapped double number."," */","Double.prototype.valueOf = function() {","  return this.value;","};","","/**"," * @ignore"," */","Double.prototype.toJSON = function() {","  return this.value;","}","","module.exports = Double;","module.exports.Double = Double;",""],"l":{"8":1,"9":0,"11":0,"12":0,"21":1,"22":0,"28":1,"29":0,"32":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/timestamp.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/timestamp.js","s":{"1":1,"2":6,"3":0,"4":6,"5":6,"6":6,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":1,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":1,"205":0,"206":1,"207":0,"208":1,"209":0,"210":1,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":4,"243":3,"244":3,"245":0,"246":4,"247":4,"248":3,"249":4,"250":1,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1,"261":2,"262":1,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1},"b":{"1":[0,6],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[3,1],"60":[4,4],"61":[0,3],"62":[1,3],"63":[3,1],"64":[4,4],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":4,"34":0,"35":2,"36":0},"fnMap":{"1":{"name":"Timestamp","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":39}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":31},"end":{"line":76,"column":42}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":29},"end":{"line":87,"column":40}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":31},"end":{"line":98,"column":51}}},"6":{"name":"(anonymous_6)","line":150,"loc":{"start":{"line":150,"column":34},"end":{"line":150,"column":45}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":33},"end":{"line":160,"column":44}}},"8":{"name":"(anonymous_8)","line":170,"loc":{"start":{"line":170,"column":41},"end":{"line":170,"column":52}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":36},"end":{"line":181,"column":47}}},"10":{"name":"(anonymous_10)","line":205,"loc":{"start":{"line":205,"column":29},"end":{"line":205,"column":40}}},"11":{"name":"(anonymous_11)","line":215,"loc":{"start":{"line":215,"column":33},"end":{"line":215,"column":44}}},"12":{"name":"(anonymous_12)","line":225,"loc":{"start":{"line":225,"column":28},"end":{"line":225,"column":39}}},"13":{"name":"(anonymous_13)","line":236,"loc":{"start":{"line":236,"column":29},"end":{"line":236,"column":45}}},"14":{"name":"(anonymous_14)","line":247,"loc":{"start":{"line":247,"column":32},"end":{"line":247,"column":48}}},"15":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":31},"end":{"line":258,"column":47}}},"16":{"name":"(anonymous_16)","line":269,"loc":{"start":{"line":269,"column":38},"end":{"line":269,"column":54}}},"17":{"name":"(anonymous_17)","line":280,"loc":{"start":{"line":280,"column":34},"end":{"line":280,"column":50}}},"18":{"name":"(anonymous_18)","line":291,"loc":{"start":{"line":291,"column":41},"end":{"line":291,"column":57}}},"19":{"name":"(anonymous_19)","line":302,"loc":{"start":{"line":302,"column":30},"end":{"line":302,"column":46}}},"20":{"name":"(anonymous_20)","line":330,"loc":{"start":{"line":330,"column":29},"end":{"line":330,"column":40}}},"21":{"name":"(anonymous_21)","line":345,"loc":{"start":{"line":345,"column":26},"end":{"line":345,"column":42}}},"22":{"name":"(anonymous_22)","line":380,"loc":{"start":{"line":380,"column":31},"end":{"line":380,"column":47}}},"23":{"name":"(anonymous_23)","line":391,"loc":{"start":{"line":391,"column":31},"end":{"line":391,"column":47}}},"24":{"name":"(anonymous_24)","line":464,"loc":{"start":{"line":464,"column":26},"end":{"line":464,"column":42}}},"25":{"name":"(anonymous_25)","line":549,"loc":{"start":{"line":549,"column":29},"end":{"line":549,"column":45}}},"26":{"name":"(anonymous_26)","line":559,"loc":{"start":{"line":559,"column":26},"end":{"line":559,"column":37}}},"27":{"name":"(anonymous_27)","line":570,"loc":{"start":{"line":570,"column":26},"end":{"line":570,"column":42}}},"28":{"name":"(anonymous_28)","line":581,"loc":{"start":{"line":581,"column":25},"end":{"line":581,"column":41}}},"29":{"name":"(anonymous_29)","line":592,"loc":{"start":{"line":592,"column":26},"end":{"line":592,"column":42}}},"30":{"name":"(anonymous_30)","line":603,"loc":{"start":{"line":603,"column":32},"end":{"line":603,"column":50}}},"31":{"name":"(anonymous_31)","line":627,"loc":{"start":{"line":627,"column":33},"end":{"line":627,"column":51}}},"32":{"name":"(anonymous_32)","line":653,"loc":{"start":{"line":653,"column":41},"end":{"line":653,"column":59}}},"33":{"name":"(anonymous_33)","line":679,"loc":{"start":{"line":679,"column":20},"end":{"line":679,"column":36}}},"34":{"name":"(anonymous_34)","line":701,"loc":{"start":{"line":701,"column":23},"end":{"line":701,"column":39}}},"35":{"name":"(anonymous_35)","line":725,"loc":{"start":{"line":725,"column":21},"end":{"line":725,"column":49}}},"36":{"name":"(anonymous_36)","line":737,"loc":{"start":{"line":737,"column":23},"end":{"line":737,"column":48}}}},"statementMap":{"1":{"start":{"line":45,"column":0},"end":{"line":59,"column":1}},"2":{"start":{"line":46,"column":2},"end":{"line":46,"column":67}},"3":{"start":{"line":46,"column":35},"end":{"line":46,"column":67}},"4":{"start":{"line":47,"column":2},"end":{"line":47,"column":31}},"5":{"start":{"line":52,"column":2},"end":{"line":52,"column":22}},"6":{"start":{"line":58,"column":2},"end":{"line":58,"column":24}},"7":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"8":{"start":{"line":67,"column":2},"end":{"line":67,"column":19}},"9":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"10":{"start":{"line":77,"column":2},"end":{"line":78,"column":35}},"11":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"12":{"start":{"line":88,"column":2},"end":{"line":88,"column":25}},"13":{"start":{"line":98,"column":0},"end":{"line":142,"column":2}},"14":{"start":{"line":99,"column":2},"end":{"line":99,"column":30}},"15":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"16":{"start":{"line":101,"column":4},"end":{"line":101,"column":48}},"17":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"18":{"start":{"line":105,"column":4},"end":{"line":105,"column":15}},"19":{"start":{"line":108,"column":2},"end":{"line":119,"column":3}},"20":{"start":{"line":109,"column":4},"end":{"line":118,"column":5}},"21":{"start":{"line":112,"column":6},"end":{"line":112,"column":55}},"22":{"start":{"line":113,"column":6},"end":{"line":113,"column":41}},"23":{"start":{"line":114,"column":6},"end":{"line":114,"column":60}},"24":{"start":{"line":115,"column":6},"end":{"line":115,"column":63}},"25":{"start":{"line":117,"column":6},"end":{"line":117,"column":49}},"26":{"start":{"line":123,"column":2},"end":{"line":123,"column":62}},"27":{"start":{"line":125,"column":2},"end":{"line":125,"column":17}},"28":{"start":{"line":126,"column":2},"end":{"line":126,"column":18}},"29":{"start":{"line":127,"column":2},"end":{"line":141,"column":3}},"30":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"31":{"start":{"line":129,"column":4},"end":{"line":129,"column":69}},"32":{"start":{"line":130,"column":4},"end":{"line":130,"column":40}},"33":{"start":{"line":132,"column":4},"end":{"line":132,"column":17}},"34":{"start":{"line":133,"column":4},"end":{"line":140,"column":5}},"35":{"start":{"line":134,"column":6},"end":{"line":134,"column":29}},"36":{"start":{"line":136,"column":6},"end":{"line":138,"column":7}},"37":{"start":{"line":137,"column":8},"end":{"line":137,"column":30}},"38":{"start":{"line":139,"column":6},"end":{"line":139,"column":36}},"39":{"start":{"line":150,"column":0},"end":{"line":152,"column":2}},"40":{"start":{"line":151,"column":2},"end":{"line":151,"column":20}},"41":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"42":{"start":{"line":161,"column":2},"end":{"line":161,"column":19}},"43":{"start":{"line":170,"column":0},"end":{"line":173,"column":2}},"44":{"start":{"line":171,"column":2},"end":{"line":172,"column":56}},"45":{"start":{"line":181,"column":0},"end":{"line":197,"column":2}},"46":{"start":{"line":182,"column":2},"end":{"line":196,"column":3}},"47":{"start":{"line":183,"column":4},"end":{"line":187,"column":5}},"48":{"start":{"line":184,"column":6},"end":{"line":184,"column":16}},"49":{"start":{"line":186,"column":6},"end":{"line":186,"column":43}},"50":{"start":{"line":189,"column":4},"end":{"line":189,"column":55}},"51":{"start":{"line":190,"column":4},"end":{"line":194,"column":5}},"52":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":14}},"54":{"start":{"line":195,"column":4},"end":{"line":195,"column":48}},"55":{"start":{"line":205,"column":0},"end":{"line":207,"column":2}},"56":{"start":{"line":206,"column":2},"end":{"line":206,"column":43}},"57":{"start":{"line":215,"column":0},"end":{"line":217,"column":2}},"58":{"start":{"line":216,"column":2},"end":{"line":216,"column":24}},"59":{"start":{"line":225,"column":0},"end":{"line":227,"column":2}},"60":{"start":{"line":226,"column":2},"end":{"line":226,"column":30}},"61":{"start":{"line":236,"column":0},"end":{"line":238,"column":2}},"62":{"start":{"line":237,"column":2},"end":{"line":237,"column":66}},"63":{"start":{"line":247,"column":0},"end":{"line":249,"column":2}},"64":{"start":{"line":248,"column":2},"end":{"line":248,"column":66}},"65":{"start":{"line":258,"column":0},"end":{"line":260,"column":2}},"66":{"start":{"line":259,"column":2},"end":{"line":259,"column":33}},"67":{"start":{"line":269,"column":0},"end":{"line":271,"column":2}},"68":{"start":{"line":270,"column":2},"end":{"line":270,"column":34}},"69":{"start":{"line":280,"column":0},"end":{"line":282,"column":2}},"70":{"start":{"line":281,"column":2},"end":{"line":281,"column":33}},"71":{"start":{"line":291,"column":0},"end":{"line":293,"column":2}},"72":{"start":{"line":292,"column":2},"end":{"line":292,"column":34}},"73":{"start":{"line":302,"column":0},"end":{"line":322,"column":2}},"74":{"start":{"line":303,"column":2},"end":{"line":305,"column":3}},"75":{"start":{"line":304,"column":4},"end":{"line":304,"column":13}},"76":{"start":{"line":307,"column":2},"end":{"line":307,"column":34}},"77":{"start":{"line":308,"column":2},"end":{"line":308,"column":36}},"78":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"79":{"start":{"line":310,"column":4},"end":{"line":310,"column":14}},"80":{"start":{"line":312,"column":2},"end":{"line":314,"column":3}},"81":{"start":{"line":313,"column":4},"end":{"line":313,"column":13}},"82":{"start":{"line":317,"column":2},"end":{"line":321,"column":3}},"83":{"start":{"line":318,"column":4},"end":{"line":318,"column":14}},"84":{"start":{"line":320,"column":4},"end":{"line":320,"column":13}},"85":{"start":{"line":330,"column":0},"end":{"line":336,"column":2}},"86":{"start":{"line":331,"column":2},"end":{"line":335,"column":3}},"87":{"start":{"line":332,"column":4},"end":{"line":332,"column":31}},"88":{"start":{"line":334,"column":4},"end":{"line":334,"column":41}},"89":{"start":{"line":345,"column":0},"end":{"line":371,"column":2}},"90":{"start":{"line":348,"column":2},"end":{"line":348,"column":30}},"91":{"start":{"line":349,"column":2},"end":{"line":349,"column":32}},"92":{"start":{"line":350,"column":2},"end":{"line":350,"column":29}},"93":{"start":{"line":351,"column":2},"end":{"line":351,"column":31}},"94":{"start":{"line":353,"column":2},"end":{"line":353,"column":31}},"95":{"start":{"line":354,"column":2},"end":{"line":354,"column":33}},"96":{"start":{"line":355,"column":2},"end":{"line":355,"column":30}},"97":{"start":{"line":356,"column":2},"end":{"line":356,"column":32}},"98":{"start":{"line":358,"column":2},"end":{"line":358,"column":41}},"99":{"start":{"line":359,"column":2},"end":{"line":359,"column":19}},"100":{"start":{"line":360,"column":2},"end":{"line":360,"column":20}},"101":{"start":{"line":361,"column":2},"end":{"line":361,"column":16}},"102":{"start":{"line":362,"column":2},"end":{"line":362,"column":19}},"103":{"start":{"line":363,"column":2},"end":{"line":363,"column":20}},"104":{"start":{"line":364,"column":2},"end":{"line":364,"column":16}},"105":{"start":{"line":365,"column":2},"end":{"line":365,"column":19}},"106":{"start":{"line":366,"column":2},"end":{"line":366,"column":20}},"107":{"start":{"line":367,"column":2},"end":{"line":367,"column":16}},"108":{"start":{"line":368,"column":2},"end":{"line":368,"column":19}},"109":{"start":{"line":369,"column":2},"end":{"line":369,"column":16}},"110":{"start":{"line":370,"column":2},"end":{"line":370,"column":66}},"111":{"start":{"line":380,"column":0},"end":{"line":382,"column":2}},"112":{"start":{"line":381,"column":2},"end":{"line":381,"column":34}},"113":{"start":{"line":391,"column":0},"end":{"line":455,"column":2}},"114":{"start":{"line":392,"column":2},"end":{"line":396,"column":3}},"115":{"start":{"line":393,"column":4},"end":{"line":393,"column":26}},"116":{"start":{"line":394,"column":9},"end":{"line":396,"column":3}},"117":{"start":{"line":395,"column":4},"end":{"line":395,"column":26}},"118":{"start":{"line":398,"column":2},"end":{"line":402,"column":3}},"119":{"start":{"line":399,"column":4},"end":{"line":399,"column":64}},"120":{"start":{"line":400,"column":9},"end":{"line":402,"column":3}},"121":{"start":{"line":401,"column":4},"end":{"line":401,"column":63}},"122":{"start":{"line":404,"column":2},"end":{"line":412,"column":3}},"123":{"start":{"line":405,"column":4},"end":{"line":409,"column":5}},"124":{"start":{"line":406,"column":6},"end":{"line":406,"column":52}},"125":{"start":{"line":408,"column":6},"end":{"line":408,"column":52}},"126":{"start":{"line":410,"column":9},"end":{"line":412,"column":3}},"127":{"start":{"line":411,"column":4},"end":{"line":411,"column":50}},"128":{"start":{"line":415,"column":2},"end":{"line":418,"column":3}},"129":{"start":{"line":417,"column":4},"end":{"line":417,"column":68}},"130":{"start":{"line":423,"column":2},"end":{"line":423,"column":30}},"131":{"start":{"line":424,"column":2},"end":{"line":424,"column":32}},"132":{"start":{"line":425,"column":2},"end":{"line":425,"column":29}},"133":{"start":{"line":426,"column":2},"end":{"line":426,"column":31}},"134":{"start":{"line":428,"column":2},"end":{"line":428,"column":31}},"135":{"start":{"line":429,"column":2},"end":{"line":429,"column":33}},"136":{"start":{"line":430,"column":2},"end":{"line":430,"column":30}},"137":{"start":{"line":431,"column":2},"end":{"line":431,"column":32}},"138":{"start":{"line":433,"column":2},"end":{"line":433,"column":41}},"139":{"start":{"line":434,"column":2},"end":{"line":434,"column":19}},"140":{"start":{"line":435,"column":2},"end":{"line":435,"column":20}},"141":{"start":{"line":436,"column":2},"end":{"line":436,"column":16}},"142":{"start":{"line":437,"column":2},"end":{"line":437,"column":19}},"143":{"start":{"line":438,"column":2},"end":{"line":438,"column":20}},"144":{"start":{"line":439,"column":2},"end":{"line":439,"column":16}},"145":{"start":{"line":440,"column":2},"end":{"line":440,"column":19}},"146":{"start":{"line":441,"column":2},"end":{"line":441,"column":20}},"147":{"start":{"line":442,"column":2},"end":{"line":442,"column":16}},"148":{"start":{"line":443,"column":2},"end":{"line":443,"column":19}},"149":{"start":{"line":444,"column":2},"end":{"line":444,"column":20}},"150":{"start":{"line":445,"column":2},"end":{"line":445,"column":16}},"151":{"start":{"line":446,"column":2},"end":{"line":446,"column":19}},"152":{"start":{"line":447,"column":2},"end":{"line":447,"column":20}},"153":{"start":{"line":448,"column":2},"end":{"line":448,"column":16}},"154":{"start":{"line":449,"column":2},"end":{"line":449,"column":19}},"155":{"start":{"line":450,"column":2},"end":{"line":450,"column":20}},"156":{"start":{"line":451,"column":2},"end":{"line":451,"column":16}},"157":{"start":{"line":452,"column":2},"end":{"line":452,"column":55}},"158":{"start":{"line":453,"column":2},"end":{"line":453,"column":16}},"159":{"start":{"line":454,"column":2},"end":{"line":454,"column":66}},"160":{"start":{"line":464,"column":0},"end":{"line":540,"column":2}},"161":{"start":{"line":465,"column":2},"end":{"line":469,"column":3}},"162":{"start":{"line":466,"column":4},"end":{"line":466,"column":36}},"163":{"start":{"line":467,"column":9},"end":{"line":469,"column":3}},"164":{"start":{"line":468,"column":4},"end":{"line":468,"column":26}},"165":{"start":{"line":471,"column":2},"end":{"line":491,"column":3}},"166":{"start":{"line":472,"column":4},"end":{"line":488,"column":5}},"167":{"start":{"line":474,"column":6},"end":{"line":474,"column":33}},"168":{"start":{"line":475,"column":11},"end":{"line":488,"column":5}},"169":{"start":{"line":476,"column":6},"end":{"line":476,"column":27}},"170":{"start":{"line":479,"column":6},"end":{"line":479,"column":40}},"171":{"start":{"line":480,"column":6},"end":{"line":480,"column":52}},"172":{"start":{"line":481,"column":6},"end":{"line":487,"column":7}},"173":{"start":{"line":482,"column":8},"end":{"line":482,"column":70}},"174":{"start":{"line":484,"column":8},"end":{"line":484,"column":56}},"175":{"start":{"line":485,"column":8},"end":{"line":485,"column":48}},"176":{"start":{"line":486,"column":8},"end":{"line":486,"column":22}},"177":{"start":{"line":489,"column":9},"end":{"line":491,"column":3}},"178":{"start":{"line":490,"column":4},"end":{"line":490,"column":26}},"179":{"start":{"line":493,"column":2},"end":{"line":501,"column":3}},"180":{"start":{"line":494,"column":4},"end":{"line":498,"column":5}},"181":{"start":{"line":495,"column":6},"end":{"line":495,"column":47}},"182":{"start":{"line":497,"column":6},"end":{"line":497,"column":47}},"183":{"start":{"line":499,"column":9},"end":{"line":501,"column":3}},"184":{"start":{"line":500,"column":4},"end":{"line":500,"column":45}},"185":{"start":{"line":508,"column":2},"end":{"line":508,"column":27}},"186":{"start":{"line":509,"column":2},"end":{"line":509,"column":17}},"187":{"start":{"line":510,"column":2},"end":{"line":538,"column":3}},"188":{"start":{"line":513,"column":4},"end":{"line":513,"column":76}},"189":{"start":{"line":517,"column":4},"end":{"line":517,"column":54}},"190":{"start":{"line":518,"column":4},"end":{"line":518,"column":58}},"191":{"start":{"line":522,"column":4},"end":{"line":522,"column":49}},"192":{"start":{"line":523,"column":4},"end":{"line":523,"column":46}},"193":{"start":{"line":524,"column":4},"end":{"line":528,"column":5}},"194":{"start":{"line":525,"column":6},"end":{"line":525,"column":22}},"195":{"start":{"line":526,"column":6},"end":{"line":526,"column":47}},"196":{"start":{"line":527,"column":6},"end":{"line":527,"column":44}},"197":{"start":{"line":532,"column":4},"end":{"line":534,"column":5}},"198":{"start":{"line":533,"column":6},"end":{"line":533,"column":32}},"199":{"start":{"line":536,"column":4},"end":{"line":536,"column":29}},"200":{"start":{"line":537,"column":4},"end":{"line":537,"column":34}},"201":{"start":{"line":539,"column":2},"end":{"line":539,"column":13}},"202":{"start":{"line":549,"column":0},"end":{"line":551,"column":2}},"203":{"start":{"line":550,"column":2},"end":{"line":550,"column":56}},"204":{"start":{"line":559,"column":0},"end":{"line":561,"column":2}},"205":{"start":{"line":560,"column":2},"end":{"line":560,"column":53}},"206":{"start":{"line":570,"column":0},"end":{"line":572,"column":2}},"207":{"start":{"line":571,"column":2},"end":{"line":571,"column":78}},"208":{"start":{"line":581,"column":0},"end":{"line":583,"column":2}},"209":{"start":{"line":582,"column":2},"end":{"line":582,"column":78}},"210":{"start":{"line":592,"column":0},"end":{"line":594,"column":2}},"211":{"start":{"line":593,"column":2},"end":{"line":593,"column":78}},"212":{"start":{"line":603,"column":0},"end":{"line":618,"column":2}},"213":{"start":{"line":604,"column":2},"end":{"line":604,"column":16}},"214":{"start":{"line":605,"column":2},"end":{"line":617,"column":3}},"215":{"start":{"line":606,"column":4},"end":{"line":606,"column":16}},"216":{"start":{"line":608,"column":4},"end":{"line":608,"column":24}},"217":{"start":{"line":609,"column":4},"end":{"line":616,"column":5}},"218":{"start":{"line":610,"column":6},"end":{"line":610,"column":28}},"219":{"start":{"line":611,"column":6},"end":{"line":613,"column":63}},"220":{"start":{"line":615,"column":6},"end":{"line":615,"column":58}},"221":{"start":{"line":627,"column":0},"end":{"line":644,"column":2}},"222":{"start":{"line":628,"column":2},"end":{"line":628,"column":16}},"223":{"start":{"line":629,"column":2},"end":{"line":643,"column":3}},"224":{"start":{"line":630,"column":4},"end":{"line":630,"column":16}},"225":{"start":{"line":632,"column":4},"end":{"line":632,"column":26}},"226":{"start":{"line":633,"column":4},"end":{"line":642,"column":5}},"227":{"start":{"line":634,"column":6},"end":{"line":634,"column":26}},"228":{"start":{"line":635,"column":6},"end":{"line":637,"column":34}},"229":{"start":{"line":639,"column":6},"end":{"line":641,"column":37}},"230":{"start":{"line":653,"column":0},"end":{"line":670,"column":2}},"231":{"start":{"line":654,"column":2},"end":{"line":654,"column":16}},"232":{"start":{"line":655,"column":2},"end":{"line":669,"column":3}},"233":{"start":{"line":656,"column":4},"end":{"line":656,"column":16}},"234":{"start":{"line":658,"column":4},"end":{"line":658,"column":26}},"235":{"start":{"line":659,"column":4},"end":{"line":668,"column":5}},"236":{"start":{"line":660,"column":6},"end":{"line":660,"column":26}},"237":{"start":{"line":661,"column":6},"end":{"line":663,"column":35}},"238":{"start":{"line":664,"column":11},"end":{"line":668,"column":5}},"239":{"start":{"line":665,"column":6},"end":{"line":665,"column":41}},"240":{"start":{"line":667,"column":6},"end":{"line":667,"column":60}},"241":{"start":{"line":679,"column":0},"end":{"line":692,"column":2}},"242":{"start":{"line":680,"column":2},"end":{"line":685,"column":3}},"243":{"start":{"line":681,"column":4},"end":{"line":681,"column":48}},"244":{"start":{"line":682,"column":4},"end":{"line":684,"column":5}},"245":{"start":{"line":683,"column":6},"end":{"line":683,"column":23}},"246":{"start":{"line":687,"column":2},"end":{"line":687,"column":57}},"247":{"start":{"line":688,"column":2},"end":{"line":690,"column":3}},"248":{"start":{"line":689,"column":4},"end":{"line":689,"column":38}},"249":{"start":{"line":691,"column":2},"end":{"line":691,"column":13}},"250":{"start":{"line":701,"column":0},"end":{"line":715,"column":2}},"251":{"start":{"line":702,"column":2},"end":{"line":714,"column":3}},"252":{"start":{"line":703,"column":4},"end":{"line":703,"column":26}},"253":{"start":{"line":704,"column":9},"end":{"line":714,"column":3}},"254":{"start":{"line":705,"column":4},"end":{"line":705,"column":31}},"255":{"start":{"line":706,"column":9},"end":{"line":714,"column":3}},"256":{"start":{"line":707,"column":4},"end":{"line":707,"column":31}},"257":{"start":{"line":708,"column":9},"end":{"line":714,"column":3}},"258":{"start":{"line":709,"column":4},"end":{"line":709,"column":49}},"259":{"start":{"line":711,"column":4},"end":{"line":713,"column":56}},"260":{"start":{"line":725,"column":0},"end":{"line":727,"column":2}},"261":{"start":{"line":726,"column":2},"end":{"line":726,"column":42}},"262":{"start":{"line":737,"column":0},"end":{"line":770,"column":2}},"263":{"start":{"line":738,"column":2},"end":{"line":740,"column":3}},"264":{"start":{"line":739,"column":4},"end":{"line":739,"column":53}},"265":{"start":{"line":742,"column":2},"end":{"line":742,"column":30}},"266":{"start":{"line":743,"column":2},"end":{"line":745,"column":3}},"267":{"start":{"line":744,"column":4},"end":{"line":744,"column":48}},"268":{"start":{"line":747,"column":2},"end":{"line":751,"column":3}},"269":{"start":{"line":748,"column":4},"end":{"line":748,"column":66}},"270":{"start":{"line":749,"column":9},"end":{"line":751,"column":3}},"271":{"start":{"line":750,"column":4},"end":{"line":750,"column":71}},"272":{"start":{"line":755,"column":2},"end":{"line":755,"column":62}},"273":{"start":{"line":757,"column":2},"end":{"line":757,"column":30}},"274":{"start":{"line":758,"column":2},"end":{"line":768,"column":3}},"275":{"start":{"line":759,"column":4},"end":{"line":759,"column":43}},"276":{"start":{"line":760,"column":4},"end":{"line":760,"column":60}},"277":{"start":{"line":761,"column":4},"end":{"line":767,"column":5}},"278":{"start":{"line":762,"column":6},"end":{"line":762,"column":62}},"279":{"start":{"line":763,"column":6},"end":{"line":763,"column":71}},"280":{"start":{"line":765,"column":6},"end":{"line":765,"column":45}},"281":{"start":{"line":766,"column":6},"end":{"line":766,"column":55}},"282":{"start":{"line":769,"column":2},"end":{"line":769,"column":16}},"283":{"start":{"line":781,"column":0},"end":{"line":781,"column":26}},"284":{"start":{"line":792,"column":0},"end":{"line":792,"column":36}},"285":{"start":{"line":798,"column":0},"end":{"line":798,"column":36}},"286":{"start":{"line":804,"column":0},"end":{"line":804,"column":82}},"287":{"start":{"line":810,"column":0},"end":{"line":810,"column":58}},"288":{"start":{"line":816,"column":0},"end":{"line":816,"column":82}},"289":{"start":{"line":822,"column":0},"end":{"line":822,"column":82}},"290":{"start":{"line":828,"column":0},"end":{"line":828,"column":58}},"291":{"start":{"line":831,"column":0},"end":{"line":831,"column":38}},"292":{"start":{"line":834,"column":0},"end":{"line":834,"column":37}},"293":{"start":{"line":837,"column":0},"end":{"line":837,"column":42}},"294":{"start":{"line":840,"column":0},"end":{"line":841,"column":55}},"295":{"start":{"line":844,"column":0},"end":{"line":844,"column":60}},"296":{"start":{"line":850,"column":0},"end":{"line":850,"column":51}},"297":{"start":{"line":855,"column":0},"end":{"line":855,"column":27}},"298":{"start":{"line":856,"column":0},"end":{"line":856,"column":37}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"2":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":14},"end":{"line":99,"column":23}},{"start":{"line":99,"column":27},"end":{"line":99,"column":29}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"4":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":15}},{"start":{"line":100,"column":19},"end":{"line":100,"column":29}}]},"5":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"6":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"8":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"9":{"line":171,"type":"cond-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":15}},{"start":{"line":172,"column":18},"end":{"line":172,"column":55}}]},"10":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"11":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"12":{"line":189,"type":"cond-expr","locations":[{"start":{"line":189,"column":32},"end":{"line":189,"column":42}},{"start":{"line":189,"column":45},"end":{"line":189,"column":54}}]},"13":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"14":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":29},"end":{"line":195,"column":37}},{"start":{"line":195,"column":40},"end":{"line":195,"column":47}}]},"15":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":9},"end":{"line":206,"column":24}},{"start":{"line":206,"column":28},"end":{"line":206,"column":42}}]},"16":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":10},"end":{"line":237,"column":35}},{"start":{"line":237,"column":41},"end":{"line":237,"column":64}}]},"17":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":35}},{"start":{"line":248,"column":41},"end":{"line":248,"column":64}}]},"18":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":2},"end":{"line":303,"column":2}},{"start":{"line":303,"column":2},"end":{"line":303,"column":2}}]},"19":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"20":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":13}},{"start":{"line":309,"column":17},"end":{"line":309,"column":26}}]},"21":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"22":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":14}},{"start":{"line":312,"column":18},"end":{"line":312,"column":26}}]},"23":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"24":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"25":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"26":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":9},"end":{"line":394,"column":9}},{"start":{"line":394,"column":9},"end":{"line":394,"column":9}}]},"27":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"28":{"line":399,"type":"cond-expr","locations":[{"start":{"line":399,"column":27},"end":{"line":399,"column":46}},{"start":{"line":399,"column":49},"end":{"line":399,"column":63}}]},"29":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":9},"end":{"line":400,"column":9}},{"start":{"line":400,"column":9},"end":{"line":400,"column":9}}]},"30":{"line":401,"type":"cond-expr","locations":[{"start":{"line":401,"column":26},"end":{"line":401,"column":45}},{"start":{"line":401,"column":48},"end":{"line":401,"column":62}}]},"31":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":2},"end":{"line":404,"column":2}},{"start":{"line":404,"column":2},"end":{"line":404,"column":2}}]},"32":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":4},"end":{"line":405,"column":4}},{"start":{"line":405,"column":4},"end":{"line":405,"column":4}}]},"33":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":9},"end":{"line":410,"column":9}},{"start":{"line":410,"column":9},"end":{"line":410,"column":9}}]},"34":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"35":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":6},"end":{"line":415,"column":42}},{"start":{"line":416,"column":6},"end":{"line":416,"column":43}}]},"36":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"37":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":9},"end":{"line":467,"column":9}},{"start":{"line":467,"column":9},"end":{"line":467,"column":9}}]},"38":{"line":471,"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":471,"column":2}},{"start":{"line":471,"column":2},"end":{"line":471,"column":2}}]},"39":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":4},"end":{"line":472,"column":4}},{"start":{"line":472,"column":4},"end":{"line":472,"column":4}}]},"40":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":8},"end":{"line":472,"column":35}},{"start":{"line":473,"column":8},"end":{"line":473,"column":39}}]},"41":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":11},"end":{"line":475,"column":11}},{"start":{"line":475,"column":11},"end":{"line":475,"column":11}}]},"42":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":6},"end":{"line":481,"column":6}},{"start":{"line":481,"column":6},"end":{"line":481,"column":6}}]},"43":{"line":482,"type":"cond-expr","locations":[{"start":{"line":482,"column":36},"end":{"line":482,"column":49}},{"start":{"line":482,"column":52},"end":{"line":482,"column":69}}]},"44":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":9},"end":{"line":489,"column":9}},{"start":{"line":489,"column":9},"end":{"line":489,"column":9}}]},"45":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"46":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"47":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":9},"end":{"line":499,"column":9}},{"start":{"line":499,"column":9},"end":{"line":499,"column":9}}]},"48":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":31},"end":{"line":518,"column":32}},{"start":{"line":518,"column":35},"end":{"line":518,"column":57}}]},"49":{"line":524,"type":"binary-expr","locations":[{"start":{"line":524,"column":11},"end":{"line":524,"column":33}},{"start":{"line":524,"column":37},"end":{"line":524,"column":63}}]},"50":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":4}},{"start":{"line":532,"column":4},"end":{"line":532,"column":4}}]},"51":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":605,"column":2}},{"start":{"line":605,"column":2},"end":{"line":605,"column":2}}]},"52":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":609,"column":4}},{"start":{"line":609,"column":4},"end":{"line":609,"column":4}}]},"53":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":2},"end":{"line":629,"column":2}},{"start":{"line":629,"column":2},"end":{"line":629,"column":2}}]},"54":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]},"55":{"line":641,"type":"cond-expr","locations":[{"start":{"line":641,"column":29},"end":{"line":641,"column":30}},{"start":{"line":641,"column":33},"end":{"line":641,"column":35}}]},"56":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":2},"end":{"line":655,"column":2}},{"start":{"line":655,"column":2},"end":{"line":655,"column":2}}]},"57":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":659,"column":4}},{"start":{"line":659,"column":4},"end":{"line":659,"column":4}}]},"58":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":11},"end":{"line":664,"column":11}},{"start":{"line":664,"column":11},"end":{"line":664,"column":11}}]},"59":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":2},"end":{"line":680,"column":2}},{"start":{"line":680,"column":2},"end":{"line":680,"column":2}}]},"60":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":6},"end":{"line":680,"column":19}},{"start":{"line":680,"column":23},"end":{"line":680,"column":34}}]},"61":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":4},"end":{"line":682,"column":4}},{"start":{"line":682,"column":4},"end":{"line":682,"column":4}}]},"62":{"line":687,"type":"cond-expr","locations":[{"start":{"line":687,"column":49},"end":{"line":687,"column":51}},{"start":{"line":687,"column":54},"end":{"line":687,"column":55}}]},"63":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":2},"end":{"line":688,"column":2}},{"start":{"line":688,"column":2},"end":{"line":688,"column":2}}]},"64":{"line":688,"type":"binary-expr","locations":[{"start":{"line":688,"column":6},"end":{"line":688,"column":19}},{"start":{"line":688,"column":23},"end":{"line":688,"column":34}}]},"65":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":2},"end":{"line":702,"column":2}},{"start":{"line":702,"column":2},"end":{"line":702,"column":2}}]},"66":{"line":702,"type":"binary-expr","locations":[{"start":{"line":702,"column":6},"end":{"line":702,"column":18}},{"start":{"line":702,"column":22},"end":{"line":702,"column":38}}]},"67":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":9},"end":{"line":704,"column":9}},{"start":{"line":704,"column":9},"end":{"line":704,"column":9}}]},"68":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":9},"end":{"line":706,"column":9}},{"start":{"line":706,"column":9},"end":{"line":706,"column":9}}]},"69":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":9},"end":{"line":708,"column":9}},{"start":{"line":708,"column":9},"end":{"line":708,"column":9}}]},"70":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":2},"end":{"line":738,"column":2}},{"start":{"line":738,"column":2},"end":{"line":738,"column":2}}]},"71":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":14},"end":{"line":742,"column":23}},{"start":{"line":742,"column":27},"end":{"line":742,"column":29}}]},"72":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":2},"end":{"line":743,"column":2}},{"start":{"line":743,"column":2},"end":{"line":743,"column":2}}]},"73":{"line":743,"type":"binary-expr","locations":[{"start":{"line":743,"column":6},"end":{"line":743,"column":15}},{"start":{"line":743,"column":19},"end":{"line":743,"column":29}}]},"74":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":2},"end":{"line":747,"column":2}},{"start":{"line":747,"column":2},"end":{"line":747,"column":2}}]},"75":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":9},"end":{"line":749,"column":9}},{"start":{"line":749,"column":9},"end":{"line":749,"column":9}}]},"76":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]}},"code":["// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//     http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","//","// Copyright 2009 Google Inc. All Rights Reserved","","/**"," * This type is for INTERNAL use in MongoDB only and should not be used in applications."," * The appropriate corresponding type is the JavaScript Date type."," * "," * Defines a Timestamp class for representing a 64-bit two's-complement"," * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This"," * implementation is derived from TimestampLib in GWT."," *"," * Constructs a 64-bit two's-complement integer, given its low and high 32-bit"," * values as *signed* integers.  See the from* functions below for more"," * convenient ways of constructing Timestamps."," *"," * The internal representation of a Timestamp is the two given signed, 32-bit values."," * We use 32-bit pieces because these are the size of integers on which"," * Javascript performs bit-operations.  For operations like addition and"," * multiplication, we split each number into 16-bit pieces, which can easily be"," * multiplied within Javascript's floating-point representation without overflow"," * or change in sign."," *"," * In the algorithms below, we frequently reduce the negative case to the"," * positive case by negating the input(s) and then post-processing the result."," * Note that we must ALWAYS check specially whether those values are MIN_VALUE"," * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as"," * a positive number, it overflows back into a negative).  Not handling this"," * case would often result in infinite recursion."," *"," * @class"," * @param {number} low  the low (signed) 32 bits of the Timestamp."," * @param {number} high the high (signed) 32 bits of the Timestamp."," */","function Timestamp(low, high) {","  if(!(this instanceof Timestamp)) return new Timestamp(low, high);","  this._bsontype = 'Timestamp';","  /**","   * @type {number}","   * @ignore","   */","  this.low_ = low | 0;  // force into 32 signed bits.","","  /**","   * @type {number}","   * @ignore","   */","  this.high_ = high | 0;  // force into 32 signed bits.","};","","/**"," * Return the int value."," *"," * @return {number} the value, assuming it is a 32-bit integer."," */","Timestamp.prototype.toInt = function() {","  return this.low_;","};","","/**"," * Return the Number value."," *"," * @method"," * @return {number} the closest floating-point representation to this value."," */","Timestamp.prototype.toNumber = function() {","  return this.high_ * Timestamp.TWO_PWR_32_DBL_ +","         this.getLowBitsUnsigned();","};","","/**"," * Return the JSON value."," *"," * @method"," * @return {string} the JSON representation."," */","Timestamp.prototype.toJSON = function() {","  return this.toString();","}","","/**"," * Return the String value."," *"," * @method"," * @param {number} [opt_radix] the radix in which the text should be written."," * @return {string} the textual representation of this value."," */","Timestamp.prototype.toString = function(opt_radix) {","  var radix = opt_radix || 10;","  if (radix < 2 || 36 < radix) {","    throw Error('radix out of range: ' + radix);","  }","","  if (this.isZero()) {","    return '0';","  }","","  if (this.isNegative()) {","    if (this.equals(Timestamp.MIN_VALUE)) {","      // We need to change the Timestamp value before it can be negated, so we remove","      // the bottom-most digit in this base and then recurse to do the rest.","      var radixTimestamp = Timestamp.fromNumber(radix);","      var div = this.div(radixTimestamp);","      var rem = div.multiply(radixTimestamp).subtract(this);","      return div.toString(radix) + rem.toInt().toString(radix);","    } else {","      return '-' + this.negate().toString(radix);","    }","  }","","  // Do several (6) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));","","  var rem = this;","  var result = '';","  while (true) {","    var remDiv = rem.div(radixToPower);","    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();","    var digits = intval.toString(radix);","","    rem = remDiv;","    if (rem.isZero()) {","      return digits + result;","    } else {","      while (digits.length < 6) {","        digits = '0' + digits;","      }","      result = '' + digits + result;","    }","  }","};","","/**"," * Return the high 32-bits value."," *"," * @method"," * @return {number} the high 32-bits as a signed value."," */","Timestamp.prototype.getHighBits = function() {","  return this.high_;","};","","/**"," * Return the low 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as a signed value."," */","Timestamp.prototype.getLowBits = function() {","  return this.low_;","};","","/**"," * Return the low unsigned 32-bits value."," *"," * @method"," * @return {number} the low 32-bits as an unsigned value."," */","Timestamp.prototype.getLowBitsUnsigned = function() {","  return (this.low_ >= 0) ?","      this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;","};","","/**"," * Returns the number of bits needed to represent the absolute value of this Timestamp."," *"," * @method"," * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp."," */","Timestamp.prototype.getNumBitsAbs = function() {","  if (this.isNegative()) {","    if (this.equals(Timestamp.MIN_VALUE)) {","      return 64;","    } else {","      return this.negate().getNumBitsAbs();","    }","  } else {","    var val = this.high_ != 0 ? this.high_ : this.low_;","    for (var bit = 31; bit > 0; bit--) {","      if ((val & (1 << bit)) != 0) {","        break;","      }","    }","    return this.high_ != 0 ? bit + 33 : bit + 1;","  }","};","","/**"," * Return whether this value is zero."," *"," * @method"," * @return {boolean} whether this value is zero."," */","Timestamp.prototype.isZero = function() {","  return this.high_ == 0 && this.low_ == 0;","};","","/**"," * Return whether this value is negative."," *"," * @method"," * @return {boolean} whether this value is negative."," */","Timestamp.prototype.isNegative = function() {","  return this.high_ < 0;","};","","/**"," * Return whether this value is odd."," *"," * @method"," * @return {boolean} whether this value is odd."," */","Timestamp.prototype.isOdd = function() {","  return (this.low_ & 1) == 1;","};","","/**"," * Return whether this Timestamp equals the other"," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp equals the other"," */","Timestamp.prototype.equals = function(other) {","  return (this.high_ == other.high_) && (this.low_ == other.low_);","};","","/**"," * Return whether this Timestamp does not equal the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp does not equal the other."," */","Timestamp.prototype.notEquals = function(other) {","  return (this.high_ != other.high_) || (this.low_ != other.low_);","};","","/**"," * Return whether this Timestamp is less than the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is less than the other."," */","Timestamp.prototype.lessThan = function(other) {","  return this.compare(other) < 0;","};","","/**"," * Return whether this Timestamp is less than or equal to the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is less than or equal to the other."," */","Timestamp.prototype.lessThanOrEqual = function(other) {","  return this.compare(other) <= 0;","};","","/**"," * Return whether this Timestamp is greater than the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is greater than the other."," */","Timestamp.prototype.greaterThan = function(other) {","  return this.compare(other) > 0;","};","","/**"," * Return whether this Timestamp is greater than or equal to the other."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} whether this Timestamp is greater than or equal to the other."," */","Timestamp.prototype.greaterThanOrEqual = function(other) {","  return this.compare(other) >= 0;","};","","/**"," * Compares this Timestamp with the given one."," *"," * @method"," * @param {Timestamp} other Timestamp to compare against."," * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater."," */","Timestamp.prototype.compare = function(other) {","  if (this.equals(other)) {","    return 0;","  }","","  var thisNeg = this.isNegative();","  var otherNeg = other.isNegative();","  if (thisNeg && !otherNeg) {","    return -1;","  }","  if (!thisNeg && otherNeg) {","    return 1;","  }","","  // at this point, the signs are the same, so subtraction will not overflow","  if (this.subtract(other).isNegative()) {","    return -1;","  } else {","    return 1;","  }","};","","/**"," * The negation of this value."," *"," * @method"," * @return {Timestamp} the negation of this value."," */","Timestamp.prototype.negate = function() {","  if (this.equals(Timestamp.MIN_VALUE)) {","    return Timestamp.MIN_VALUE;","  } else {","    return this.not().add(Timestamp.ONE);","  }","};","","/**"," * Returns the sum of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to add to this one."," * @return {Timestamp} the sum of this and the given Timestamp."," */","Timestamp.prototype.add = function(other) {","  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.","","  var a48 = this.high_ >>> 16;","  var a32 = this.high_ & 0xFFFF;","  var a16 = this.low_ >>> 16;","  var a00 = this.low_ & 0xFFFF;","","  var b48 = other.high_ >>> 16;","  var b32 = other.high_ & 0xFFFF;","  var b16 = other.low_ >>> 16;","  var b00 = other.low_ & 0xFFFF;","","  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;","  c00 += a00 + b00;","  c16 += c00 >>> 16;","  c00 &= 0xFFFF;","  c16 += a16 + b16;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c32 += a32 + b32;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c48 += a48 + b48;","  c48 &= 0xFFFF;","  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);","};","","/**"," * Returns the difference of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to subtract from this."," * @return {Timestamp} the difference of this and the given Timestamp."," */","Timestamp.prototype.subtract = function(other) {","  return this.add(other.negate());","};","","/**"," * Returns the product of this and the given Timestamp."," *"," * @method"," * @param {Timestamp} other Timestamp to multiply with this."," * @return {Timestamp} the product of this and the other."," */","Timestamp.prototype.multiply = function(other) {","  if (this.isZero()) {","    return Timestamp.ZERO;","  } else if (other.isZero()) {","    return Timestamp.ZERO;","  }","","  if (this.equals(Timestamp.MIN_VALUE)) {","    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;","  } else if (other.equals(Timestamp.MIN_VALUE)) {","    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;","  }","","  if (this.isNegative()) {","    if (other.isNegative()) {","      return this.negate().multiply(other.negate());","    } else {","      return this.negate().multiply(other).negate();","    }","  } else if (other.isNegative()) {","    return this.multiply(other.negate()).negate();","  }","","  // If both Timestamps are small, use float multiplication","  if (this.lessThan(Timestamp.TWO_PWR_24_) &&","      other.lessThan(Timestamp.TWO_PWR_24_)) {","    return Timestamp.fromNumber(this.toNumber() * other.toNumber());","  }","","  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.","  // We can skip products that would overflow.","","  var a48 = this.high_ >>> 16;","  var a32 = this.high_ & 0xFFFF;","  var a16 = this.low_ >>> 16;","  var a00 = this.low_ & 0xFFFF;","","  var b48 = other.high_ >>> 16;","  var b32 = other.high_ & 0xFFFF;","  var b16 = other.low_ >>> 16;","  var b00 = other.low_ & 0xFFFF;","","  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;","  c00 += a00 * b00;","  c16 += c00 >>> 16;","  c00 &= 0xFFFF;","  c16 += a16 * b00;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c16 += a00 * b16;","  c32 += c16 >>> 16;","  c16 &= 0xFFFF;","  c32 += a32 * b00;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c32 += a16 * b16;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c32 += a00 * b32;","  c48 += c32 >>> 16;","  c32 &= 0xFFFF;","  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;","  c48 &= 0xFFFF;","  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);","};","","/**"," * Returns this Timestamp divided by the given one."," *"," * @method"," * @param {Timestamp} other Timestamp by which to divide."," * @return {Timestamp} this Timestamp divided by the given one."," */","Timestamp.prototype.div = function(other) {","  if (other.isZero()) {","    throw Error('division by zero');","  } else if (this.isZero()) {","    return Timestamp.ZERO;","  }","","  if (this.equals(Timestamp.MIN_VALUE)) {","    if (other.equals(Timestamp.ONE) ||","        other.equals(Timestamp.NEG_ONE)) {","      return Timestamp.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE","    } else if (other.equals(Timestamp.MIN_VALUE)) {","      return Timestamp.ONE;","    } else {","      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.","      var halfThis = this.shiftRight(1);","      var approx = halfThis.div(other).shiftLeft(1);","      if (approx.equals(Timestamp.ZERO)) {","        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;","      } else {","        var rem = this.subtract(other.multiply(approx));","        var result = approx.add(rem.div(other));","        return result;","      }","    }","  } else if (other.equals(Timestamp.MIN_VALUE)) {","    return Timestamp.ZERO;","  }","","  if (this.isNegative()) {","    if (other.isNegative()) {","      return this.negate().div(other.negate());","    } else {","      return this.negate().div(other).negate();","    }","  } else if (other.isNegative()) {","    return this.div(other.negate()).negate();","  }","","  // Repeat the following until the remainder is less than other:  find a","  // floating-point that approximates remainder / other *from below*, add this","  // into the result, and subtract it from the remainder.  It is critical that","  // the approximate value is less than or equal to the real value so that the","  // remainder never becomes negative.","  var res = Timestamp.ZERO;","  var rem = this;","  while (rem.greaterThanOrEqual(other)) {","    // Approximate the result of division. This may be a little greater or","    // smaller than the actual value.","    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));","","    // We will tweak the approximate result by changing it in the 48-th digit or","    // the smallest non-fractional digit, whichever is larger.","    var log2 = Math.ceil(Math.log(approx) / Math.LN2);","    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);","","    // Decrease the approximation until it is smaller than the remainder.  Note","    // that if it is too large, the product overflows and is negative.","    var approxRes = Timestamp.fromNumber(approx);","    var approxRem = approxRes.multiply(other);","    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {","      approx -= delta;","      approxRes = Timestamp.fromNumber(approx);","      approxRem = approxRes.multiply(other);","    }","","    // We know the answer can't be zero... and actually, zero would cause","    // infinite recursion since we would make no progress.","    if (approxRes.isZero()) {","      approxRes = Timestamp.ONE;","    }","","    res = res.add(approxRes);","    rem = rem.subtract(approxRem);","  }","  return res;","};","","/**"," * Returns this Timestamp modulo the given one."," *"," * @method"," * @param {Timestamp} other Timestamp by which to mod."," * @return {Timestamp} this Timestamp modulo the given one."," */","Timestamp.prototype.modulo = function(other) {","  return this.subtract(this.div(other).multiply(other));","};","","/**"," * The bitwise-NOT of this value."," *"," * @method"," * @return {Timestamp} the bitwise-NOT of this value."," */","Timestamp.prototype.not = function() {","  return Timestamp.fromBits(~this.low_, ~this.high_);","};","","/**"," * Returns the bitwise-AND of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to AND."," * @return {Timestamp} the bitwise-AND of this and the other."," */","Timestamp.prototype.and = function(other) {","  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);","};","","/**"," * Returns the bitwise-OR of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to OR."," * @return {Timestamp} the bitwise-OR of this and the other."," */","Timestamp.prototype.or = function(other) {","  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);","};","","/**"," * Returns the bitwise-XOR of this Timestamp and the given one."," *"," * @method"," * @param {Timestamp} other the Timestamp with which to XOR."," * @return {Timestamp} the bitwise-XOR of this and the other."," */","Timestamp.prototype.xor = function(other) {","  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);","};","","/**"," * Returns this Timestamp with bits shifted to the left by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the left by the given amount."," */","Timestamp.prototype.shiftLeft = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var low = this.low_;","    if (numBits < 32) {","      var high = this.high_;","      return Timestamp.fromBits(","                 low << numBits,","                 (high << numBits) | (low >>> (32 - numBits)));","    } else {","      return Timestamp.fromBits(0, low << (numBits - 32));","    }","  }","};","","/**"," * Returns this Timestamp with bits shifted to the right by the given amount."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount."," */","Timestamp.prototype.shiftRight = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var high = this.high_;","    if (numBits < 32) {","      var low = this.low_;","      return Timestamp.fromBits(","                 (low >>> numBits) | (high << (32 - numBits)),","                 high >> numBits);","    } else {","      return Timestamp.fromBits(","                 high >> (numBits - 32),","                 high >= 0 ? 0 : -1);","    }","  }","};","","/**"," * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit."," *"," * @method"," * @param {number} numBits the number of bits by which to shift."," * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits."," */","Timestamp.prototype.shiftRightUnsigned = function(numBits) {","  numBits &= 63;","  if (numBits == 0) {","    return this;","  } else {","    var high = this.high_;","    if (numBits < 32) {","      var low = this.low_;","      return Timestamp.fromBits(","                 (low >>> numBits) | (high << (32 - numBits)),","                 high >>> numBits);","    } else if (numBits == 32) {","      return Timestamp.fromBits(high, 0);","    } else {","      return Timestamp.fromBits(high >>> (numBits - 32), 0);","    }","  }","};","","/**"," * Returns a Timestamp representing the given (32-bit) integer value."," *"," * @method"," * @param {number} value the 32-bit integer in question."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromInt = function(value) {","  if (-128 <= value && value < 128) {","    var cachedObj = Timestamp.INT_CACHE_[value];","    if (cachedObj) {","      return cachedObj;","    }","  }","","  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);","  if (-128 <= value && value < 128) {","    Timestamp.INT_CACHE_[value] = obj;","  }","  return obj;","};","","/**"," * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned."," *"," * @method"," * @param {number} value the number in question."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromNumber = function(value) {","  if (isNaN(value) || !isFinite(value)) {","    return Timestamp.ZERO;","  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {","    return Timestamp.MIN_VALUE;","  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {","    return Timestamp.MAX_VALUE;","  } else if (value < 0) {","    return Timestamp.fromNumber(-value).negate();","  } else {","    return new Timestamp(","               (value % Timestamp.TWO_PWR_32_DBL_) | 0,","               (value / Timestamp.TWO_PWR_32_DBL_) | 0);","  }","};","","/**"," * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits."," *"," * @method"," * @param {number} lowBits the low 32-bits."," * @param {number} highBits the high 32-bits."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromBits = function(lowBits, highBits) {","  return new Timestamp(lowBits, highBits);","};","","/**"," * Returns a Timestamp representation of the given string, written using the given radix."," *"," * @method"," * @param {string} str the textual representation of the Timestamp."," * @param {number} opt_radix the radix in which the text is written."," * @return {Timestamp} the corresponding Timestamp value."," */","Timestamp.fromString = function(str, opt_radix) {","  if (str.length == 0) {","    throw Error('number format error: empty string');","  }","","  var radix = opt_radix || 10;","  if (radix < 2 || 36 < radix) {","    throw Error('radix out of range: ' + radix);","  }","","  if (str.charAt(0) == '-') {","    return Timestamp.fromString(str.substring(1), radix).negate();","  } else if (str.indexOf('-') >= 0) {","    throw Error('number format error: interior \"-\" character: ' + str);","  }","","  // Do several (8) digits each time through the loop, so as to","  // minimize the calls to the very expensive emulated div.","  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));","","  var result = Timestamp.ZERO;","  for (var i = 0; i < str.length; i += 8) {","    var size = Math.min(8, str.length - i);","    var value = parseInt(str.substring(i, i + size), radix);","    if (size < 8) {","      var power = Timestamp.fromNumber(Math.pow(radix, size));","      result = result.multiply(power).add(Timestamp.fromNumber(value));","    } else {","      result = result.multiply(radixToPower);","      result = result.add(Timestamp.fromNumber(value));","    }","  }","  return result;","};","","// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the","// from* methods on which they depend.","","","/**"," * A cache of the Timestamp representations of small integer values."," * @type {Object}"," * @ignore"," */","Timestamp.INT_CACHE_ = {};","","// NOTE: the compiler should inline these constant values below and then remove","// these variables, so there should be no runtime penalty for these.","","/**"," * Number used repeated below in calculations.  This must appear before the"," * first call to any from* function below."," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_16_DBL_ = 1 << 16;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_24_DBL_ = 1 << 24;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;","","/**"," * @type {number}"," * @ignore"," */","Timestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;","","/** @type {Timestamp} */","Timestamp.ZERO = Timestamp.fromInt(0);","","/** @type {Timestamp} */","Timestamp.ONE = Timestamp.fromInt(1);","","/** @type {Timestamp} */","Timestamp.NEG_ONE = Timestamp.fromInt(-1);","","/** @type {Timestamp} */","Timestamp.MAX_VALUE =","    Timestamp.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);","","/** @type {Timestamp} */","Timestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);","","/**"," * @type {Timestamp}"," * @ignore"," */","Timestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);","","/**"," * Expose."," */","module.exports = Timestamp;","module.exports.Timestamp = Timestamp;"],"l":{"45":1,"46":6,"47":6,"52":6,"58":6,"66":1,"67":0,"76":1,"77":0,"87":1,"88":0,"98":1,"99":0,"100":0,"101":0,"104":0,"105":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"117":0,"123":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"139":0,"150":1,"151":0,"160":1,"161":0,"170":1,"171":0,"181":1,"182":0,"183":0,"184":0,"186":0,"189":0,"190":0,"191":0,"192":0,"195":0,"205":1,"206":0,"215":1,"216":0,"225":1,"226":0,"236":1,"237":0,"247":1,"248":0,"258":1,"259":0,"269":1,"270":0,"280":1,"281":0,"291":1,"292":0,"302":1,"303":0,"304":0,"307":0,"308":0,"309":0,"310":0,"312":0,"313":0,"317":0,"318":0,"320":0,"330":1,"331":0,"332":0,"334":0,"345":1,"348":0,"349":0,"350":0,"351":0,"353":0,"354":0,"355":0,"356":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"380":1,"381":0,"391":1,"392":0,"393":0,"394":0,"395":0,"398":0,"399":0,"400":0,"401":0,"404":0,"405":0,"406":0,"408":0,"410":0,"411":0,"415":0,"417":0,"423":0,"424":0,"425":0,"426":0,"428":0,"429":0,"430":0,"431":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"464":1,"465":0,"466":0,"467":0,"468":0,"471":0,"472":0,"474":0,"475":0,"476":0,"479":0,"480":0,"481":0,"482":0,"484":0,"485":0,"486":0,"489":0,"490":0,"493":0,"494":0,"495":0,"497":0,"499":0,"500":0,"508":0,"509":0,"510":0,"513":0,"517":0,"518":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"532":0,"533":0,"536":0,"537":0,"539":0,"549":1,"550":0,"559":1,"560":0,"570":1,"571":0,"581":1,"582":0,"592":1,"593":0,"603":1,"604":0,"605":0,"606":0,"608":0,"609":0,"610":0,"611":0,"615":0,"627":1,"628":0,"629":0,"630":0,"632":0,"633":0,"634":0,"635":0,"639":0,"653":1,"654":0,"655":0,"656":0,"658":0,"659":0,"660":0,"661":0,"664":0,"665":0,"667":0,"679":1,"680":4,"681":3,"682":3,"683":0,"687":4,"688":4,"689":3,"691":4,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"711":0,"725":1,"726":2,"737":1,"738":0,"739":0,"742":0,"743":0,"744":0,"747":0,"748":0,"749":0,"750":0,"755":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"765":0,"766":0,"769":0,"781":1,"792":1,"798":1,"804":1,"810":1,"816":1,"822":1,"828":1,"831":1,"834":1,"837":1,"840":1,"844":1,"850":1,"855":1,"856":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/objectid.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/objectid.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":256,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":1,"80":1,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":1,"101":1,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":1,"113":1,"114":10,"115":1,"116":6,"117":1,"118":1,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":6,"147":0,"148":0,"149":0,"150":0,"151":1,"152":1,"153":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[16,240],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":6,"16":0},"fnMap":{"1":{"name":"ObjectID","line":28,"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":37}}},"2":{"name":"(anonymous_2)","line":83,"loc":{"start":{"line":83,"column":33},"end":{"line":83,"column":44}}},"3":{"name":"(anonymous_3)","line":112,"loc":{"start":{"line":112,"column":29},"end":{"line":112,"column":40}}},"4":{"name":"(anonymous_4)","line":123,"loc":{"start":{"line":123,"column":28},"end":{"line":123,"column":39}}},"5":{"name":"(anonymous_5)","line":134,"loc":{"start":{"line":134,"column":30},"end":{"line":134,"column":45}}},"6":{"name":"(anonymous_6)","line":171,"loc":{"start":{"line":171,"column":30},"end":{"line":171,"column":47}}},"7":{"name":"(anonymous_7)","line":195,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":39}}},"8":{"name":"equals","line":206,"loc":{"start":{"line":206,"column":28},"end":{"line":206,"column":54}}},"9":{"name":"(anonymous_9)","line":230,"loc":{"start":{"line":230,"column":34},"end":{"line":230,"column":45}}},"10":{"name":"createPk","line":245,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":41}}},"11":{"name":"createFromTime","line":256,"loc":{"start":{"line":256,"column":26},"end":{"line":256,"column":57}}},"12":{"name":"(anonymous_12)","line":275,"loc":{"start":{"line":275,"column":19},"end":{"line":275,"column":35}}},"13":{"name":"createFromHexString","line":286,"loc":{"start":{"line":286,"column":31},"end":{"line":286,"column":69}}},"14":{"name":"isValid","line":313,"loc":{"start":{"line":313,"column":19},"end":{"line":313,"column":40}}},"15":{"name":"(anonymous_15)","line":345,"loc":{"start":{"line":345,"column":8},"end":{"line":345,"column":20}}},"16":{"name":"(anonymous_16)","line":348,"loc":{"start":{"line":348,"column":8},"end":{"line":348,"column":25}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":56}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":56}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"4":{"start":{"line":16,"column":0},"end":{"line":18,"column":15}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":49}},"6":{"start":{"line":17,"column":28},"end":{"line":17,"column":49}},"7":{"start":{"line":28,"column":0},"end":{"line":66,"column":2}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":39}},"9":{"start":{"line":30,"column":29},"end":{"line":30,"column":39}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":58}},"11":{"start":{"line":31,"column":34},"end":{"line":31,"column":58}},"12":{"start":{"line":33,"column":2},"end":{"line":33,"column":30}},"13":{"start":{"line":36,"column":2},"end":{"line":43,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":65}},"16":{"start":{"line":40,"column":32},"end":{"line":40,"column":65}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":11}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":35}},"19":{"start":{"line":49,"column":2},"end":{"line":63,"column":3}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":111}},"21":{"start":{"line":51,"column":9},"end":{"line":63,"column":3}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":47}},"23":{"start":{"line":53,"column":9},"end":{"line":63,"column":3}},"24":{"start":{"line":54,"column":4},"end":{"line":54,"column":44}},"25":{"start":{"line":55,"column":9},"end":{"line":63,"column":3}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"27":{"start":{"line":58,"column":9},"end":{"line":63,"column":3}},"28":{"start":{"line":60,"column":4},"end":{"line":60,"column":14}},"29":{"start":{"line":62,"column":4},"end":{"line":62,"column":111}},"30":{"start":{"line":65,"column":2},"end":{"line":65,"column":63}},"31":{"start":{"line":65,"column":30},"end":{"line":65,"column":63}},"32":{"start":{"line":69,"column":0},"end":{"line":69,"column":24}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":18}},"34":{"start":{"line":73,"column":0},"end":{"line":75,"column":1}},"35":{"start":{"line":74,"column":2},"end":{"line":74,"column":54}},"36":{"start":{"line":83,"column":0},"end":{"line":103,"column":2}},"37":{"start":{"line":84,"column":2},"end":{"line":84,"column":60}},"38":{"start":{"line":84,"column":43},"end":{"line":84,"column":60}},"39":{"start":{"line":86,"column":2},"end":{"line":86,"column":21}},"40":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"41":{"start":{"line":88,"column":4},"end":{"line":88,"column":131}},"42":{"start":{"line":91,"column":2},"end":{"line":95,"column":3}},"43":{"start":{"line":92,"column":4},"end":{"line":92,"column":38}},"44":{"start":{"line":93,"column":4},"end":{"line":93,"column":54}},"45":{"start":{"line":93,"column":32},"end":{"line":93,"column":54}},"46":{"start":{"line":94,"column":4},"end":{"line":94,"column":21}},"47":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"48":{"start":{"line":98,"column":4},"end":{"line":98,"column":49}},"49":{"start":{"line":101,"column":2},"end":{"line":101,"column":52}},"50":{"start":{"line":101,"column":30},"end":{"line":101,"column":52}},"51":{"start":{"line":102,"column":2},"end":{"line":102,"column":19}},"52":{"start":{"line":112,"column":0},"end":{"line":114,"column":2}},"53":{"start":{"line":113,"column":2},"end":{"line":113,"column":58}},"54":{"start":{"line":123,"column":0},"end":{"line":125,"column":2}},"55":{"start":{"line":124,"column":2},"end":{"line":124,"column":24}},"56":{"start":{"line":134,"column":0},"end":{"line":162,"column":2}},"57":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"58":{"start":{"line":136,"column":4},"end":{"line":136,"column":31}},"59":{"start":{"line":140,"column":2},"end":{"line":140,"column":105}},"60":{"start":{"line":141,"column":2},"end":{"line":141,"column":27}},"61":{"start":{"line":143,"column":2},"end":{"line":143,"column":30}},"62":{"start":{"line":145,"column":2},"end":{"line":145,"column":26}},"63":{"start":{"line":146,"column":2},"end":{"line":146,"column":33}},"64":{"start":{"line":147,"column":2},"end":{"line":147,"column":34}},"65":{"start":{"line":148,"column":2},"end":{"line":148,"column":34}},"66":{"start":{"line":150,"column":2},"end":{"line":150,"column":32}},"67":{"start":{"line":151,"column":2},"end":{"line":151,"column":39}},"68":{"start":{"line":152,"column":2},"end":{"line":152,"column":40}},"69":{"start":{"line":154,"column":2},"end":{"line":154,"column":25}},"70":{"start":{"line":155,"column":2},"end":{"line":155,"column":32}},"71":{"start":{"line":157,"column":2},"end":{"line":157,"column":26}},"72":{"start":{"line":158,"column":2},"end":{"line":158,"column":33}},"73":{"start":{"line":159,"column":2},"end":{"line":159,"column":33}},"74":{"start":{"line":161,"column":2},"end":{"line":161,"column":16}},"75":{"start":{"line":171,"column":0},"end":{"line":179,"column":2}},"76":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"77":{"start":{"line":174,"column":4},"end":{"line":174,"column":73}},"78":{"start":{"line":178,"column":2},"end":{"line":178,"column":28}},"79":{"start":{"line":187,"column":0},"end":{"line":187,"column":57}},"80":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"81":{"start":{"line":196,"column":2},"end":{"line":196,"column":28}},"82":{"start":{"line":206,"column":0},"end":{"line":222,"column":1}},"83":{"start":{"line":207,"column":2},"end":{"line":207,"column":9}},"84":{"start":{"line":209,"column":2},"end":{"line":221,"column":3}},"85":{"start":{"line":210,"column":4},"end":{"line":210,"column":49}},"86":{"start":{"line":211,"column":9},"end":{"line":221,"column":3}},"87":{"start":{"line":212,"column":4},"end":{"line":212,"column":50}},"88":{"start":{"line":213,"column":9},"end":{"line":221,"column":3}},"89":{"start":{"line":214,"column":4},"end":{"line":214,"column":56}},"90":{"start":{"line":215,"column":9},"end":{"line":221,"column":3}},"91":{"start":{"line":216,"column":4},"end":{"line":216,"column":31}},"92":{"start":{"line":217,"column":9},"end":{"line":221,"column":3}},"93":{"start":{"line":218,"column":4},"end":{"line":218,"column":56}},"94":{"start":{"line":220,"column":4},"end":{"line":220,"column":17}},"95":{"start":{"line":230,"column":0},"end":{"line":235,"column":1}},"96":{"start":{"line":231,"column":2},"end":{"line":231,"column":29}},"97":{"start":{"line":232,"column":2},"end":{"line":232,"column":80}},"98":{"start":{"line":233,"column":2},"end":{"line":233,"column":45}},"99":{"start":{"line":234,"column":2},"end":{"line":234,"column":19}},"100":{"start":{"line":240,"column":0},"end":{"line":240,"column":46}},"101":{"start":{"line":245,"column":0},"end":{"line":247,"column":2}},"102":{"start":{"line":246,"column":2},"end":{"line":246,"column":24}},"103":{"start":{"line":256,"column":0},"end":{"line":265,"column":2}},"104":{"start":{"line":257,"column":2},"end":{"line":257,"column":64}},"105":{"start":{"line":259,"column":2},"end":{"line":259,"column":26}},"106":{"start":{"line":260,"column":2},"end":{"line":260,"column":33}},"107":{"start":{"line":261,"column":2},"end":{"line":261,"column":34}},"108":{"start":{"line":262,"column":2},"end":{"line":262,"column":34}},"109":{"start":{"line":264,"column":2},"end":{"line":264,"column":30}},"110":{"start":{"line":268,"column":0},"end":{"line":268,"column":47}},"111":{"start":{"line":269,"column":0},"end":{"line":269,"column":21}},"112":{"start":{"line":270,"column":0},"end":{"line":270,"column":9}},"113":{"start":{"line":271,"column":0},"end":{"line":271,"column":43}},"114":{"start":{"line":271,"column":15},"end":{"line":271,"column":43}},"115":{"start":{"line":272,"column":0},"end":{"line":272,"column":78}},"116":{"start":{"line":272,"column":15},"end":{"line":272,"column":78}},"117":{"start":{"line":274,"column":0},"end":{"line":274,"column":21}},"118":{"start":{"line":275,"column":0},"end":{"line":277,"column":1}},"119":{"start":{"line":276,"column":2},"end":{"line":276,"column":31}},"120":{"start":{"line":286,"column":0},"end":{"line":305,"column":2}},"121":{"start":{"line":288,"column":2},"end":{"line":290,"column":3}},"122":{"start":{"line":289,"column":4},"end":{"line":289,"column":111}},"123":{"start":{"line":293,"column":2},"end":{"line":293,"column":67}},"124":{"start":{"line":293,"column":20},"end":{"line":293,"column":67}},"125":{"start":{"line":296,"column":2},"end":{"line":296,"column":30}},"126":{"start":{"line":297,"column":2},"end":{"line":297,"column":12}},"127":{"start":{"line":298,"column":2},"end":{"line":298,"column":12}},"128":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"129":{"start":{"line":301,"column":4},"end":{"line":301,"column":97}},"130":{"start":{"line":304,"column":2},"end":{"line":304,"column":29}},"131":{"start":{"line":313,"column":0},"end":{"line":338,"column":2}},"132":{"start":{"line":314,"column":2},"end":{"line":314,"column":30}},"133":{"start":{"line":314,"column":17},"end":{"line":314,"column":30}},"134":{"start":{"line":316,"column":2},"end":{"line":318,"column":3}},"135":{"start":{"line":317,"column":4},"end":{"line":317,"column":16}},"136":{"start":{"line":320,"column":2},"end":{"line":322,"column":3}},"137":{"start":{"line":321,"column":4},"end":{"line":321,"column":78}},"138":{"start":{"line":324,"column":2},"end":{"line":326,"column":3}},"139":{"start":{"line":325,"column":4},"end":{"line":325,"column":16}},"140":{"start":{"line":328,"column":2},"end":{"line":330,"column":3}},"141":{"start":{"line":329,"column":4},"end":{"line":329,"column":16}},"142":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"143":{"start":{"line":334,"column":4},"end":{"line":334,"column":87}},"144":{"start":{"line":337,"column":2},"end":{"line":337,"column":15}},"145":{"start":{"line":343,"column":0},"end":{"line":355,"column":3}},"146":{"start":{"line":346,"column":5},"end":{"line":346,"column":79}},"147":{"start":{"line":350,"column":5},"end":{"line":350,"column":31}},"148":{"start":{"line":351,"column":5},"end":{"line":351,"column":38}},"149":{"start":{"line":352,"column":5},"end":{"line":352,"column":39}},"150":{"start":{"line":353,"column":5},"end":{"line":353,"column":39}},"151":{"start":{"line":360,"column":0},"end":{"line":360,"column":26}},"152":{"start":{"line":361,"column":0},"end":{"line":361,"column":35}},"153":{"start":{"line":362,"column":0},"end":{"line":362,"column":35}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":5},"end":{"line":17,"column":11}},{"start":{"line":17,"column":15},"end":{"line":17,"column":26}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"6":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":5},"end":{"line":36,"column":15}},{"start":{"line":36,"column":19},"end":{"line":36,"column":40}}]},"7":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":5},"end":{"line":49,"column":11}},{"start":{"line":49,"column":15},"end":{"line":49,"column":25}}]},"10":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":51,"column":9}},{"start":{"line":51,"column":9},"end":{"line":51,"column":9}}]},"11":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":17}},{"start":{"line":51,"column":21},"end":{"line":51,"column":42}},{"start":{"line":51,"column":46},"end":{"line":51,"column":61}},{"start":{"line":51,"column":65},"end":{"line":51,"column":78}}]},"12":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":9}},{"start":{"line":53,"column":9},"end":{"line":53,"column":9}}]},"13":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":17}},{"start":{"line":53,"column":21},"end":{"line":53,"column":42}},{"start":{"line":53,"column":46},"end":{"line":53,"column":61}}]},"14":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":9}},{"start":{"line":55,"column":9},"end":{"line":55,"column":9}}]},"15":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":22}},{"start":{"line":55,"column":26},"end":{"line":55,"column":42}}]},"16":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":9}},{"start":{"line":58,"column":9},"end":{"line":58,"column":9}}]},"17":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":22}},{"start":{"line":58,"column":26},"end":{"line":58,"column":40}}]},"18":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"19":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":27},"end":{"line":74,"column":30}},{"start":{"line":74,"column":33},"end":{"line":74,"column":35}}]},"20":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"21":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":5},"end":{"line":84,"column":28}},{"start":{"line":84,"column":32},"end":{"line":84,"column":41}}]},"22":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"23":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":5},"end":{"line":87,"column":13}},{"start":{"line":87,"column":17},"end":{"line":87,"column":32}}]},"24":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"25":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"26":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"27":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"28":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":46},"end":{"line":140,"column":80}},{"start":{"line":140,"column":83},"end":{"line":140,"column":94}}]},"29":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"30":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":5},"end":{"line":173,"column":12}},{"start":{"line":173,"column":16},"end":{"line":173,"column":28}}]},"31":{"line":174,"type":"cond-expr","locations":[{"start":{"line":174,"column":57},"end":{"line":174,"column":63}},{"start":{"line":174,"column":66},"end":{"line":174,"column":71}}]},"32":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"33":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":9},"end":{"line":211,"column":9}},{"start":{"line":211,"column":9},"end":{"line":211,"column":9}}]},"34":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":38}},{"start":{"line":211,"column":42},"end":{"line":211,"column":67}},{"start":{"line":211,"column":71},"end":{"line":211,"column":91}},{"start":{"line":211,"column":95},"end":{"line":211,"column":121}}]},"35":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":9},"end":{"line":213,"column":9}},{"start":{"line":213,"column":9},"end":{"line":213,"column":9}}]},"36":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":12},"end":{"line":213,"column":38}},{"start":{"line":213,"column":42},"end":{"line":213,"column":67}},{"start":{"line":213,"column":71},"end":{"line":213,"column":91}}]},"37":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":9},"end":{"line":215,"column":9}},{"start":{"line":215,"column":9},"end":{"line":215,"column":9}}]},"38":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":12},"end":{"line":215,"column":38}},{"start":{"line":215,"column":42},"end":{"line":215,"column":67}},{"start":{"line":215,"column":71},"end":{"line":215,"column":91}}]},"39":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":9},"end":{"line":217,"column":9}},{"start":{"line":217,"column":9},"end":{"line":217,"column":9}}]},"40":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":12},"end":{"line":217,"column":27}},{"start":{"line":217,"column":32},"end":{"line":217,"column":59}},{"start":{"line":217,"column":63},"end":{"line":217,"column":82}}]},"41":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"42":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":5},"end":{"line":288,"column":34}},{"start":{"line":288,"column":38},"end":{"line":288,"column":52}},{"start":{"line":288,"column":56},"end":{"line":288,"column":75}}]},"43":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":2},"end":{"line":293,"column":2}},{"start":{"line":293,"column":2},"end":{"line":293,"column":2}}]},"44":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"45":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"46":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":2},"end":{"line":320,"column":2}},{"start":{"line":320,"column":2},"end":{"line":320,"column":2}}]},"47":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":11},"end":{"line":321,"column":26}},{"start":{"line":321,"column":31},"end":{"line":321,"column":46}},{"start":{"line":321,"column":50},"end":{"line":321,"column":76}}]},"48":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"49":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"50":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"51":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":11},"end":{"line":334,"column":29}},{"start":{"line":334,"column":34},"end":{"line":334,"column":52}},{"start":{"line":334,"column":56},"end":{"line":334,"column":85}}]}},"code":["/**"," * Machine id."," *"," * Create a random 3-byte value (i.e. unique for this"," * process). Other drivers use a md5 of the machine id here, but"," * that would mean an asyc call to gethostname, so we don't bother."," * @ignore"," */","var MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);","","// Regular expression that checks for hex value","var checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");","var hasBufferType = false;","","// Check if buffer exists","try {","  if(Buffer && Buffer.from) hasBufferType = true;","} catch(err) {};","","/**","* Create a new ObjectID instance","*","* @class","* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.","* @property {number} generationTime The generation time of this ObjectId instance","* @return {ObjectID} instance of ObjectID.","*/","var ObjectID = function ObjectID(id) {","  // Duck-typing to support ObjectId from different npm packages","  if(id instanceof ObjectID) return id;","  if(!(this instanceof ObjectID)) return new ObjectID(id);","","  this._bsontype = 'ObjectID';","","  // The most common usecase (blank id, new objectId instance)","  if(id == null || typeof id == 'number') {","    // Generate a new id","    this.id = this.generate(id);","    // If we are caching the hex string","    if(ObjectID.cacheHexString) this.__id = this.toString('hex');","    // Return the object","    return;","  }","","  // Check if the passed in id is valid","  var valid = ObjectID.isValid(id);","","  // Throw an error if it's not a valid setup","  if(!valid && id != null){","    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");","  } else if(valid && typeof id == 'string' && id.length == 24 && hasBufferType) {","    return new ObjectID(new Buffer(id, 'hex'));","  } else if(valid && typeof id == 'string' && id.length == 24) {","    return ObjectID.createFromHexString(id);","  } else if(id != null && id.length === 12) {","    // assume 12 byte string","    this.id = id;","  } else if(id != null && id.toHexString) {","    // Duck-typing to support ObjectId from different npm packages","    return id;","  } else {","    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");","  }","","  if(ObjectID.cacheHexString) this.__id = this.toString('hex');","};","","// Allow usage of ObjectId as well as ObjectID","var ObjectId = ObjectID;","","// Precomputed hex table enables speedy hex string conversion","var hexTable = [];","for (var i = 0; i < 256; i++) {","  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);","}","","/**","* Return the ObjectID id as a 24 byte hex string representation","*","* @method","* @return {string} return the 24 byte hex string representation.","*/","ObjectID.prototype.toHexString = function() {","  if(ObjectID.cacheHexString && this.__id) return this.__id;","","  var hexString = '';","  if(!this.id || !this.id.length) {","    throw new Error('invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' + JSON.stringify(this.id) + ']');","  }","","  if(this.id instanceof _Buffer) {","    hexString = convertToHex(this.id);","    if(ObjectID.cacheHexString) this.__id = hexString;","    return hexString;","  }","","  for (var i = 0; i < this.id.length; i++) {","    hexString += hexTable[this.id.charCodeAt(i)];","  }","","  if(ObjectID.cacheHexString) this.__id = hexString;","  return hexString;","};","","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @method","* @return {number} returns next index value.","* @ignore","*/","ObjectID.prototype.get_inc = function() {","  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;","};","","/**","* Update the ObjectID index used in generating new ObjectID's on the driver","*","* @method","* @return {number} returns next index value.","* @ignore","*/","ObjectID.prototype.getInc = function() {","  return this.get_inc();","};","","/**","* Generate a 12 byte id buffer used in ObjectID's","*","* @method","* @param {number} [time] optional parameter allowing to pass in a second based timestamp.","* @return {Buffer} return the 12 byte id buffer string.","*/","ObjectID.prototype.generate = function(time) {","  if ('number' != typeof time) {","    time = ~~(Date.now()/1000);","  }","","  // Use pid","  var pid = (typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF;","  var inc = this.get_inc();","  // Buffer used","  var buffer = new Buffer(12);","  // Encode time","  buffer[3] = time & 0xff;","  buffer[2] = (time >> 8) & 0xff;","  buffer[1] = (time >> 16) & 0xff;","  buffer[0] = (time >> 24) & 0xff;","  // Encode machine","  buffer[6] = MACHINE_ID & 0xff;","  buffer[5] = (MACHINE_ID >> 8) & 0xff;","  buffer[4] = (MACHINE_ID >> 16) & 0xff;","  // Encode pid","  buffer[8] = pid & 0xff;","  buffer[7] = (pid >> 8) & 0xff;","  // Encode index","  buffer[11] = inc & 0xff;","  buffer[10] = (inc >> 8) & 0xff;","  buffer[9] = (inc >> 16) & 0xff;","  // Return the buffer","  return buffer;","};","","/**","* Converts the id into a 24 byte hex string for printing","*","* @param {String} format The Buffer toString format parameter.","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.toString = function(format) {","  // Is the id a buffer then use the buffer toString method to return the format","  if(this.id && this.id.copy) {","    return this.id.toString(typeof format === 'string' ? format : 'hex');","  }","","  // if(this.buffer )","  return this.toHexString();","};","","/**","* Converts to a string representation of this Id.","*","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.inspect = ObjectID.prototype.toString;","","/**","* Converts to its JSON representation.","*","* @return {String} return the 24 byte hex string representation.","* @ignore","*/","ObjectID.prototype.toJSON = function() {","  return this.toHexString();","};","","/**","* Compares the equality of this ObjectID with `otherID`.","*","* @method","* @param {object} otherID ObjectID instance to compare against.","* @return {boolean} the result of comparing two ObjectID's","*/","ObjectID.prototype.equals = function equals (otherId) {","  var id;","","  if(otherId instanceof ObjectID) {","    return this.toString() == otherId.toString();","  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12 && this.id instanceof _Buffer) {","    return otherId === this.id.toString('binary');","  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 24) {","    return otherId.toLowerCase() === this.toHexString();","  } else if(typeof otherId == 'string' && ObjectID.isValid(otherId) && otherId.length == 12) {","    return otherId === this.id;","  } else if(otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {","    return otherId.toHexString() === this.toHexString();","  } else {","    return false;","  }","}","","/**","* Returns the generation date (accurate up to the second) that this ID was generated.","*","* @method","* @return {date} the generation date","*/","ObjectID.prototype.getTimestamp = function() {","  var timestamp = new Date();","  var time = this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;","  timestamp.setTime(Math.floor(time) * 1000);","  return timestamp;","}","","/**","* @ignore","*/","ObjectID.index = ~~(Math.random() * 0xFFFFFF);","","/**","* @ignore","*/","ObjectID.createPk = function createPk () {","  return new ObjectID();","};","","/**","* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.","*","* @method","* @param {number} time an integer number representing a number of seconds.","* @return {ObjectID} return the created ObjectID","*/","ObjectID.createFromTime = function createFromTime (time) {","  var buffer = new Buffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);","  // Encode time into first 4 bytes","  buffer[3] = time & 0xff;","  buffer[2] = (time >> 8) & 0xff;","  buffer[1] = (time >> 16) & 0xff;","  buffer[0] = (time >> 24) & 0xff;","  // Return the new objectId","  return new ObjectID(buffer);","};","","// Lookup tables","var encodeLookup = '0123456789abcdef'.split('')","var decodeLookup = []","var i = 0","while (i < 10) decodeLookup[0x30 + i] = i++","while (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++","","var _Buffer = Buffer;","var convertToHex = function(bytes) {","  return bytes.toString('hex');","}","","/**","* Creates an ObjectID from a hex string representation of an ObjectID.","*","* @method","* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.","* @return {ObjectID} return the created ObjectID","*/","ObjectID.createFromHexString = function createFromHexString (string) {","  // Throw an error if it's not a valid setup","  if(typeof string === 'undefined' || string != null && string.length != 24) {","    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");","  }","","  // Use Buffer.from method if available","  if(hasBufferType) return new ObjectID(new Buffer(string, 'hex'));","","  // Calculate lengths","  var array = new _Buffer(12);","  var n = 0;","  var i = 0;","","  while (i < 24) {","    array[n++] = decodeLookup[string.charCodeAt(i++)] << 4 | decodeLookup[string.charCodeAt(i++)]","  }","","  return new ObjectID(array);","};","","/**","* Checks if a value is a valid bson ObjectId","*","* @method","* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.","*/","ObjectID.isValid = function isValid(id) {","  if(id == null) return false;","","  if(typeof id == 'number') {","    return true;","  }","","  if(typeof id == 'string') {","    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));","  }","","  if(id instanceof ObjectID) {","    return true;","  }","","  if(id instanceof _Buffer) {","    return true;","  }","","  // Duck-Typing detection of ObjectId like objects","  if(id.toHexString) {","    return id.id.length == 12 || (id.id.length == 24 && checkForHexRegExp.test(id.id));","  }","","  return false;","};","","/**","* @ignore","*/","Object.defineProperty(ObjectID.prototype, \"generationTime\", {","   enumerable: true"," , get: function () {","     return this.id[3] | this.id[2] << 8 | this.id[1] << 16 | this.id[0] << 24;","   }"," , set: function (value) {","     // Encode time into first 4 bytes","     this.id[3] = value & 0xff;","     this.id[2] = (value >> 8) & 0xff;","     this.id[1] = (value >> 16) & 0xff;","     this.id[0] = (value >> 24) & 0xff;","   }","});","","/**"," * Expose."," */","module.exports = ObjectID;","module.exports.ObjectID = ObjectID;","module.exports.ObjectId = ObjectID;",""],"l":{"9":1,"12":1,"13":1,"16":1,"17":1,"28":1,"30":0,"31":0,"33":0,"36":0,"38":0,"40":0,"42":0,"46":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"60":0,"62":0,"65":0,"69":1,"72":1,"73":1,"74":256,"83":1,"84":0,"86":0,"87":0,"88":0,"91":0,"92":0,"93":0,"94":0,"97":0,"98":0,"101":0,"102":0,"112":1,"113":0,"123":1,"124":0,"134":1,"135":0,"136":0,"140":0,"141":0,"143":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"152":0,"154":0,"155":0,"157":0,"158":0,"159":0,"161":0,"171":1,"173":0,"174":0,"178":0,"187":1,"195":1,"196":0,"206":1,"207":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"220":0,"230":1,"231":0,"232":0,"233":0,"234":0,"240":1,"245":1,"246":0,"256":1,"257":0,"259":0,"260":0,"261":0,"262":0,"264":0,"268":1,"269":1,"270":1,"271":10,"272":6,"274":1,"275":1,"276":0,"286":1,"288":0,"289":0,"293":0,"296":0,"297":0,"298":0,"300":0,"301":0,"304":0,"313":1,"314":0,"316":0,"317":0,"320":0,"321":0,"324":0,"325":0,"328":0,"329":0,"333":0,"334":0,"337":0,"343":1,"346":6,"350":0,"351":0,"352":0,"353":0,"360":1,"361":1,"362":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/regexp.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/regexp.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"BSONRegExp","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":27,"column":1}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":60}},"3":{"start":{"line":8,"column":36},"end":{"line":8,"column":60}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":31}},"7":{"start":{"line":16,"column":2},"end":{"line":26,"column":3}},"8":{"start":{"line":17,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":24,"column":6},"end":{"line":24,"column":99}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":24}},{"start":{"line":12,"column":28},"end":{"line":12,"column":30}}]},"3":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":17},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":30}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"5":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":31}},{"start":{"line":18,"column":9},"end":{"line":18,"column":31}},{"start":{"line":19,"column":9},"end":{"line":19,"column":31}},{"start":{"line":20,"column":9},"end":{"line":20,"column":31}},{"start":{"line":21,"column":9},"end":{"line":21,"column":31}},{"start":{"line":22,"column":9},"end":{"line":22,"column":31}}]}},"code":["/**"," * A class representation of the BSON RegExp type."," *"," * @class"," * @return {BSONRegExp} A MinKey instance"," */","function BSONRegExp(pattern, options) {","  if(!(this instanceof BSONRegExp)) return new BSONRegExp();","","  // Execute","  this._bsontype = 'BSONRegExp';","  this.pattern = pattern || '';","  this.options = options || '';","","  // Validate options","  for(var i = 0; i < this.options.length; i++) {","    if(!(this.options[i] == 'i'","      || this.options[i] == 'm'","      || this.options[i] == 'x'","      || this.options[i] == 'l'","      || this.options[i] == 's'","      || this.options[i] == 'u'","    )) {","      throw new Error('the regular expression options [' + this.options[i] + \"] is not supported\");","    }","  }","}","","module.exports = BSONRegExp;","module.exports.BSONRegExp = BSONRegExp;",""],"l":{"7":1,"8":0,"11":0,"12":0,"13":0,"16":0,"17":0,"24":0,"29":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/symbol.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/symbol.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Symbol","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":38}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":28},"end":{"line":28,"column":39}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":38}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":26},"end":{"line":42,"column":37}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":57}},"3":{"start":{"line":10,"column":32},"end":{"line":10,"column":57}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":28}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":21}},"6":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"8":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"10":{"start":{"line":35,"column":0},"end":{"line":37,"column":1}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"12":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":20}},"14":{"start":{"line":46,"column":0},"end":{"line":46,"column":24}},"15":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]}},"code":["/**"," * A class representation of the BSON Symbol type."," *"," * @class"," * @deprecated"," * @param {string} value the string representing the symbol."," * @return {Symbol}"," */","function Symbol(value) {","  if(!(this instanceof Symbol)) return new Symbol(value);","  this._bsontype = 'Symbol';","  this.value = value;","}","","/**"," * Access the wrapped string value."," *"," * @method"," * @return {String} returns the wrapped string."," */","Symbol.prototype.valueOf = function() {","  return this.value;","};","","/**"," * @ignore"," */","Symbol.prototype.toString = function() {","  return this.value;","}","","/**"," * @ignore"," */","Symbol.prototype.inspect = function() {","  return this.value;","}","","/**"," * @ignore"," */","Symbol.prototype.toJSON = function() {","  return this.value;","}","","module.exports = Symbol;","module.exports.Symbol = Symbol;"],"l":{"9":1,"10":0,"11":0,"12":0,"21":1,"22":0,"28":1,"29":0,"35":1,"36":0,"42":1,"43":0,"46":1,"47":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/int_32.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/int_32.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":12},"end":{"line":1,"column":28}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":26},"end":{"line":14,"column":37}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":1}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":55}},"3":{"start":{"line":2,"column":31},"end":{"line":2,"column":55}},"4":{"start":{"line":4,"column":2},"end":{"line":4,"column":27}},"5":{"start":{"line":5,"column":2},"end":{"line":5,"column":21}},"6":{"start":{"line":14,"column":0},"end":{"line":16,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":20}},"8":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":23}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]}},"code":["var Int32 = function(value) {","  if(!(this instanceof Int32)) return new Int32(value);","","  this._bsontype = 'Int32';","  this.value = value;","}","","/**"," * Access the number value."," *"," * @method"," * @return {number} returns the wrapped int32 number."," */","Int32.prototype.valueOf = function() {","  return this.value;","};","","/**"," * @ignore"," */","Int32.prototype.toJSON = function() {","  return this.value;","}","","module.exports = Int32;","module.exports.Int32 = Int32;",""],"l":{"1":1,"2":0,"4":0,"5":0,"14":1,"15":0,"21":1,"22":0,"25":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/code.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/code.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Code","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":38}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":35}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":59}},"3":{"start":{"line":10,"column":30},"end":{"line":10,"column":59}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":26}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":21}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":44}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]}},"code":["/**"," * A class representation of the BSON Code type."," *"," * @class"," * @param {(string|function)} code a string or function."," * @param {Object} [scope] an optional scope for the function."," * @return {Code}"," */","var Code = function Code(code, scope) {","  if(!(this instanceof Code)) return new Code(code, scope);","  this._bsontype = 'Code';","  this.code = code;","  this.scope = scope;","};","","/**"," * @ignore"," */","Code.prototype.toJSON = function() {","  return {scope:this.scope, code:this.code};","}","","module.exports = Code;","module.exports.Code = Code;",""],"l":{"9":1,"10":0,"11":0,"12":0,"13":0,"19":1,"20":0,"23":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/decimal128.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/decimal128.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":1,"362":0,"363":1,"364":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":30}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":33}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":19},"end":{"line":52,"column":41}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":15},"end":{"line":79,"column":37}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":96,"column":16},"end":{"line":96,"column":32}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":17},"end":{"line":113,"column":33}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":17},"end":{"line":125,"column":33}}},"8":{"name":"(anonymous_8)","line":130,"loc":{"start":{"line":130,"column":24},"end":{"line":130,"column":41}}},"9":{"name":"(anonymous_9)","line":518,"loc":{"start":{"line":518,"column":32},"end":{"line":518,"column":43}}},"10":{"name":"(anonymous_10)","line":723,"loc":{"start":{"line":723,"column":30},"end":{"line":723,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":77}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":25}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":20}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":124}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":133}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":133}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"13":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":37}},"15":{"start":{"line":29,"column":0},"end":{"line":49,"column":1}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":52}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}},"18":{"start":{"line":32,"column":2},"end":{"line":32,"column":12}},"19":{"start":{"line":34,"column":2},"end":{"line":37,"column":3}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":42}},"21":{"start":{"line":39,"column":2},"end":{"line":46,"column":3}},"22":{"start":{"line":41,"column":4},"end":{"line":41,"column":30}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":49}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":44}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":32}},"26":{"start":{"line":48,"column":2},"end":{"line":48,"column":40}},"27":{"start":{"line":52,"column":0},"end":{"line":77,"column":1}},"28":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"29":{"start":{"line":54,"column":4},"end":{"line":54,"column":63}},"30":{"start":{"line":57,"column":2},"end":{"line":57,"column":45}},"31":{"start":{"line":58,"column":2},"end":{"line":58,"column":47}},"32":{"start":{"line":59,"column":2},"end":{"line":59,"column":47}},"33":{"start":{"line":60,"column":2},"end":{"line":60,"column":49}},"34":{"start":{"line":62,"column":2},"end":{"line":62,"column":49}},"35":{"start":{"line":63,"column":2},"end":{"line":63,"column":47}},"36":{"start":{"line":64,"column":2},"end":{"line":64,"column":48}},"37":{"start":{"line":65,"column":2},"end":{"line":65,"column":46}},"38":{"start":{"line":67,"column":2},"end":{"line":67,"column":67}},"39":{"start":{"line":68,"column":2},"end":{"line":70,"column":56}},"40":{"start":{"line":72,"column":2},"end":{"line":72,"column":67}},"41":{"start":{"line":73,"column":2},"end":{"line":73,"column":82}},"42":{"start":{"line":76,"column":2},"end":{"line":76,"column":46}},"43":{"start":{"line":79,"column":0},"end":{"line":94,"column":1}},"44":{"start":{"line":81,"column":2},"end":{"line":81,"column":32}},"45":{"start":{"line":82,"column":2},"end":{"line":82,"column":34}},"46":{"start":{"line":85,"column":2},"end":{"line":91,"column":3}},"47":{"start":{"line":86,"column":4},"end":{"line":86,"column":15}},"48":{"start":{"line":87,"column":9},"end":{"line":91,"column":3}},"49":{"start":{"line":88,"column":4},"end":{"line":88,"column":33}},"50":{"start":{"line":89,"column":4},"end":{"line":89,"column":35}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":37}},"52":{"start":{"line":90,"column":25},"end":{"line":90,"column":37}},"53":{"start":{"line":93,"column":2},"end":{"line":93,"column":15}},"54":{"start":{"line":96,"column":0},"end":{"line":111,"column":1}},"55":{"start":{"line":97,"column":2},"end":{"line":97,"column":29}},"56":{"start":{"line":98,"column":2},"end":{"line":98,"column":16}},"57":{"start":{"line":101,"column":2},"end":{"line":101,"column":38}},"58":{"start":{"line":102,"column":2},"end":{"line":102,"column":45}},"59":{"start":{"line":103,"column":2},"end":{"line":103,"column":46}},"60":{"start":{"line":104,"column":2},"end":{"line":104,"column":46}},"61":{"start":{"line":106,"column":2},"end":{"line":106,"column":39}},"62":{"start":{"line":107,"column":2},"end":{"line":107,"column":46}},"63":{"start":{"line":108,"column":2},"end":{"line":108,"column":47}},"64":{"start":{"line":109,"column":2},"end":{"line":109,"column":47}},"65":{"start":{"line":110,"column":2},"end":{"line":110,"column":42}},"66":{"start":{"line":113,"column":0},"end":{"line":123,"column":1}},"67":{"start":{"line":114,"column":2},"end":{"line":114,"column":29}},"68":{"start":{"line":115,"column":2},"end":{"line":115,"column":16}},"69":{"start":{"line":118,"column":2},"end":{"line":118,"column":33}},"70":{"start":{"line":119,"column":2},"end":{"line":119,"column":40}},"71":{"start":{"line":120,"column":2},"end":{"line":120,"column":41}},"72":{"start":{"line":121,"column":2},"end":{"line":121,"column":41}},"73":{"start":{"line":122,"column":2},"end":{"line":122,"column":42}},"74":{"start":{"line":125,"column":0},"end":{"line":128,"column":1}},"75":{"start":{"line":126,"column":2},"end":{"line":126,"column":32}},"76":{"start":{"line":127,"column":2},"end":{"line":127,"column":21}},"77":{"start":{"line":130,"column":0},"end":{"line":503,"column":1}},"78":{"start":{"line":132,"column":2},"end":{"line":132,"column":25}},"79":{"start":{"line":133,"column":2},"end":{"line":133,"column":23}},"80":{"start":{"line":134,"column":2},"end":{"line":134,"column":27}},"81":{"start":{"line":137,"column":2},"end":{"line":137,"column":28}},"82":{"start":{"line":139,"column":2},"end":{"line":139,"column":22}},"83":{"start":{"line":141,"column":2},"end":{"line":141,"column":18}},"84":{"start":{"line":143,"column":2},"end":{"line":143,"column":24}},"85":{"start":{"line":145,"column":2},"end":{"line":145,"column":23}},"86":{"start":{"line":148,"column":2},"end":{"line":148,"column":19}},"87":{"start":{"line":150,"column":2},"end":{"line":150,"column":24}},"88":{"start":{"line":152,"column":2},"end":{"line":152,"column":23}},"89":{"start":{"line":154,"column":2},"end":{"line":154,"column":21}},"90":{"start":{"line":156,"column":2},"end":{"line":156,"column":20}},"91":{"start":{"line":159,"column":2},"end":{"line":159,"column":19}},"92":{"start":{"line":161,"column":2},"end":{"line":161,"column":12}},"93":{"start":{"line":163,"column":2},"end":{"line":163,"column":31}},"94":{"start":{"line":165,"column":2},"end":{"line":165,"column":30}},"95":{"start":{"line":167,"column":2},"end":{"line":167,"column":25}},"96":{"start":{"line":170,"column":2},"end":{"line":170,"column":16}},"97":{"start":{"line":173,"column":2},"end":{"line":173,"column":25}},"98":{"start":{"line":176,"column":2},"end":{"line":176,"column":54}},"99":{"start":{"line":177,"column":2},"end":{"line":177,"column":48}},"100":{"start":{"line":178,"column":2},"end":{"line":178,"column":48}},"101":{"start":{"line":181,"column":2},"end":{"line":185,"column":3}},"102":{"start":{"line":184,"column":6},"end":{"line":184,"column":70}},"103":{"start":{"line":188,"column":2},"end":{"line":190,"column":3}},"104":{"start":{"line":189,"column":4},"end":{"line":189,"column":68}},"105":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"106":{"start":{"line":194,"column":4},"end":{"line":194,"column":40}},"107":{"start":{"line":198,"column":2},"end":{"line":204,"column":3}},"108":{"start":{"line":199,"column":4},"end":{"line":203,"column":5}},"109":{"start":{"line":200,"column":6},"end":{"line":200,"column":96}},"110":{"start":{"line":201,"column":11},"end":{"line":203,"column":5}},"111":{"start":{"line":202,"column":6},"end":{"line":202,"column":52}},"112":{"start":{"line":207,"column":2},"end":{"line":242,"column":3}},"113":{"start":{"line":208,"column":4},"end":{"line":216,"column":5}},"114":{"start":{"line":209,"column":6},"end":{"line":211,"column":7}},"115":{"start":{"line":210,"column":8},"end":{"line":210,"column":54}},"116":{"start":{"line":213,"column":6},"end":{"line":213,"column":22}},"117":{"start":{"line":214,"column":6},"end":{"line":214,"column":24}},"118":{"start":{"line":215,"column":6},"end":{"line":215,"column":15}},"119":{"start":{"line":218,"column":4},"end":{"line":230,"column":5}},"120":{"start":{"line":219,"column":6},"end":{"line":229,"column":7}},"121":{"start":{"line":220,"column":8},"end":{"line":222,"column":9}},"122":{"start":{"line":221,"column":10},"end":{"line":221,"column":37}},"123":{"start":{"line":224,"column":8},"end":{"line":224,"column":28}},"124":{"start":{"line":227,"column":8},"end":{"line":227,"column":61}},"125":{"start":{"line":228,"column":8},"end":{"line":228,"column":42}},"126":{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},"127":{"start":{"line":233,"column":6},"end":{"line":233,"column":28}},"128":{"start":{"line":236,"column":4},"end":{"line":238,"column":5}},"129":{"start":{"line":237,"column":6},"end":{"line":237,"column":40}},"130":{"start":{"line":240,"column":4},"end":{"line":240,"column":34}},"131":{"start":{"line":241,"column":4},"end":{"line":241,"column":22}},"132":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"133":{"start":{"line":245,"column":4},"end":{"line":245,"column":68}},"134":{"start":{"line":249,"column":2},"end":{"line":263,"column":3}},"135":{"start":{"line":251,"column":4},"end":{"line":251,"column":61}},"136":{"start":{"line":254,"column":4},"end":{"line":256,"column":5}},"137":{"start":{"line":255,"column":6},"end":{"line":255,"column":52}},"138":{"start":{"line":259,"column":4},"end":{"line":259,"column":38}},"139":{"start":{"line":262,"column":4},"end":{"line":262,"column":36}},"140":{"start":{"line":266,"column":2},"end":{"line":268,"column":3}},"141":{"start":{"line":267,"column":4},"end":{"line":267,"column":50}},"142":{"start":{"line":272,"column":2},"end":{"line":272,"column":17}},"143":{"start":{"line":274,"column":2},"end":{"line":290,"column":3}},"144":{"start":{"line":275,"column":4},"end":{"line":275,"column":19}},"145":{"start":{"line":276,"column":4},"end":{"line":276,"column":18}},"146":{"start":{"line":277,"column":4},"end":{"line":277,"column":18}},"147":{"start":{"line":278,"column":4},"end":{"line":278,"column":16}},"148":{"start":{"line":279,"column":4},"end":{"line":279,"column":22}},"149":{"start":{"line":280,"column":4},"end":{"line":280,"column":26}},"150":{"start":{"line":282,"column":4},"end":{"line":282,"column":34}},"151":{"start":{"line":283,"column":4},"end":{"line":283,"column":32}},"152":{"start":{"line":285,"column":4},"end":{"line":289,"column":5}},"153":{"start":{"line":286,"column":6},"end":{"line":288,"column":7}},"154":{"start":{"line":287,"column":8},"end":{"line":287,"column":50}},"155":{"start":{"line":297,"column":2},"end":{"line":301,"column":3}},"156":{"start":{"line":298,"column":4},"end":{"line":298,"column":28}},"157":{"start":{"line":300,"column":4},"end":{"line":300,"column":40}},"158":{"start":{"line":304,"column":2},"end":{"line":320,"column":3}},"159":{"start":{"line":306,"column":4},"end":{"line":306,"column":30}},"160":{"start":{"line":308,"column":4},"end":{"line":317,"column":5}},"161":{"start":{"line":310,"column":6},"end":{"line":310,"column":41}},"162":{"start":{"line":311,"column":6},"end":{"line":316,"column":7}},"163":{"start":{"line":312,"column":8},"end":{"line":312,"column":32}},"164":{"start":{"line":313,"column":8},"end":{"line":313,"column":14}},"165":{"start":{"line":315,"column":8},"end":{"line":315,"column":98}},"166":{"start":{"line":319,"column":4},"end":{"line":319,"column":28}},"167":{"start":{"line":322,"column":2},"end":{"line":350,"column":3}},"168":{"start":{"line":324,"column":4},"end":{"line":328,"column":5}},"169":{"start":{"line":325,"column":6},"end":{"line":325,"column":30}},"170":{"start":{"line":326,"column":6},"end":{"line":326,"column":28}},"171":{"start":{"line":327,"column":6},"end":{"line":327,"column":12}},"172":{"start":{"line":330,"column":4},"end":{"line":336,"column":5}},"173":{"start":{"line":332,"column":6},"end":{"line":332,"column":28}},"174":{"start":{"line":335,"column":6},"end":{"line":335,"column":32}},"175":{"start":{"line":338,"column":4},"end":{"line":349,"column":5}},"176":{"start":{"line":339,"column":6},"end":{"line":339,"column":30}},"177":{"start":{"line":342,"column":6},"end":{"line":342,"column":41}},"178":{"start":{"line":343,"column":6},"end":{"line":348,"column":7}},"179":{"start":{"line":344,"column":8},"end":{"line":344,"column":32}},"180":{"start":{"line":345,"column":8},"end":{"line":345,"column":14}},"181":{"start":{"line":347,"column":8},"end":{"line":347,"column":97}},"182":{"start":{"line":355,"column":2},"end":{"line":405,"column":3}},"183":{"start":{"line":356,"column":4},"end":{"line":356,"column":34}},"184":{"start":{"line":361,"column":4},"end":{"line":364,"column":5}},"185":{"start":{"line":362,"column":6},"end":{"line":362,"column":38}},"186":{"start":{"line":363,"column":6},"end":{"line":363,"column":36}},"187":{"start":{"line":366,"column":4},"end":{"line":366,"column":72}},"188":{"start":{"line":367,"column":4},"end":{"line":367,"column":21}},"189":{"start":{"line":369,"column":4},"end":{"line":382,"column":5}},"190":{"start":{"line":370,"column":6},"end":{"line":370,"column":19}},"191":{"start":{"line":372,"column":6},"end":{"line":381,"column":7}},"192":{"start":{"line":373,"column":8},"end":{"line":373,"column":46}},"193":{"start":{"line":375,"column":8},"end":{"line":380,"column":9}},"194":{"start":{"line":376,"column":10},"end":{"line":379,"column":11}},"195":{"start":{"line":377,"column":12},"end":{"line":377,"column":25}},"196":{"start":{"line":378,"column":12},"end":{"line":378,"column":18}},"197":{"start":{"line":384,"column":4},"end":{"line":404,"column":5}},"198":{"start":{"line":385,"column":6},"end":{"line":385,"column":27}},"199":{"start":{"line":387,"column":6},"end":{"line":403,"column":7}},"200":{"start":{"line":388,"column":8},"end":{"line":402,"column":9}},"201":{"start":{"line":389,"column":10},"end":{"line":389,"column":27}},"202":{"start":{"line":392,"column":10},"end":{"line":399,"column":11}},"203":{"start":{"line":393,"column":12},"end":{"line":398,"column":13}},"204":{"start":{"line":394,"column":14},"end":{"line":394,"column":38}},"205":{"start":{"line":395,"column":14},"end":{"line":395,"column":31}},"206":{"start":{"line":397,"column":14},"end":{"line":397,"column":103}},"207":{"start":{"line":401,"column":10},"end":{"line":401,"column":16}},"208":{"start":{"line":409,"column":2},"end":{"line":409,"column":39}},"209":{"start":{"line":411,"column":2},"end":{"line":411,"column":38}},"210":{"start":{"line":414,"column":2},"end":{"line":441,"column":3}},"211":{"start":{"line":415,"column":4},"end":{"line":415,"column":41}},"212":{"start":{"line":416,"column":4},"end":{"line":416,"column":40}},"213":{"start":{"line":417,"column":9},"end":{"line":441,"column":3}},"214":{"start":{"line":418,"column":4},"end":{"line":418,"column":26}},"215":{"start":{"line":419,"column":4},"end":{"line":419,"column":53}},"216":{"start":{"line":420,"column":4},"end":{"line":420,"column":37}},"217":{"start":{"line":422,"column":4},"end":{"line":425,"column":5}},"218":{"start":{"line":423,"column":6},"end":{"line":423,"column":68}},"219":{"start":{"line":424,"column":6},"end":{"line":424,"column":73}},"220":{"start":{"line":427,"column":4},"end":{"line":427,"column":26}},"221":{"start":{"line":428,"column":4},"end":{"line":428,"column":54}},"222":{"start":{"line":430,"column":4},"end":{"line":433,"column":5}},"223":{"start":{"line":431,"column":6},"end":{"line":431,"column":70}},"224":{"start":{"line":432,"column":6},"end":{"line":432,"column":75}},"225":{"start":{"line":435,"column":4},"end":{"line":435,"column":53}},"226":{"start":{"line":437,"column":4},"end":{"line":440,"column":5}},"227":{"start":{"line":438,"column":6},"end":{"line":438,"column":68}},"228":{"start":{"line":439,"column":6},"end":{"line":439,"column":73}},"229":{"start":{"line":443,"column":2},"end":{"line":443,"column":89}},"230":{"start":{"line":445,"column":2},"end":{"line":445,"column":56}},"231":{"start":{"line":447,"column":2},"end":{"line":449,"column":3}},"232":{"start":{"line":448,"column":4},"end":{"line":448,"column":64}},"233":{"start":{"line":452,"column":2},"end":{"line":452,"column":50}},"234":{"start":{"line":453,"column":2},"end":{"line":453,"column":66}},"235":{"start":{"line":456,"column":2},"end":{"line":464,"column":3}},"236":{"start":{"line":458,"column":4},"end":{"line":458,"column":63}},"237":{"start":{"line":459,"column":4},"end":{"line":459,"column":103}},"238":{"start":{"line":460,"column":4},"end":{"line":460,"column":82}},"239":{"start":{"line":462,"column":4},"end":{"line":462,"column":83}},"240":{"start":{"line":463,"column":4},"end":{"line":463,"column":83}},"241":{"start":{"line":466,"column":2},"end":{"line":466,"column":28}},"242":{"start":{"line":469,"column":2},"end":{"line":471,"column":3}},"243":{"start":{"line":470,"column":4},"end":{"line":470,"column":67}},"244":{"start":{"line":474,"column":2},"end":{"line":474,"column":30}},"245":{"start":{"line":475,"column":2},"end":{"line":475,"column":16}},"246":{"start":{"line":479,"column":2},"end":{"line":479,"column":40}},"247":{"start":{"line":480,"column":2},"end":{"line":480,"column":47}},"248":{"start":{"line":481,"column":2},"end":{"line":481,"column":48}},"249":{"start":{"line":482,"column":2},"end":{"line":482,"column":48}},"250":{"start":{"line":484,"column":2},"end":{"line":484,"column":41}},"251":{"start":{"line":485,"column":2},"end":{"line":485,"column":48}},"252":{"start":{"line":486,"column":2},"end":{"line":486,"column":49}},"253":{"start":{"line":487,"column":2},"end":{"line":487,"column":49}},"254":{"start":{"line":491,"column":2},"end":{"line":491,"column":41}},"255":{"start":{"line":492,"column":2},"end":{"line":492,"column":48}},"256":{"start":{"line":493,"column":2},"end":{"line":493,"column":49}},"257":{"start":{"line":494,"column":2},"end":{"line":494,"column":49}},"258":{"start":{"line":496,"column":2},"end":{"line":496,"column":42}},"259":{"start":{"line":497,"column":2},"end":{"line":497,"column":49}},"260":{"start":{"line":498,"column":2},"end":{"line":498,"column":50}},"261":{"start":{"line":499,"column":2},"end":{"line":499,"column":50}},"262":{"start":{"line":502,"column":2},"end":{"line":502,"column":32}},"263":{"start":{"line":506,"column":0},"end":{"line":506,"column":28}},"264":{"start":{"line":508,"column":0},"end":{"line":508,"column":27}},"265":{"start":{"line":510,"column":0},"end":{"line":510,"column":30}},"266":{"start":{"line":512,"column":0},"end":{"line":512,"column":25}},"267":{"start":{"line":514,"column":0},"end":{"line":514,"column":26}},"268":{"start":{"line":516,"column":0},"end":{"line":516,"column":25}},"269":{"start":{"line":518,"column":0},"end":{"line":721,"column":1}},"270":{"start":{"line":523,"column":2},"end":{"line":523,"column":11}},"271":{"start":{"line":525,"column":2},"end":{"line":525,"column":11}},"272":{"start":{"line":527,"column":2},"end":{"line":527,"column":11}},"273":{"start":{"line":529,"column":2},"end":{"line":529,"column":10}},"274":{"start":{"line":531,"column":2},"end":{"line":531,"column":18}},"275":{"start":{"line":533,"column":2},"end":{"line":533,"column":22}},"276":{"start":{"line":535,"column":2},"end":{"line":535,"column":29}},"277":{"start":{"line":537,"column":2},"end":{"line":537,"column":34}},"278":{"start":{"line":538,"column":2},"end":{"line":538,"column":65}},"279":{"start":{"line":538,"column":46},"end":{"line":538,"column":65}},"280":{"start":{"line":540,"column":2},"end":{"line":540,"column":16}},"281":{"start":{"line":543,"column":2},"end":{"line":543,"column":15}},"282":{"start":{"line":545,"column":2},"end":{"line":545,"column":26}},"283":{"start":{"line":548,"column":2},"end":{"line":548,"column":22}},"284":{"start":{"line":551,"column":2},"end":{"line":551,"column":22}},"285":{"start":{"line":553,"column":2},"end":{"line":553,"column":45}},"286":{"start":{"line":555,"column":2},"end":{"line":555,"column":8}},"287":{"start":{"line":556,"column":2},"end":{"line":556,"column":11}},"288":{"start":{"line":559,"column":2},"end":{"line":559,"column":18}},"289":{"start":{"line":562,"column":2},"end":{"line":562,"column":16}},"290":{"start":{"line":565,"column":2},"end":{"line":565,"column":26}},"291":{"start":{"line":568,"column":2},"end":{"line":568,"column":95}},"292":{"start":{"line":569,"column":2},"end":{"line":569,"column":96}},"293":{"start":{"line":572,"column":2},"end":{"line":572,"column":96}},"294":{"start":{"line":573,"column":2},"end":{"line":573,"column":96}},"295":{"start":{"line":576,"column":2},"end":{"line":576,"column":16}},"296":{"start":{"line":579,"column":2},"end":{"line":581,"column":33}},"297":{"start":{"line":583,"column":2},"end":{"line":585,"column":3}},"298":{"start":{"line":584,"column":4},"end":{"line":584,"column":21}},"299":{"start":{"line":588,"column":2},"end":{"line":588,"column":48}},"300":{"start":{"line":590,"column":2},"end":{"line":603,"column":3}},"301":{"start":{"line":592,"column":4},"end":{"line":599,"column":5}},"302":{"start":{"line":593,"column":6},"end":{"line":593,"column":42}},"303":{"start":{"line":594,"column":11},"end":{"line":599,"column":5}},"304":{"start":{"line":595,"column":6},"end":{"line":595,"column":19}},"305":{"start":{"line":597,"column":6},"end":{"line":597,"column":53}},"306":{"start":{"line":598,"column":6},"end":{"line":598,"column":53}},"307":{"start":{"line":601,"column":4},"end":{"line":601,"column":42}},"308":{"start":{"line":602,"column":4},"end":{"line":602,"column":51}},"309":{"start":{"line":605,"column":2},"end":{"line":605,"column":45}},"310":{"start":{"line":612,"column":2},"end":{"line":612,"column":78}},"311":{"start":{"line":613,"column":2},"end":{"line":613,"column":33}},"312":{"start":{"line":614,"column":2},"end":{"line":614,"column":33}},"313":{"start":{"line":615,"column":2},"end":{"line":615,"column":32}},"314":{"start":{"line":617,"column":2},"end":{"line":639,"column":3}},"315":{"start":{"line":619,"column":6},"end":{"line":619,"column":21}},"316":{"start":{"line":621,"column":4},"end":{"line":638,"column":5}},"317":{"start":{"line":622,"column":6},"end":{"line":622,"column":27}},"318":{"start":{"line":624,"column":6},"end":{"line":624,"column":46}},"319":{"start":{"line":625,"column":6},"end":{"line":625,"column":39}},"320":{"start":{"line":626,"column":6},"end":{"line":626,"column":37}},"321":{"start":{"line":630,"column":6},"end":{"line":630,"column":33}},"322":{"start":{"line":630,"column":24},"end":{"line":630,"column":33}},"323":{"start":{"line":632,"column":6},"end":{"line":637,"column":7}},"324":{"start":{"line":634,"column":8},"end":{"line":634,"column":51}},"325":{"start":{"line":636,"column":8},"end":{"line":636,"column":53}},"326":{"start":{"line":645,"column":2},"end":{"line":657,"column":3}},"327":{"start":{"line":646,"column":4},"end":{"line":646,"column":27}},"328":{"start":{"line":647,"column":4},"end":{"line":647,"column":27}},"329":{"start":{"line":649,"column":4},"end":{"line":649,"column":28}},"330":{"start":{"line":650,"column":4},"end":{"line":650,"column":14}},"331":{"start":{"line":652,"column":4},"end":{"line":656,"column":5}},"332":{"start":{"line":653,"column":6},"end":{"line":653,"column":10}},"333":{"start":{"line":654,"column":6},"end":{"line":654,"column":50}},"334":{"start":{"line":655,"column":6},"end":{"line":655,"column":24}},"335":{"start":{"line":659,"column":2},"end":{"line":659,"column":58}},"336":{"start":{"line":669,"column":2},"end":{"line":718,"column":3}},"337":{"start":{"line":672,"column":4},"end":{"line":672,"column":38}},"338":{"start":{"line":673,"column":4},"end":{"line":673,"column":48}},"339":{"start":{"line":675,"column":4},"end":{"line":677,"column":5}},"340":{"start":{"line":676,"column":6},"end":{"line":676,"column":23}},"341":{"start":{"line":679,"column":4},"end":{"line":681,"column":5}},"342":{"start":{"line":680,"column":6},"end":{"line":680,"column":40}},"343":{"start":{"line":684,"column":4},"end":{"line":684,"column":21}},"344":{"start":{"line":685,"column":4},"end":{"line":689,"column":5}},"345":{"start":{"line":686,"column":6},"end":{"line":686,"column":45}},"346":{"start":{"line":688,"column":6},"end":{"line":688,"column":39}},"347":{"start":{"line":692,"column":4},"end":{"line":717,"column":5}},"348":{"start":{"line":693,"column":6},"end":{"line":695,"column":7}},"349":{"start":{"line":694,"column":8},"end":{"line":694,"column":42}},"350":{"start":{"line":697,"column":6},"end":{"line":697,"column":57}},"351":{"start":{"line":700,"column":6},"end":{"line":706,"column":7}},"352":{"start":{"line":701,"column":8},"end":{"line":703,"column":9}},"353":{"start":{"line":702,"column":10},"end":{"line":702,"column":44}},"354":{"start":{"line":705,"column":8},"end":{"line":705,"column":25}},"355":{"start":{"line":708,"column":6},"end":{"line":708,"column":23}},"356":{"start":{"line":710,"column":6},"end":{"line":712,"column":7}},"357":{"start":{"line":711,"column":8},"end":{"line":711,"column":25}},"358":{"start":{"line":714,"column":6},"end":{"line":716,"column":7}},"359":{"start":{"line":715,"column":8},"end":{"line":715,"column":42}},"360":{"start":{"line":720,"column":2},"end":{"line":720,"column":25}},"361":{"start":{"line":723,"column":0},"end":{"line":725,"column":1}},"362":{"start":{"line":724,"column":2},"end":{"line":724,"column":47}},"363":{"start":{"line":727,"column":0},"end":{"line":727,"column":28}},"364":{"start":{"line":728,"column":0},"end":{"line":728,"column":39}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":5},"end":{"line":34,"column":20}},{"start":{"line":34,"column":24},"end":{"line":34,"column":39}},{"start":{"line":35,"column":5},"end":{"line":35,"column":20}},{"start":{"line":35,"column":24},"end":{"line":35,"column":39}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":5},"end":{"line":53,"column":10}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":9},"end":{"line":87,"column":9}},{"start":{"line":87,"column":9},"end":{"line":87,"column":9}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"8":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"9":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":5},"end":{"line":181,"column":17}},{"start":{"line":182,"column":7},"end":{"line":182,"column":17}},{"start":{"line":183,"column":7},"end":{"line":183,"column":17}},{"start":{"line":183,"column":21},"end":{"line":183,"column":39}}]},"10":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"11":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":5},"end":{"line":188,"column":16}},{"start":{"line":188,"column":20},"end":{"line":188,"column":34}},{"start":{"line":188,"column":38},"end":{"line":188,"column":66}}]},"12":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"13":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":5},"end":{"line":193,"column":25}},{"start":{"line":193,"column":29},"end":{"line":193,"column":49}}]},"14":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"15":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":5},"end":{"line":198,"column":28}},{"start":{"line":198,"column":32},"end":{"line":198,"column":52}}]},"16":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"17":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":7},"end":{"line":199,"column":27}},{"start":{"line":199,"column":31},"end":{"line":199,"column":51}}]},"18":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":52},"end":{"line":200,"column":71}},{"start":{"line":200,"column":74},"end":{"line":200,"column":93}}]},"19":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":11},"end":{"line":201,"column":11}},{"start":{"line":201,"column":11},"end":{"line":201,"column":11}}]},"20":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":30}},{"start":{"line":207,"column":34},"end":{"line":207,"column":54}}]},"21":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"22":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":6}},{"start":{"line":209,"column":6},"end":{"line":209,"column":6}}]},"23":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"24":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":6},"end":{"line":219,"column":6}},{"start":{"line":219,"column":6},"end":{"line":219,"column":6}}]},"25":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":9},"end":{"line":219,"column":29}},{"start":{"line":219,"column":33},"end":{"line":219,"column":45}}]},"26":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":8}},{"start":{"line":220,"column":8},"end":{"line":220,"column":8}}]},"27":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]},"28":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":4}},{"start":{"line":236,"column":4},"end":{"line":236,"column":4}}]},"29":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"30":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":5},"end":{"line":244,"column":13}},{"start":{"line":244,"column":17},"end":{"line":244,"column":29}}]},"31":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"32":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":5},"end":{"line":249,"column":25}},{"start":{"line":249,"column":29},"end":{"line":249,"column":49}}]},"33":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":254,"column":4}},{"start":{"line":254,"column":4},"end":{"line":254,"column":4}}]},"34":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":7},"end":{"line":254,"column":13}},{"start":{"line":254,"column":17},"end":{"line":254,"column":26}}]},"35":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"36":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"37":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"38":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":7},"end":{"line":285,"column":20}},{"start":{"line":285,"column":24},"end":{"line":285,"column":46}}]},"39":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"40":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":5},"end":{"line":297,"column":30}},{"start":{"line":297,"column":34},"end":{"line":297,"column":70}}]},"41":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"42":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":6},"end":{"line":311,"column":6}},{"start":{"line":311,"column":6},"end":{"line":311,"column":6}}]},"43":{"line":315,"type":"cond-expr","locations":[{"start":{"line":315,"column":54},"end":{"line":315,"column":73}},{"start":{"line":315,"column":76},"end":{"line":315,"column":95}}]},"44":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":31}},{"start":{"line":322,"column":35},"end":{"line":322,"column":58}}]},"45":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"46":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"47":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":4},"end":{"line":338,"column":4}},{"start":{"line":338,"column":4},"end":{"line":338,"column":4}}]},"48":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"49":{"line":347,"type":"cond-expr","locations":[{"start":{"line":347,"column":54},"end":{"line":347,"column":73}},{"start":{"line":347,"column":76},"end":{"line":347,"column":95}}]},"50":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"51":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":6},"end":{"line":355,"column":52}},{"start":{"line":355,"column":57},"end":{"line":355,"column":89}}]},"52":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"53":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":7},"end":{"line":361,"column":15}},{"start":{"line":361,"column":19},"end":{"line":361,"column":43}}]},"54":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"55":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":6},"end":{"line":372,"column":6}},{"start":{"line":372,"column":6},"end":{"line":372,"column":6}}]},"56":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":10},"end":{"line":376,"column":10}},{"start":{"line":376,"column":10},"end":{"line":376,"column":10}}]},"57":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":4},"end":{"line":384,"column":4}},{"start":{"line":384,"column":4},"end":{"line":384,"column":4}}]},"58":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":8},"end":{"line":388,"column":8}},{"start":{"line":388,"column":8},"end":{"line":388,"column":8}}]},"59":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":10},"end":{"line":392,"column":10}},{"start":{"line":392,"column":10},"end":{"line":392,"column":10}}]},"60":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":12},"end":{"line":393,"column":12}},{"start":{"line":393,"column":12},"end":{"line":393,"column":12}}]},"61":{"line":397,"type":"cond-expr","locations":[{"start":{"line":397,"column":60},"end":{"line":397,"column":79}},{"start":{"line":397,"column":82},"end":{"line":397,"column":101}}]},"62":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":2},"end":{"line":414,"column":2}},{"start":{"line":414,"column":2},"end":{"line":414,"column":2}}]},"63":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":9},"end":{"line":417,"column":9}},{"start":{"line":417,"column":9},"end":{"line":417,"column":9}}]},"64":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":2},"end":{"line":447,"column":2}},{"start":{"line":447,"column":2},"end":{"line":447,"column":2}}]},"65":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":2}},{"start":{"line":456,"column":2},"end":{"line":456,"column":2}}]},"66":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"67":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":2},"end":{"line":583,"column":2}},{"start":{"line":583,"column":2},"end":{"line":583,"column":2}}]},"68":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":2},"end":{"line":590,"column":2}},{"start":{"line":590,"column":2},"end":{"line":590,"column":2}}]},"69":{"line":592,"type":"if","locations":[{"start":{"line":592,"column":4},"end":{"line":592,"column":4}},{"start":{"line":592,"column":4},"end":{"line":592,"column":4}}]},"70":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":11},"end":{"line":594,"column":11}},{"start":{"line":594,"column":11},"end":{"line":594,"column":11}}]},"71":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":2},"end":{"line":617,"column":2}},{"start":{"line":617,"column":2},"end":{"line":617,"column":2}}]},"72":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":5},"end":{"line":617,"column":33}},{"start":{"line":617,"column":37},"end":{"line":617,"column":65}},{"start":{"line":618,"column":7},"end":{"line":618,"column":35}},{"start":{"line":618,"column":39},"end":{"line":618,"column":67}}]},"73":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":6},"end":{"line":630,"column":6}},{"start":{"line":630,"column":6},"end":{"line":630,"column":6}}]},"74":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":2},"end":{"line":645,"column":2}},{"start":{"line":645,"column":2},"end":{"line":645,"column":2}}]},"75":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":2},"end":{"line":669,"column":2}},{"start":{"line":669,"column":2},"end":{"line":669,"column":2}}]},"76":{"line":669,"type":"binary-expr","locations":[{"start":{"line":669,"column":5},"end":{"line":669,"column":30}},{"start":{"line":669,"column":34},"end":{"line":669,"column":59}},{"start":{"line":670,"column":4},"end":{"line":670,"column":16}}]},"77":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":4},"end":{"line":675,"column":4}},{"start":{"line":675,"column":4},"end":{"line":675,"column":4}}]},"78":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":4},"end":{"line":685,"column":4}},{"start":{"line":685,"column":4},"end":{"line":685,"column":4}}]},"79":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":4},"end":{"line":692,"column":4}},{"start":{"line":692,"column":4},"end":{"line":692,"column":4}}]},"80":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":6},"end":{"line":700,"column":6}},{"start":{"line":700,"column":6},"end":{"line":700,"column":6}}]}},"code":["\"use strict\"","","var Long = require('./long');","","var PARSE_STRING_REGEXP = /^(\\+|\\-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([\\-\\+])?(\\d+)?$/;","var PARSE_INF_REGEXP = /^(\\+|\\-)?(Infinity|inf)$/i;","var PARSE_NAN_REGEXP = /^(\\+|\\-)?NaN$/i;","","var EXPONENT_MAX = 6111;","var EXPONENT_MIN = -6176;","var EXPONENT_BIAS = 6176;","var MAX_DIGITS = 34;","","// Nan value bits as 32 bit values (due to lack of longs)","var NAN_BUFFER = [0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();","// Infinity value bits 32 bit values (due to lack of longs)","var INF_NEGATIVE_BUFFER = [0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();","var INF_POSITIVE_BUFFER = [0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].reverse();","","var EXPONENT_REGEX = /^([\\-\\+])?(\\d+)?$/;","","","// Detect if the value is a digit","var isDigit = function(value) {","  return !isNaN(parseInt(value, 10));","}","","// Divide two uint128 values","var divideu128 = function(value) {","  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);","  var _rem = Long.fromNumber(0);","  var i = 0;","","  if(!value.parts[0] && !value.parts[1] &&","     !value.parts[2] && !value.parts[3]) {","    return { quotient: value, rem: _rem };","  }","","  for(var i = 0; i <= 3; i++) {","    // Adjust remainder to match value of next dividend","    _rem = _rem.shiftLeft(32);","    // Add the divided to _rem","    _rem = _rem.add(new Long(value.parts[i], 0));","    value.parts[i] = _rem.div(DIVISOR).low_;","    _rem = _rem.modulo(DIVISOR);","  }","","  return { quotient: value, rem: _rem };","}","","// Multiply two Long values and return the 128 bit value","var multiply64x2 = function(left, right) {","  if(!left && !right) {","    return {high: Long.fromNumber(0), low: Long.fromNumber(0)};","  }","","  var leftHigh = left.shiftRightUnsigned(32);","  var leftLow = new Long(left.getLowBits(), 0);","  var rightHigh = right.shiftRightUnsigned(32);","  var rightLow = new Long(right.getLowBits(), 0);","","  var productHigh = leftHigh.multiply(rightHigh);","  var productMid = leftHigh.multiply(rightLow);","  var productMid2 = leftLow.multiply(rightHigh);","  var productLow = leftLow.multiply(rightLow);","","  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));","  productMid = new Long(productMid.getLowBits(), 0)","                .add(productMid2)","                .add(productLow.shiftRightUnsigned(32));","","  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));","  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));","","  // Return the 128 bit result","  return {high: productHigh, low: productLow};","}","","var lessThan = function(left, right) {","  // Make values unsigned","  var uhleft = left.high_ >>> 0;","  var uhright = right.high_ >>> 0;","","  // Compare high bits first","  if(uhleft < uhright) {","    return true","  } else if(uhleft == uhright) {","    var ulleft = left.low_ >>> 0;","    var ulright = right.low_ >>> 0;","    if(ulleft < ulright) return true;","  }","","  return false;","}","","var longtoHex = function(value) {","  var buffer = new Buffer(8);","  var index = 0;","  // Encode the low 64 bits of the decimal","  // Encode low bits","  buffer[index++] = value.low_ & 0xff;","  buffer[index++] = (value.low_ >> 8) & 0xff;","  buffer[index++] = (value.low_ >> 16) & 0xff;","  buffer[index++] = (value.low_ >> 24) & 0xff;","  // Encode high bits","  buffer[index++] = value.high_ & 0xff;","  buffer[index++] = (value.high_ >> 8) & 0xff;","  buffer[index++] = (value.high_ >> 16) & 0xff;","  buffer[index++] = (value.high_ >> 24) & 0xff;","  return buffer.reverse().toString('hex');","}","","var int32toHex = function(value) {","  var buffer = new Buffer(4);","  var index = 0;","  // Encode the low 64 bits of the decimal","  // Encode low bits","  buffer[index++] = value & 0xff;","  buffer[index++] = (value >> 8) & 0xff;","  buffer[index++] = (value >> 16) & 0xff;","  buffer[index++] = (value >> 24) & 0xff;","  return buffer.reverse().toString('hex');","}","","var Decimal128 = function(bytes) {","  this._bsontype = 'Decimal128';","  this.bytes = bytes;","}","","Decimal128.fromString = function(string) {","  // Parse state tracking","  var isNegative = false;","  var sawRadix = false;","  var foundNonZero = false;","","  // Total number of significant digits (no leading or trailing zero)","  var significantDigits = 0;","  // Total number of significand digits read","  var nDigitsRead = 0;","  // Total number of digits (no leading zeros)","  var nDigits = 0;","  // The number of the digits after radix","  var radixPosition = 0;","  // The index of the first non-zero in *str*","  var firstNonZero = 0;","","  // Digits Array","  var digits = [0];","  // The number of digits in digits","  var nDigitsStored = 0;","  // Insertion pointer for digits","  var digitsInsert = 0;","  // The index of the first non-zero digit","  var firstDigit = 0;","  // The index of the last digit","  var lastDigit = 0;","","  // Exponent","  var exponent = 0;","  // loop index over array","  var i = 0;","  // The high 17 digits of the significand","  var significandHigh = [0, 0];","  // The low 17 digits of the significand","  var significandLow = [0, 0];","  // The biased exponent","  var biasedExponent = 0;","","  // Read index","  var index = 0;","","  // Trim the string","  string = string.trim();","","  // Results","  var stringMatch = string.match(PARSE_STRING_REGEXP);","  var infMatch = string.match(PARSE_INF_REGEXP);","  var nanMatch = string.match(PARSE_NAN_REGEXP);","","  // Validate the string","  if(!stringMatch","    && ! infMatch","    && ! nanMatch || string.length == 0) {","      throw new Error(\"\" + string + \" not a valid Decimal128 string\");","  }","","  // Check if we have an illegal exponent format","  if(stringMatch && stringMatch[4] && stringMatch[2] === undefined) {","    throw new Error(\"\" + string + \" not a valid Decimal128 string\");","  }","","  // Get the negative or positive sign","  if(string[index] == '+' || string[index] == '-') {","    isNegative = string[index++] == '-';","  }","","  // Check if user passed Infinity or NaN","  if(!isDigit(string[index]) && string[index] != '.') {","    if(string[index] == 'i' || string[index] == 'I') {","      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));","    } else if(string[index] == 'N') {","      return new Decimal128(new Buffer(NAN_BUFFER));","    }","  }","","  // Read all the digits","  while(isDigit(string[index]) || string[index] == '.') {","    if(string[index] == '.') {","      if(sawRadix) {","        return new Decimal128(new Buffer(NAN_BUFFER));","      }","","      sawRadix = true;","      index = index + 1;","      continue;","    }","","    if(nDigitsStored < 34) {","      if(string[index] != '0' || foundNonZero) {","        if(!foundNonZero) {","          firstNonZero = nDigitsRead;","        }","","        foundNonZero = true;","","        // Only store 34 digits","        digits[digitsInsert++] = parseInt(string[index], 10);","        nDigitsStored = nDigitsStored + 1;","      }","    }","","    if(foundNonZero) {","      nDigits = nDigits + 1;","    }","","    if(sawRadix) {","      radixPosition = radixPosition + 1;","    }","","    nDigitsRead = nDigitsRead + 1;","    index = index + 1;","  }","","  if(sawRadix && !nDigitsRead) {","    throw new Error(\"\" + string + \" not a valid Decimal128 string\");","  }","","  // Read exponent if exists","  if(string[index] == 'e' || string[index] == 'E') {","    // Read exponent digits","    var match = string.substr(++index).match(EXPONENT_REGEX);","","    // No digits read","    if(!match || !match[2]) {","      return new Decimal128(new Buffer(NAN_BUFFER));","    }","","    // Get exponent","    exponent = parseInt(match[0], 10);","","    // Adjust the index","    index = index + match[0].length;","  }","","  // Return not a number","  if(string[index]) {","    return new Decimal128(new Buffer(NAN_BUFFER));","  }","","  // Done reading input","  // Find first non-zero digit in digits","  firstDigit = 0;","","  if(!nDigitsStored) {","    firstDigit = 0;","    lastDigit = 0;","    digits[0] = 0;","    nDigits = 1;","    nDigitsStored = 1;","    significantDigits = 0;","  } else {","    lastDigit = nDigitsStored - 1;","    significantDigits = nDigits;","","    if(exponent != 0 && significantDigits != 1) {","      while(string[firstNonZero + significantDigits - 1] == '0') {","        significantDigits = significantDigits - 1;","      }","    }","  }","","  // Normalization of exponent","  // Correct exponent based on radix position, and shift significand as needed","  // to represent user input","","  // Overflow prevention","  if(exponent <= radixPosition && radixPosition - exponent > (1 << 14)) {","    exponent = EXPONENT_MIN;","  } else {","    exponent = exponent - radixPosition;","  }","","  // Attempt to normalize the exponent","  while(exponent > EXPONENT_MAX) {","    // Shift exponent to significand and decrease","    lastDigit = lastDigit + 1;","","    if(lastDigit - firstDigit > MAX_DIGITS) {","      // Check if we have a zero then just hard clamp, otherwise fail","      var digitsString = digits.join('');","      if(digitsString.match(/^0+$/)) {","        exponent = EXPONENT_MAX;","        break;","      } else {","        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));","      }","    }","","    exponent = exponent - 1;","  }","","  while(exponent < EXPONENT_MIN || nDigitsStored < nDigits) {","    // Shift last digit","    if(lastDigit == 0) {","      exponent = EXPONENT_MIN;","      significantDigits = 0;","      break;","    }","","    if(nDigitsStored < nDigits) {","      // adjust to match digits not stored","      nDigits = nDigits - 1;","    } else {","      // adjust to round","      lastDigit = lastDigit - 1;","    }","","    if(exponent < EXPONENT_MAX) {","      exponent = exponent + 1;","    } else {","      // Check if we have a zero then just hard clamp, otherwise fail","      var digitsString = digits.join('');","      if(digitsString.match(/^0+$/)) {","        exponent = EXPONENT_MAX;","        break;","      } else {","        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))","      }","    }","  }","","","  // Round","  // We've normalized the exponent, but might still need to round.","  if((lastDigit - firstDigit + 1 < significantDigits) && string[significantDigits] != '0') {","    var endOfString = nDigitsRead;","","    // If we have seen a radix point, 'string' is 1 longer than we have","    // documented with ndigits_read, so inc the position of the first nonzero","    // digit and the position that digits are read to.","    if(sawRadix && exponent == EXPONENT_MIN) {","      firstNonZero = firstNonZero + 1;","      endOfString = endOfString + 1;","    }","","    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);","    var roundBit = 0;","","    if(roundDigit >= 5) {","      roundBit = 1;","","      if(roundDigit == 5) {","        roundBit = digits[lastDigit] % 2 == 1;","","        for(var i = firstNonZero + lastDigit + 2; i < endOfString; i++) {","          if(parseInt(string[i], 10)) {","            roundBit = 1;","            break;","          }","        }","      }","    }","","    if(roundBit) {","      var dIdx = lastDigit;","","      for(; dIdx >= 0; dIdx--) {","        if(++digits[dIdx] > 9) {","          digits[dIdx] = 0;","","          // overflowed most significant digit","          if(dIdx == 0) {","            if(exponent < EXPONENT_MAX) {","              exponent = exponent + 1;","              digits[dIdx] = 1;","            } else {","              return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER))","            }","          }","        } else {","          break;","        }","      }","    }","  }","","  // Encode significand","  // The high 17 digits of the significand","  significandHigh = Long.fromNumber(0);","  // The low 17 digits of the significand","  significandLow = Long.fromNumber(0);","","  // read a zero","  if(significantDigits == 0) {","    significandHigh = Long.fromNumber(0);","    significandLow = Long.fromNumber(0);","  } else if(lastDigit - firstDigit < 17) {","    var dIdx = firstDigit;","    significandLow = Long.fromNumber(digits[dIdx++]);","    significandHigh = new Long(0, 0);","","    for(; dIdx <= lastDigit; dIdx++) {","      significandLow = significandLow.multiply(Long.fromNumber(10));","      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));","    }","  } else {","    var dIdx = firstDigit;","    significandHigh = Long.fromNumber(digits[dIdx++]);","","    for(; dIdx <= lastDigit - 17; dIdx++) {","      significandHigh = significandHigh.multiply(Long.fromNumber(10));","      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));","    }","","    significandLow = Long.fromNumber(digits[dIdx++]);","","    for(; dIdx <= lastDigit; dIdx++) {","      significandLow = significandLow.multiply(Long.fromNumber(10));","      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));","    }","  }","","  var significand = multiply64x2(significandHigh, Long.fromString(\"100000000000000000\"));","","  significand.low = significand.low.add(significandLow);","","  if(lessThan(significand.low, significandLow)) {","    significand.high = significand.high.add(Long.fromNumber(1));","  }","","  // Biased exponent","  var biasedExponent = (exponent + EXPONENT_BIAS);","  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };","","  // Encode combination, exponent, and significand.","  if(significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber)) {","    // Encode '11' into bits 1 to 3","    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));","    dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));","    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));","  } else {","    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));","    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));","  }","","  dec.low = significand.low;","","  // Encode sign","  if(isNegative) {","    dec.high = dec.high.or(Long.fromString('9223372036854775808'));","  }","","  // Encode into a buffer","  var buffer = new Buffer(16);","  var index = 0;","","  // Encode the low 64 bits of the decimal","  // Encode low bits","  buffer[index++] = dec.low.low_ & 0xff;","  buffer[index++] = (dec.low.low_ >> 8) & 0xff;","  buffer[index++] = (dec.low.low_ >> 16) & 0xff;","  buffer[index++] = (dec.low.low_ >> 24) & 0xff;","  // Encode high bits","  buffer[index++] = dec.low.high_ & 0xff;","  buffer[index++] = (dec.low.high_ >> 8) & 0xff;","  buffer[index++] = (dec.low.high_ >> 16) & 0xff;","  buffer[index++] = (dec.low.high_ >> 24) & 0xff;","","  // Encode the high 64 bits of the decimal","  // Encode low bits","  buffer[index++] = dec.high.low_ & 0xff;","  buffer[index++] = (dec.high.low_ >> 8) & 0xff;","  buffer[index++] = (dec.high.low_ >> 16) & 0xff;","  buffer[index++] = (dec.high.low_ >> 24) & 0xff;","  // Encode high bits","  buffer[index++] = dec.high.high_ & 0xff;","  buffer[index++] = (dec.high.high_ >> 8) & 0xff;","  buffer[index++] = (dec.high.high_ >> 16) & 0xff;","  buffer[index++] = (dec.high.high_ >> 24) & 0xff;","","  // Return the new Decimal128","  return new Decimal128(buffer);","}","","// Extract least significant 5 bits","var COMBINATION_MASK = 0x1f;","// Extract least significant 14 bits","var EXPONENT_MASK = 0x3fff;","// Value of combination field for Inf","var COMBINATION_INFINITY = 30;","// Value of combination field for NaN","var COMBINATION_NAN = 31;","// Value of combination field for NaN","var COMBINATION_SNAN = 32;","// decimal128 exponent bias","var EXPONENT_BIAS = 6176;","","Decimal128.prototype.toString = function() {","  // Note: bits in this routine are referred to starting at 0,","  // from the sign bit, towards the coefficient.","","  // bits 0 - 31","  var high;","  // bits 32 - 63","  var midh;","  // bits 64 - 95","  var midl;","  // bits 96 - 127","  var low;","  // bits 1 - 5","  var combination;","  // decoded biased exponent (14 bits)","  var biased_exponent;","  // the number of significand digits","  var significand_digits = 0;","  // the base-10 digits in the significand","  var significand = new Array(36);","  for(var i = 0; i < significand.length; i++) significand[i] = 0;","  // read pointer into significand","  var index = 0;","","  // unbiased exponent","  var exponent;","  // the exponent if scientific notation is used","  var scientific_exponent;","","  // true if the number is zero","  var is_zero = false;","","  // the most signifcant significand bits (50-46)","  var significand_msb;","  // temporary storage for significand decoding","  var significand128 = {parts: new Array(4)};","  // indexing variables","  var i;","  var j, k;","","  // Output string","  var string = [];","","  // Unpack index","  var index = 0;","","  // Buffer reference","  var buffer = this.bytes;","","  // Unpack the low 64bits into a long","  low = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","  midl = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","","  // Unpack the high 64bits into a long","  midh = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","  high = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","","  // Unpack index","  var index = 0;","","  // Create the state of the decimal","  var dec = {","    low: new Long(low, midl),","    high: new Long(midh, high) };","","  if(dec.high.lessThan(Long.ZERO)) {","    string.push('-');","  }","","  // Decode combination field and exponent","  combination = (high >> 26) & COMBINATION_MASK;","","  if((combination >> 3) == 3) {","    // Check for 'special' values","    if(combination == COMBINATION_INFINITY) {","      return string.join('') + \"Infinity\";","    } else if(combination == COMBINATION_NAN) {","      return \"NaN\";","    } else {","      biased_exponent = (high >> 15) & EXPONENT_MASK;","      significand_msb = 0x08 + ((high >> 14) & 0x01);","    }","  } else {","    significand_msb = (high >> 14) & 0x07;","    biased_exponent = (high >> 17) & EXPONENT_MASK;","  }","","  exponent = biased_exponent - EXPONENT_BIAS;","","  // Create string of significand digits","","  // Convert the 114-bit binary number represented by","  // (significand_high, significand_low) to at most 34 decimal","  // digits through modulo and division.","  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);","  significand128.parts[1] = midh;","  significand128.parts[2] = midl;","  significand128.parts[3] = low;","","  if(significand128.parts[0] == 0 && significand128.parts[1] == 0","    && significand128.parts[2] == 0 && significand128.parts[3] == 0) {","      is_zero = true;","  } else {","    for(var k = 3; k >= 0; k--) {","      var least_digits = 0;","      // Peform the divide","      var result = divideu128(significand128);","      significand128 = result.quotient;","      least_digits = result.rem.low_;","","      // We now have the 9 least significant digits (in base 2).","      // Convert and output to string.","      if(!least_digits) continue;","","      for(var j = 8; j >= 0; j--) {","        // significand[k * 9 + j] = Math.round(least_digits % 10);","        significand[k * 9 + j] = least_digits % 10;","        // least_digits = Math.round(least_digits / 10);","        least_digits = Math.floor(least_digits / 10);","      }","    }","  }","","  // Output format options:","  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd","  // Regular    - ddd.ddd","","  if(is_zero) {","    significand_digits = 1;","    significand[index] = 0;","  } else {","    significand_digits = 36;","    var i = 0;","","    while(!significand[index]) {","      i++;","      significand_digits = significand_digits - 1;","      index = index + 1;","    }","  }","","  scientific_exponent = significand_digits - 1 + exponent;","","  // The scientific exponent checks are dictated by the string conversion","  // specification and are somewhat arbitrary cutoffs.","  //","  // We must check exponent > 0, because if this is the case, the number","  // has trailing zeros.  However, we *cannot* output these trailing zeros,","  // because doing so would change the precision of the value, and would","  // change stored data if the string converted number is round tripped.","","  if(scientific_exponent >= 34 || scientific_exponent <= -7 ||","    exponent > 0) {","    // Scientific format","    string.push(significand[index++]);","    significand_digits = significand_digits - 1;","","    if(significand_digits) {","      string.push('.');","    }","","    for(var i = 0; i < significand_digits; i++) {","      string.push(significand[index++]);","    }","","    // Exponent","    string.push('E');","    if(scientific_exponent > 0) {","      string.push('+' + scientific_exponent);","    } else {","      string.push(scientific_exponent);","    }","  } else {","    // Regular format with no decimal place","    if(exponent >= 0) {","      for(var i = 0; i < significand_digits; i++) {","        string.push(significand[index++]);","      }","    } else {","      var radix_position = significand_digits + exponent;","","      // non-zero digits before radix","      if(radix_position > 0) {","        for(var i = 0; i < radix_position; i++) {","          string.push(significand[index++]);","        }","      } else {","        string.push('0');","      }","","      string.push('.');","      // add leading zeros after radix","      while(radix_position++ < 0) {","        string.push('0');","      }","","      for(var i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {","        string.push(significand[index++]);","      }","    }","  }","","  return string.join('');","}","","Decimal128.prototype.toJSON = function() {","  return { \"$numberDecimal\": this.toString() };","}","","module.exports = Decimal128;","module.exports.Decimal128 = Decimal128;",""],"l":{"3":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"15":1,"17":1,"18":1,"20":1,"24":1,"25":0,"29":1,"30":0,"31":0,"32":0,"34":0,"36":0,"39":0,"41":0,"43":0,"44":0,"45":0,"48":0,"52":1,"53":0,"54":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"72":0,"73":0,"76":0,"79":1,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"93":0,"96":1,"97":0,"98":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"113":1,"114":0,"115":0,"118":0,"119":0,"120":0,"121":0,"122":0,"125":1,"126":0,"127":0,"130":1,"132":0,"133":0,"134":0,"137":0,"139":0,"141":0,"143":0,"145":0,"148":0,"150":0,"152":0,"154":0,"156":0,"159":0,"161":0,"163":0,"165":0,"167":0,"170":0,"173":0,"176":0,"177":0,"178":0,"181":0,"184":0,"188":0,"189":0,"193":0,"194":0,"198":0,"199":0,"200":0,"201":0,"202":0,"207":0,"208":0,"209":0,"210":0,"213":0,"214":0,"215":0,"218":0,"219":0,"220":0,"221":0,"224":0,"227":0,"228":0,"232":0,"233":0,"236":0,"237":0,"240":0,"241":0,"244":0,"245":0,"249":0,"251":0,"254":0,"255":0,"259":0,"262":0,"266":0,"267":0,"272":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"282":0,"283":0,"285":0,"286":0,"287":0,"297":0,"298":0,"300":0,"304":0,"306":0,"308":0,"310":0,"311":0,"312":0,"313":0,"315":0,"319":0,"322":0,"324":0,"325":0,"326":0,"327":0,"330":0,"332":0,"335":0,"338":0,"339":0,"342":0,"343":0,"344":0,"345":0,"347":0,"355":0,"356":0,"361":0,"362":0,"363":0,"366":0,"367":0,"369":0,"370":0,"372":0,"373":0,"375":0,"376":0,"377":0,"378":0,"384":0,"385":0,"387":0,"388":0,"389":0,"392":0,"393":0,"394":0,"395":0,"397":0,"401":0,"409":0,"411":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"422":0,"423":0,"424":0,"427":0,"428":0,"430":0,"431":0,"432":0,"435":0,"437":0,"438":0,"439":0,"443":0,"445":0,"447":0,"448":0,"452":0,"453":0,"456":0,"458":0,"459":0,"460":0,"462":0,"463":0,"466":0,"469":0,"470":0,"474":0,"475":0,"479":0,"480":0,"481":0,"482":0,"484":0,"485":0,"486":0,"487":0,"491":0,"492":0,"493":0,"494":0,"496":0,"497":0,"498":0,"499":0,"502":0,"506":1,"508":1,"510":1,"512":1,"514":1,"516":1,"518":1,"523":0,"525":0,"527":0,"529":0,"531":0,"533":0,"535":0,"537":0,"538":0,"540":0,"543":0,"545":0,"548":0,"551":0,"553":0,"555":0,"556":0,"559":0,"562":0,"565":0,"568":0,"569":0,"572":0,"573":0,"576":0,"579":0,"583":0,"584":0,"588":0,"590":0,"592":0,"593":0,"594":0,"595":0,"597":0,"598":0,"601":0,"602":0,"605":0,"612":0,"613":0,"614":0,"615":0,"617":0,"619":0,"621":0,"622":0,"624":0,"625":0,"626":0,"630":0,"632":0,"634":0,"636":0,"645":0,"646":0,"647":0,"649":0,"650":0,"652":0,"653":0,"654":0,"655":0,"659":0,"669":0,"672":0,"673":0,"675":0,"676":0,"679":0,"680":0,"684":0,"685":0,"686":0,"688":0,"692":0,"693":0,"694":0,"697":0,"700":0,"701":0,"702":0,"705":0,"708":0,"710":0,"711":0,"714":0,"715":0,"720":0,"723":1,"724":0,"727":1,"728":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/min_key.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/min_key.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MinKey","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":52}},"3":{"start":{"line":8,"column":32},"end":{"line":8,"column":52}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["/**"," * A class representation of the BSON MinKey type."," *"," * @class"," * @return {MinKey} A MinKey instance"," */","function MinKey() {","  if(!(this instanceof MinKey)) return new MinKey();","  ","  this._bsontype = 'MinKey';","}","","module.exports = MinKey;","module.exports.MinKey = MinKey;"],"l":{"7":1,"8":0,"10":0,"13":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/max_key.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/max_key.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MaxKey","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":52}},"3":{"start":{"line":8,"column":32},"end":{"line":8,"column":52}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["/**"," * A class representation of the BSON MaxKey type."," *"," * @class"," * @return {MaxKey} A MaxKey instance"," */","function MaxKey() {","  if(!(this instanceof MaxKey)) return new MaxKey();","  ","  this._bsontype = 'MaxKey';  ","}","","module.exports = MaxKey;","module.exports.MaxKey = MaxKey;"],"l":{"7":1,"8":0,"10":0,"13":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/db_ref.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/db_ref.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"DBRef","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":68}},"3":{"start":{"line":11,"column":31},"end":{"line":11,"column":68}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":27}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":17}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"8":{"start":{"line":23,"column":0},"end":{"line":29,"column":1}},"9":{"start":{"line":24,"column":2},"end":{"line":28,"column":4}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":23}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":29}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":28},"end":{"line":27,"column":30}},{"start":{"line":27,"column":33},"end":{"line":27,"column":40}}]}},"code":["/**"," * A class representation of the BSON DBRef type."," *"," * @class"," * @param {string} namespace the collection name."," * @param {ObjectID} oid the reference ObjectID."," * @param {string} [db] optional db name, if omitted the reference is local to the current db."," * @return {DBRef}"," */","function DBRef(namespace, oid, db) {","  if(!(this instanceof DBRef)) return new DBRef(namespace, oid, db);","  ","  this._bsontype = 'DBRef';","  this.namespace = namespace;","  this.oid = oid;","  this.db = db;","};","","/**"," * @ignore"," * @api private"," */","DBRef.prototype.toJSON = function() {","  return {","    '$ref':this.namespace,","    '$id':this.oid,","    '$db':this.db == null ? '' : this.db","  };","}","","module.exports = DBRef;","module.exports.DBRef = DBRef;"],"l":{"10":1,"11":0,"13":0,"14":0,"15":0,"16":0,"23":1,"24":0,"31":1,"32":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/binary.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/binary.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":1,"106":0,"107":1,"108":1,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Binary","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"2":{"name":"put","line":75,"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":48}}},"3":{"name":"write","line":130,"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":56}}},"4":{"name":"read","line":185,"loc":{"start":{"line":185,"column":24},"end":{"line":185,"column":56}}},"5":{"name":"value","line":210,"loc":{"start":{"line":210,"column":25},"end":{"line":210,"column":47}}},"6":{"name":"length","line":247,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":44}}},"7":{"name":"(anonymous_7)","line":254,"loc":{"start":{"line":254,"column":26},"end":{"line":254,"column":37}}},"8":{"name":"(anonymous_8)","line":261,"loc":{"start":{"line":261,"column":28},"end":{"line":261,"column":45}}},"9":{"name":"(anonymous_9)","line":274,"loc":{"start":{"line":274,"column":25},"end":{"line":274,"column":40}}},"10":{"name":"(anonymous_10)","line":290,"loc":{"start":{"line":290,"column":37},"end":{"line":290,"column":79}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":1}},"2":{"start":{"line":9,"column":2},"end":{"line":9,"column":40}},"3":{"start":{"line":28,"column":0},"end":{"line":67,"column":1}},"4":{"start":{"line":29,"column":2},"end":{"line":29,"column":67}},"5":{"start":{"line":29,"column":32},"end":{"line":29,"column":67}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}},"7":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":76}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":22}},"12":{"start":{"line":41,"column":2},"end":{"line":66,"column":3}},"13":{"start":{"line":43,"column":4},"end":{"line":54,"column":5}},"14":{"start":{"line":45,"column":6},"end":{"line":51,"column":7}},"15":{"start":{"line":46,"column":8},"end":{"line":46,"column":41}},"16":{"start":{"line":47,"column":13},"end":{"line":51,"column":7}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":49}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":77}},"19":{"start":{"line":53,"column":6},"end":{"line":53,"column":27}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":34}},"21":{"start":{"line":57,"column":4},"end":{"line":63,"column":5}},"22":{"start":{"line":58,"column":6},"end":{"line":58,"column":52}},"23":{"start":{"line":59,"column":11},"end":{"line":63,"column":5}},"24":{"start":{"line":60,"column":6},"end":{"line":60,"column":72}},"25":{"start":{"line":62,"column":6},"end":{"line":62,"column":50}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":22}},"27":{"start":{"line":75,"column":0},"end":{"line":120,"column":2}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":171}},"29":{"start":{"line":77,"column":94},"end":{"line":77,"column":171}},"30":{"start":{"line":78,"column":2},"end":{"line":78,"column":150}},"31":{"start":{"line":78,"column":74},"end":{"line":78,"column":150}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":26}},"33":{"start":{"line":82,"column":2},"end":{"line":88,"column":3}},"34":{"start":{"line":83,"column":4},"end":{"line":83,"column":44}},"35":{"start":{"line":84,"column":9},"end":{"line":88,"column":3}},"36":{"start":{"line":85,"column":4},"end":{"line":85,"column":33}},"37":{"start":{"line":87,"column":4},"end":{"line":87,"column":30}},"38":{"start":{"line":90,"column":2},"end":{"line":119,"column":3}},"39":{"start":{"line":91,"column":4},"end":{"line":91,"column":48}},"40":{"start":{"line":93,"column":4},"end":{"line":118,"column":5}},"41":{"start":{"line":95,"column":6},"end":{"line":95,"column":71}},"42":{"start":{"line":97,"column":6},"end":{"line":97,"column":57}},"43":{"start":{"line":98,"column":6},"end":{"line":98,"column":27}},"44":{"start":{"line":99,"column":6},"end":{"line":99,"column":50}},"45":{"start":{"line":101,"column":6},"end":{"line":101,"column":24}},"46":{"start":{"line":103,"column":6},"end":{"line":107,"column":7}},"47":{"start":{"line":104,"column":8},"end":{"line":104,"column":90}},"48":{"start":{"line":106,"column":8},"end":{"line":106,"column":68}},"49":{"start":{"line":110,"column":6},"end":{"line":112,"column":7}},"50":{"start":{"line":111,"column":8},"end":{"line":111,"column":35}},"51":{"start":{"line":115,"column":6},"end":{"line":115,"column":27}},"52":{"start":{"line":117,"column":6},"end":{"line":117,"column":50}},"53":{"start":{"line":130,"column":0},"end":{"line":175,"column":2}},"54":{"start":{"line":131,"column":2},"end":{"line":131,"column":62}},"55":{"start":{"line":134,"column":2},"end":{"line":151,"column":3}},"56":{"start":{"line":135,"column":4},"end":{"line":135,"column":22}},"57":{"start":{"line":137,"column":4},"end":{"line":147,"column":5}},"58":{"start":{"line":138,"column":6},"end":{"line":138,"column":62}},"59":{"start":{"line":139,"column":6},"end":{"line":139,"column":57}},"60":{"start":{"line":140,"column":11},"end":{"line":147,"column":5}},"61":{"start":{"line":142,"column":6},"end":{"line":142,"column":82}},"62":{"start":{"line":144,"column":6},"end":{"line":146,"column":7}},"63":{"start":{"line":145,"column":8},"end":{"line":145,"column":35}},"64":{"start":{"line":150,"column":4},"end":{"line":150,"column":25}},"65":{"start":{"line":153,"column":2},"end":{"line":174,"column":3}},"66":{"start":{"line":154,"column":4},"end":{"line":154,"column":55}},"67":{"start":{"line":155,"column":4},"end":{"line":155,"column":104}},"68":{"start":{"line":157,"column":9},"end":{"line":174,"column":3}},"69":{"start":{"line":158,"column":4},"end":{"line":158,"column":48}},"70":{"start":{"line":159,"column":4},"end":{"line":159,"column":104}},"71":{"start":{"line":161,"column":9},"end":{"line":174,"column":3}},"72":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"73":{"start":{"line":164,"column":6},"end":{"line":164,"column":40}},"74":{"start":{"line":167,"column":4},"end":{"line":167,"column":68}},"75":{"start":{"line":168,"column":9},"end":{"line":174,"column":3}},"76":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"77":{"start":{"line":170,"column":6},"end":{"line":170,"column":51}},"78":{"start":{"line":173,"column":4},"end":{"line":173,"column":68}},"79":{"start":{"line":185,"column":0},"end":{"line":202,"column":2}},"80":{"start":{"line":186,"column":2},"end":{"line":188,"column":20}},"81":{"start":{"line":191,"column":2},"end":{"line":199,"column":3}},"82":{"start":{"line":192,"column":4},"end":{"line":192,"column":58}},"83":{"start":{"line":195,"column":4},"end":{"line":195,"column":112}},"84":{"start":{"line":196,"column":4},"end":{"line":198,"column":5}},"85":{"start":{"line":197,"column":6},"end":{"line":197,"column":42}},"86":{"start":{"line":201,"column":2},"end":{"line":201,"column":16}},"87":{"start":{"line":210,"column":0},"end":{"line":239,"column":2}},"88":{"start":{"line":211,"column":2},"end":{"line":211,"column":40}},"89":{"start":{"line":214,"column":2},"end":{"line":215,"column":23}},"90":{"start":{"line":215,"column":4},"end":{"line":215,"column":23}},"91":{"start":{"line":218,"column":2},"end":{"line":238,"column":3}},"92":{"start":{"line":219,"column":4},"end":{"line":219,"column":106}},"93":{"start":{"line":221,"column":4},"end":{"line":237,"column":5}},"94":{"start":{"line":223,"column":6},"end":{"line":234,"column":7}},"95":{"start":{"line":224,"column":8},"end":{"line":224,"column":51}},"96":{"start":{"line":227,"column":8},"end":{"line":227,"column":169}},"97":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"98":{"start":{"line":230,"column":10},"end":{"line":230,"column":40}},"99":{"start":{"line":233,"column":8},"end":{"line":233,"column":25}},"100":{"start":{"line":236,"column":6},"end":{"line":236,"column":75}},"101":{"start":{"line":247,"column":0},"end":{"line":249,"column":2}},"102":{"start":{"line":248,"column":2},"end":{"line":248,"column":23}},"103":{"start":{"line":254,"column":0},"end":{"line":256,"column":1}},"104":{"start":{"line":255,"column":2},"end":{"line":255,"column":67}},"105":{"start":{"line":261,"column":0},"end":{"line":263,"column":1}},"106":{"start":{"line":262,"column":2},"end":{"line":262,"column":89}},"107":{"start":{"line":269,"column":0},"end":{"line":269,"column":36}},"108":{"start":{"line":274,"column":0},"end":{"line":283,"column":1}},"109":{"start":{"line":276,"column":2},"end":{"line":276,"column":120}},"110":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"111":{"start":{"line":279,"column":4},"end":{"line":279,"column":35}},"112":{"start":{"line":282,"column":2},"end":{"line":282,"column":16}},"113":{"start":{"line":290,"column":0},"end":{"line":296,"column":2}},"114":{"start":{"line":291,"column":2},"end":{"line":291,"column":18}},"115":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"116":{"start":{"line":293,"column":3},"end":{"line":293,"column":55}},"117":{"start":{"line":295,"column":2},"end":{"line":295,"column":16}},"118":{"start":{"line":298,"column":0},"end":{"line":298,"column":25}},"119":{"start":{"line":305,"column":0},"end":{"line":305,"column":27}},"120":{"start":{"line":311,"column":0},"end":{"line":311,"column":28}},"121":{"start":{"line":317,"column":0},"end":{"line":317,"column":30}},"122":{"start":{"line":323,"column":0},"end":{"line":323,"column":28}},"123":{"start":{"line":329,"column":0},"end":{"line":329,"column":24}},"124":{"start":{"line":335,"column":0},"end":{"line":335,"column":23}},"125":{"start":{"line":341,"column":0},"end":{"line":341,"column":34}},"126":{"start":{"line":346,"column":0},"end":{"line":346,"column":24}},"127":{"start":{"line":347,"column":0},"end":{"line":347,"column":31}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":0},"end":{"line":8,"column":0}},{"start":{"line":8,"column":0},"end":{"line":8,"column":0}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":38},"end":{"line":37,"column":65}},{"start":{"line":37,"column":68},"end":{"line":37,"column":75}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":5},"end":{"line":41,"column":19}},{"start":{"line":41,"column":23},"end":{"line":41,"column":50}}]},"7":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":47,"column":13}},{"start":{"line":47,"column":13},"end":{"line":47,"column":13}}]},"10":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":48}},{"start":{"line":47,"column":53},"end":{"line":47,"column":111}}]},"11":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"12":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":11},"end":{"line":59,"column":11}},{"start":{"line":59,"column":11},"end":{"line":59,"column":11}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"14":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":5},"end":{"line":77,"column":33}},{"start":{"line":77,"column":37},"end":{"line":77,"column":66}},{"start":{"line":77,"column":70},"end":{"line":77,"column":92}}]},"15":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"16":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":5},"end":{"line":78,"column":34}},{"start":{"line":78,"column":38},"end":{"line":78,"column":52}},{"start":{"line":78,"column":56},"end":{"line":78,"column":72}}]},"17":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"18":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":9},"end":{"line":84,"column":9}},{"start":{"line":84,"column":9},"end":{"line":84,"column":9}}]},"19":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"20":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"21":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":7},"end":{"line":93,"column":35}},{"start":{"line":93,"column":39},"end":{"line":93,"column":67}}]},"22":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"23":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":39},"end":{"line":131,"column":45}},{"start":{"line":131,"column":48},"end":{"line":131,"column":61}}]},"24":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"25":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"26":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":7},"end":{"line":137,"column":35}},{"start":{"line":137,"column":39},"end":{"line":137,"column":67}}]},"27":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":11}},{"start":{"line":140,"column":11},"end":{"line":140,"column":11}}]},"28":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"29":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":5},"end":{"line":153,"column":33}},{"start":{"line":153,"column":37},"end":{"line":153,"column":60}},{"start":{"line":153,"column":64},"end":{"line":153,"column":92}}]},"30":{"line":155,"type":"cond-expr","locations":[{"start":{"line":155,"column":64},"end":{"line":155,"column":86}},{"start":{"line":155,"column":90},"end":{"line":155,"column":103}}]},"31":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":9}},{"start":{"line":157,"column":9},"end":{"line":157,"column":9}}]},"32":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":40}},{"start":{"line":157,"column":44},"end":{"line":157,"column":69}},{"start":{"line":157,"column":73},"end":{"line":157,"column":101}}]},"33":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":64},"end":{"line":159,"column":86}},{"start":{"line":159,"column":90},"end":{"line":159,"column":103}}]},"34":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":161,"column":9}},{"start":{"line":161,"column":9},"end":{"line":161,"column":9}}]},"35":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":75}},{"start":{"line":162,"column":7},"end":{"line":162,"column":65}},{"start":{"line":162,"column":69},"end":{"line":162,"column":94}}]},"36":{"line":167,"type":"cond-expr","locations":[{"start":{"line":167,"column":45},"end":{"line":167,"column":51}},{"start":{"line":167,"column":54},"end":{"line":167,"column":67}}]},"37":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":9},"end":{"line":168,"column":9}},{"start":{"line":168,"column":9},"end":{"line":168,"column":9}}]},"38":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":45},"end":{"line":173,"column":51}},{"start":{"line":173,"column":54},"end":{"line":173,"column":67}}]},"39":{"line":186,"type":"cond-expr","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":12}},{"start":{"line":188,"column":6},"end":{"line":188,"column":19}}]},"40":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":11},"end":{"line":186,"column":17}},{"start":{"line":186,"column":21},"end":{"line":186,"column":31}}]},"41":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"42":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":52},"end":{"line":195,"column":91}},{"start":{"line":195,"column":94},"end":{"line":195,"column":111}}]},"43":{"line":211,"type":"cond-expr","locations":[{"start":{"line":211,"column":26},"end":{"line":211,"column":31}},{"start":{"line":211,"column":34},"end":{"line":211,"column":39}}]},"44":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"45":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":5},"end":{"line":214,"column":10}},{"start":{"line":214,"column":14},"end":{"line":214,"column":42}},{"start":{"line":214,"column":46},"end":{"line":214,"column":74}},{"start":{"line":214,"column":78},"end":{"line":214,"column":113}}]},"46":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"47":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":5},"end":{"line":218,"column":33}},{"start":{"line":218,"column":37},"end":{"line":218,"column":65}}]},"48":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":19},"end":{"line":219,"column":54}},{"start":{"line":219,"column":57},"end":{"line":219,"column":105}}]},"49":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"50":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":6}},{"start":{"line":223,"column":6},"end":{"line":223,"column":6}}]},"51":{"line":227,"type":"cond-expr","locations":[{"start":{"line":227,"column":95},"end":{"line":227,"column":141}},{"start":{"line":227,"column":144},"end":{"line":227,"column":168}}]},"52":{"line":255,"type":"cond-expr","locations":[{"start":{"line":255,"column":31},"end":{"line":255,"column":61}},{"start":{"line":255,"column":64},"end":{"line":255,"column":66}}]},"53":{"line":262,"type":"cond-expr","locations":[{"start":{"line":262,"column":31},"end":{"line":262,"column":83}},{"start":{"line":262,"column":86},"end":{"line":262,"column":88}}]},"54":{"line":276,"type":"cond-expr","locations":[{"start":{"line":276,"column":50},"end":{"line":276,"column":94}},{"start":{"line":276,"column":97},"end":{"line":276,"column":119}}]}},"code":["/**"," * Module dependencies."," * @ignore"," */","","// Test if we're in Node via presence of \"global\" not absence of \"window\"","// to support hybrid environments like Electron","if(typeof global !== 'undefined') {","  var Buffer = require('buffer').Buffer; // TODO just use global Buffer","}","","/**"," * A class representation of the BSON Binary type."," *"," * Sub types"," *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type."," *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type."," *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type."," *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type."," *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type."," *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type."," *"," * @class"," * @param {Buffer} buffer a buffer object containing the binary data."," * @param {Number} [subType] the option binary type."," * @return {Binary}"," */","function Binary(buffer, subType) {","  if(!(this instanceof Binary)) return new Binary(buffer, subType);","","  this._bsontype = 'Binary';","","  if(buffer instanceof Number) {","    this.sub_type = buffer;","    this.position = 0;","  } else {","    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;","    this.position = 0;","  }","","  if(buffer != null && !(buffer instanceof Number)) {","    // Only accept Buffer, Uint8Array or Arrays","    if(typeof buffer == 'string') {","      // Different ways of writing the length of the string for the different types","      if(typeof Buffer != 'undefined') {","        this.buffer = new Buffer(buffer);","      } else if(typeof Uint8Array != 'undefined' || (Object.prototype.toString.call(buffer) == '[object Array]')) {","        this.buffer = writeStringToArray(buffer);","      } else {","        throw new Error(\"only String, Buffer, Uint8Array or Array accepted\");","      }","    } else {","      this.buffer = buffer;","    }","    this.position = buffer.length;","  } else {","    if(typeof Buffer != 'undefined') {","      this.buffer =  new Buffer(Binary.BUFFER_SIZE);","    } else if(typeof Uint8Array != 'undefined'){","      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));","    } else {","      this.buffer = new Array(Binary.BUFFER_SIZE);","    }","    // Set position to start of buffer","    this.position = 0;","  }","};","","/**"," * Updates this binary with byte_value."," *"," * @method"," * @param {string} byte_value a single byte we wish to write."," */","Binary.prototype.put = function put(byte_value) {","  // If it's a string and a has more than one character throw an error","  if(byte_value['length'] != null && typeof byte_value != 'number' && byte_value.length != 1) throw new Error(\"only accepts single character String, Uint8Array or Array\");","  if(typeof byte_value != 'number' && byte_value < 0 || byte_value > 255) throw new Error(\"only accepts number in a valid unsigned byte range 0-255\");","","  // Decode the byte value once","  var decoded_byte = null;","  if(typeof byte_value == 'string') {","    decoded_byte = byte_value.charCodeAt(0);","  } else if(byte_value['length'] != null) {","    decoded_byte = byte_value[0];","  } else {","    decoded_byte = byte_value;","  }","","  if(this.buffer.length > this.position) {","    this.buffer[this.position++] = decoded_byte;","  } else {","    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {","      // Create additional overflow buffer","      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);","      // Combine the two buffers together","      this.buffer.copy(buffer, 0, 0, this.buffer.length);","      this.buffer = buffer;","      this.buffer[this.position++] = decoded_byte;","    } else {","      var buffer = null;","      // Create a new buffer (typed or normal array)","      if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {","        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));","      } else {","        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);","      }","","      // We need to copy all the content to the new array","      for(var i = 0; i < this.buffer.length; i++) {","        buffer[i] = this.buffer[i];","      }","","      // Reassign the buffer","      this.buffer = buffer;","      // Write the byte","      this.buffer[this.position++] = decoded_byte;","    }","  }","};","","/**"," * Writes a buffer or string to the binary."," *"," * @method"," * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object."," * @param {number} offset specify the binary of where to write the content."," * @return {null}"," */","Binary.prototype.write = function write(string, offset) {","  offset = typeof offset == 'number' ? offset : this.position;","","  // If the buffer is to small let's extend the buffer","  if(this.buffer.length < offset + string.length) {","    var buffer = null;","    // If we are in node.js","    if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {","      buffer = new Buffer(this.buffer.length + string.length);","      this.buffer.copy(buffer, 0, 0, this.buffer.length);","    } else if(Object.prototype.toString.call(this.buffer) == '[object Uint8Array]') {","      // Create a new buffer","      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length))","      // Copy the content","      for(var i = 0; i < this.position; i++) {","        buffer[i] = this.buffer[i];","      }","    }","","    // Assign the new buffer","    this.buffer = buffer;","  }","","  if(typeof Buffer != 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {","    string.copy(this.buffer, offset, 0, string.length);","    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;","    // offset = string.length","  } else if(typeof Buffer != 'undefined' && typeof string == 'string' && Buffer.isBuffer(this.buffer)) {","    this.buffer.write(string, offset, 'binary');","    this.position = (offset + string.length) > this.position ? (offset + string.length) : this.position;","    // offset = string.length;","  } else if(Object.prototype.toString.call(string) == '[object Uint8Array]'","    || Object.prototype.toString.call(string) == '[object Array]' && typeof string != 'string') {","    for(var i = 0; i < string.length; i++) {","      this.buffer[offset++] = string[i];","    }","","    this.position = offset > this.position ? offset : this.position;","  } else if(typeof string == 'string') {","    for(var i = 0; i < string.length; i++) {","      this.buffer[offset++] = string.charCodeAt(i);","    }","","    this.position = offset > this.position ? offset : this.position;","  }","};","","/**"," * Reads **length** bytes starting at **position**."," *"," * @method"," * @param {number} position read from the given position in the Binary."," * @param {number} length the number of bytes to read."," * @return {Buffer}"," */","Binary.prototype.read = function read(position, length) {","  length = length && length > 0","    ? length","    : this.position;","","  // Let's return the data based on the type we have","  if(this.buffer['slice']) {","    return this.buffer.slice(position, position + length);","  } else {","    // Create a buffer to keep the result","    var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(length)) : new Array(length);","    for(var i = 0; i < length; i++) {","      buffer[i] = this.buffer[position++];","    }","  }","  // Return the buffer","  return buffer;","};","","/**"," * Returns the value of this binary as a string."," *"," * @method"," * @return {string}"," */","Binary.prototype.value = function value(asRaw) {","  asRaw = asRaw == null ? false : asRaw;","","  // Optimize to serialize for the situation where the data == size of buffer","  if(asRaw && typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer) && this.buffer.length == this.position)","    return this.buffer;","","  // If it's a node.js buffer object","  if(typeof Buffer != 'undefined' && Buffer.isBuffer(this.buffer)) {","    return asRaw ? this.buffer.slice(0, this.position) : this.buffer.toString('binary', 0, this.position);","  } else {","    if(asRaw) {","      // we support the slice command use it","      if(this.buffer['slice'] != null) {","        return this.buffer.slice(0, this.position);","      } else {","        // Create a new buffer to copy content to","        var newBuffer = Object.prototype.toString.call(this.buffer) == '[object Uint8Array]' ? new Uint8Array(new ArrayBuffer(this.position)) : new Array(this.position);","        // Copy content","        for(var i = 0; i < this.position; i++) {","          newBuffer[i] = this.buffer[i];","        }","        // Return the buffer","        return newBuffer;","      }","    } else {","      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);","    }","  }","};","","/**"," * Length."," *"," * @method"," * @return {number} the length of the binary."," */","Binary.prototype.length = function length() {","  return this.position;","};","","/**"," * @ignore"," */","Binary.prototype.toJSON = function() {","  return this.buffer != null ? this.buffer.toString('base64') : '';","}","","/**"," * @ignore"," */","Binary.prototype.toString = function(format) {","  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';","}","","/**"," * Binary default subtype"," * @ignore"," */","var BSON_BINARY_SUBTYPE_DEFAULT = 0;","","/**"," * @ignore"," */","var writeStringToArray = function(data) {","  // Create a buffer","  var buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(data.length)) : new Array(data.length);","  // Write the content to the buffer","  for(var i = 0; i < data.length; i++) {","    buffer[i] = data.charCodeAt(i);","  }","  // Write the string to the buffer","  return buffer;","}","","/**"," * Convert Array ot Uint8Array to Binary String"," *"," * @ignore"," */","var convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {","  var result = \"\";","  for(var i = startIndex; i < endIndex; i++) {","   result = result + String.fromCharCode(byteArray[i]);","  }","  return result;","};","","Binary.BUFFER_SIZE = 256;","","/**"," * Default BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_DEFAULT = 0;","/**"," * Function BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_FUNCTION = 1;","/**"," * Byte Array BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_BYTE_ARRAY = 2;","/**"," * OLD UUID BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID_OLD = 3;","/**"," * UUID BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_UUID = 4;","/**"," * MD5 BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_MD5 = 5;","/**"," * User BSON type"," *"," * @classconstant SUBTYPE_DEFAULT"," **/","Binary.SUBTYPE_USER_DEFINED = 128;","","/**"," * Expose."," */","module.exports = Binary;","module.exports.Binary = Binary;",""],"l":{"8":1,"9":1,"28":1,"29":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"41":0,"43":0,"45":0,"46":0,"47":0,"48":0,"50":0,"53":0,"55":0,"57":0,"58":0,"59":0,"60":0,"62":0,"65":0,"75":1,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"90":0,"91":0,"93":0,"95":0,"97":0,"98":0,"99":0,"101":0,"103":0,"104":0,"106":0,"110":0,"111":0,"115":0,"117":0,"130":1,"131":0,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"142":0,"144":0,"145":0,"150":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"161":0,"163":0,"164":0,"167":0,"168":0,"169":0,"170":0,"173":0,"185":1,"186":0,"191":0,"192":0,"195":0,"196":0,"197":0,"201":0,"210":1,"211":0,"214":0,"215":0,"218":0,"219":0,"221":0,"223":0,"224":0,"227":0,"229":0,"230":0,"233":0,"236":0,"247":1,"248":0,"254":1,"255":0,"261":1,"262":0,"269":1,"274":1,"276":0,"278":0,"279":0,"282":0,"290":1,"291":0,"292":0,"293":0,"295":0,"298":1,"305":1,"311":1,"317":1,"323":1,"329":1,"335":1,"341":1,"346":1,"347":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/deserializer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/deserializer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":1,"262":0,"263":0,"264":0,"265":0,"266":0,"267":1,"268":0,"269":0,"270":0,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":53}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":66}}},"3":{"name":"(anonymous_3)","line":437,"loc":{"start":{"line":437,"column":26},"end":{"line":437,"column":80}}},"4":{"name":"(anonymous_4)","line":456,"loc":{"start":{"line":456,"column":18},"end":{"line":456,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":17,"column":39}},"2":{"start":{"line":19,"column":0},"end":{"line":37,"column":1}},"3":{"start":{"line":20,"column":1},"end":{"line":20,"column":42}},"4":{"start":{"line":21,"column":1},"end":{"line":21,"column":58}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":98}},"6":{"start":{"line":26,"column":2},"end":{"line":28,"column":2}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":42}},"8":{"start":{"line":31,"column":1},"end":{"line":33,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":97}},"10":{"start":{"line":36,"column":1},"end":{"line":36,"column":59}},"11":{"start":{"line":39,"column":0},"end":{"line":429,"column":1}},"12":{"start":{"line":40,"column":1},"end":{"line":40,"column":89}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":93}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":108}},"15":{"start":{"line":43,"column":1},"end":{"line":43,"column":82}},"16":{"start":{"line":46,"column":1},"end":{"line":46,"column":59}},"17":{"start":{"line":49,"column":2},"end":{"line":49,"column":93}},"18":{"start":{"line":52,"column":1},"end":{"line":52,"column":92}},"19":{"start":{"line":53,"column":1},"end":{"line":53,"column":85}},"20":{"start":{"line":54,"column":1},"end":{"line":54,"column":88}},"21":{"start":{"line":57,"column":1},"end":{"line":57,"column":24}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":79}},"23":{"start":{"line":60,"column":24},"end":{"line":60,"column":79}},"24":{"start":{"line":63,"column":2},"end":{"line":63,"column":100}},"25":{"start":{"line":66,"column":2},"end":{"line":66,"column":79}},"26":{"start":{"line":66,"column":39},"end":{"line":66,"column":79}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":33}},"28":{"start":{"line":71,"column":1},"end":{"line":71,"column":20}},"29":{"start":{"line":74,"column":2},"end":{"line":418,"column":3}},"30":{"start":{"line":76,"column":4},"end":{"line":76,"column":38}},"31":{"start":{"line":78,"column":4},"end":{"line":80,"column":3}},"32":{"start":{"line":79,"column":3},"end":{"line":79,"column":9}},"33":{"start":{"line":83,"column":2},"end":{"line":83,"column":16}},"34":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"35":{"start":{"line":86,"column":3},"end":{"line":86,"column":6}},"36":{"start":{"line":90,"column":2},"end":{"line":90,"column":78}},"37":{"start":{"line":90,"column":25},"end":{"line":90,"column":78}},"38":{"start":{"line":91,"column":2},"end":{"line":91,"column":72}},"39":{"start":{"line":93,"column":2},"end":{"line":93,"column":16}},"40":{"start":{"line":95,"column":2},"end":{"line":417,"column":3}},"41":{"start":{"line":96,"column":6},"end":{"line":96,"column":110}},"42":{"start":{"line":97,"column":3},"end":{"line":97,"column":147}},"43":{"start":{"line":97,"column":102},"end":{"line":97,"column":147}},"44":{"start":{"line":98,"column":6},"end":{"line":98,"column":76}},"45":{"start":{"line":99,"column":6},"end":{"line":99,"column":33}},"46":{"start":{"line":100,"column":9},"end":{"line":417,"column":3}},"47":{"start":{"line":101,"column":3},"end":{"line":101,"column":28}},"48":{"start":{"line":102,"column":3},"end":{"line":102,"column":42}},"49":{"start":{"line":103,"column":6},"end":{"line":103,"column":39}},"50":{"start":{"line":104,"column":6},"end":{"line":104,"column":25}},"51":{"start":{"line":105,"column":9},"end":{"line":417,"column":3}},"52":{"start":{"line":106,"column":3},"end":{"line":106,"column":116}},"53":{"start":{"line":107,"column":9},"end":{"line":417,"column":3}},"54":{"start":{"line":108,"column":6},"end":{"line":108,"column":108}},"55":{"start":{"line":109,"column":9},"end":{"line":417,"column":3}},"56":{"start":{"line":110,"column":3},"end":{"line":110,"column":57}},"57":{"start":{"line":111,"column":3},"end":{"line":111,"column":21}},"58":{"start":{"line":112,"column":9},"end":{"line":417,"column":3}},"59":{"start":{"line":113,"column":3},"end":{"line":113,"column":45}},"60":{"start":{"line":114,"column":6},"end":{"line":114,"column":24}},"61":{"start":{"line":115,"column":9},"end":{"line":417,"column":3}},"62":{"start":{"line":116,"column":6},"end":{"line":116,"column":107}},"63":{"start":{"line":117,"column":6},"end":{"line":117,"column":108}},"64":{"start":{"line":118,"column":6},"end":{"line":118,"column":70}},"65":{"start":{"line":119,"column":9},"end":{"line":417,"column":3}},"66":{"start":{"line":120,"column":3},"end":{"line":120,"column":94}},"67":{"start":{"line":120,"column":48},"end":{"line":120,"column":94}},"68":{"start":{"line":121,"column":6},"end":{"line":121,"column":42}},"69":{"start":{"line":122,"column":9},"end":{"line":417,"column":3}},"70":{"start":{"line":123,"column":3},"end":{"line":123,"column":22}},"71":{"start":{"line":124,"column":6},"end":{"line":124,"column":114}},"72":{"start":{"line":125,"column":3},"end":{"line":125,"column":119}},"73":{"start":{"line":125,"column":63},"end":{"line":125,"column":119}},"74":{"start":{"line":128,"column":3},"end":{"line":132,"column":4}},"75":{"start":{"line":129,"column":7},"end":{"line":129,"column":62}},"76":{"start":{"line":131,"column":7},"end":{"line":131,"column":72}},"77":{"start":{"line":134,"column":6},"end":{"line":134,"column":33}},"78":{"start":{"line":135,"column":9},"end":{"line":417,"column":3}},"79":{"start":{"line":136,"column":3},"end":{"line":136,"column":22}},"80":{"start":{"line":137,"column":6},"end":{"line":137,"column":114}},"81":{"start":{"line":138,"column":3},"end":{"line":138,"column":30}},"82":{"start":{"line":141,"column":3},"end":{"line":141,"column":38}},"83":{"start":{"line":144,"column":3},"end":{"line":148,"column":4}},"84":{"start":{"line":145,"column":4},"end":{"line":145,"column":22}},"85":{"start":{"line":146,"column":4},"end":{"line":146,"column":55}},"86":{"start":{"line":146,"column":26},"end":{"line":146,"column":55}},"87":{"start":{"line":147,"column":4},"end":{"line":147,"column":31}},"88":{"start":{"line":150,"column":6},"end":{"line":150,"column":75}},"89":{"start":{"line":151,"column":6},"end":{"line":151,"column":33}},"90":{"start":{"line":153,"column":3},"end":{"line":153,"column":79}},"91":{"start":{"line":153,"column":30},"end":{"line":153,"column":79}},"92":{"start":{"line":154,"column":3},"end":{"line":154,"column":66}},"93":{"start":{"line":154,"column":26},"end":{"line":154,"column":66}},"94":{"start":{"line":155,"column":9},"end":{"line":417,"column":3}},"95":{"start":{"line":156,"column":6},"end":{"line":156,"column":31}},"96":{"start":{"line":157,"column":9},"end":{"line":417,"column":3}},"97":{"start":{"line":158,"column":3},"end":{"line":158,"column":23}},"98":{"start":{"line":159,"column":9},"end":{"line":417,"column":3}},"99":{"start":{"line":161,"column":6},"end":{"line":161,"column":107}},"100":{"start":{"line":162,"column":6},"end":{"line":162,"column":108}},"101":{"start":{"line":163,"column":6},"end":{"line":163,"column":45}},"102":{"start":{"line":165,"column":6},"end":{"line":169,"column":7}},"103":{"start":{"line":166,"column":8},"end":{"line":166,"column":130}},"104":{"start":{"line":168,"column":8},"end":{"line":168,"column":28}},"105":{"start":{"line":170,"column":9},"end":{"line":417,"column":3}},"106":{"start":{"line":172,"column":3},"end":{"line":172,"column":30}},"107":{"start":{"line":174,"column":3},"end":{"line":174,"column":44}},"108":{"start":{"line":176,"column":3},"end":{"line":176,"column":22}},"109":{"start":{"line":178,"column":3},"end":{"line":178,"column":42}},"110":{"start":{"line":180,"column":3},"end":{"line":180,"column":75}},"111":{"start":{"line":181,"column":9},"end":{"line":417,"column":3}},"112":{"start":{"line":182,"column":6},"end":{"line":182,"column":110}},"113":{"start":{"line":183,"column":3},"end":{"line":183,"column":36}},"114":{"start":{"line":184,"column":6},"end":{"line":184,"column":36}},"115":{"start":{"line":187,"column":3},"end":{"line":187,"column":81}},"116":{"start":{"line":187,"column":22},"end":{"line":187,"column":81}},"117":{"start":{"line":190,"column":3},"end":{"line":190,"column":96}},"118":{"start":{"line":190,"column":34},"end":{"line":190,"column":96}},"119":{"start":{"line":193,"column":6},"end":{"line":227,"column":7}},"120":{"start":{"line":195,"column":8},"end":{"line":200,"column":9}},"121":{"start":{"line":196,"column":10},"end":{"line":196,"column":110}},"122":{"start":{"line":197,"column":5},"end":{"line":197,"column":100}},"123":{"start":{"line":197,"column":24},"end":{"line":197,"column":100}},"124":{"start":{"line":198,"column":5},"end":{"line":198,"column":122}},"125":{"start":{"line":198,"column":44},"end":{"line":198,"column":122}},"126":{"start":{"line":199,"column":5},"end":{"line":199,"column":123}},"127":{"start":{"line":199,"column":44},"end":{"line":199,"column":123}},"128":{"start":{"line":202,"column":8},"end":{"line":206,"column":9}},"129":{"start":{"line":203,"column":10},"end":{"line":203,"column":65}},"130":{"start":{"line":205,"column":10},"end":{"line":205,"column":86}},"131":{"start":{"line":208,"column":8},"end":{"line":208,"column":125}},"132":{"start":{"line":210,"column":8},"end":{"line":215,"column":9}},"133":{"start":{"line":211,"column":10},"end":{"line":211,"column":110}},"134":{"start":{"line":212,"column":5},"end":{"line":212,"column":100}},"135":{"start":{"line":212,"column":24},"end":{"line":212,"column":100}},"136":{"start":{"line":213,"column":5},"end":{"line":213,"column":122}},"137":{"start":{"line":213,"column":44},"end":{"line":213,"column":122}},"138":{"start":{"line":214,"column":5},"end":{"line":214,"column":123}},"139":{"start":{"line":214,"column":44},"end":{"line":214,"column":123}},"140":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"141":{"start":{"line":219,"column":10},"end":{"line":219,"column":41}},"142":{"start":{"line":222,"column":8},"end":{"line":226,"column":9}},"143":{"start":{"line":223,"column":10},"end":{"line":223,"column":33}},"144":{"start":{"line":225,"column":10},"end":{"line":225,"column":54}},"145":{"start":{"line":230,"column":6},"end":{"line":230,"column":33}},"146":{"start":{"line":231,"column":9},"end":{"line":417,"column":3}},"147":{"start":{"line":233,"column":3},"end":{"line":233,"column":17}},"148":{"start":{"line":235,"column":3},"end":{"line":237,"column":4}},"149":{"start":{"line":236,"column":4},"end":{"line":236,"column":7}},"150":{"start":{"line":239,"column":3},"end":{"line":239,"column":79}},"151":{"start":{"line":239,"column":26},"end":{"line":239,"column":79}},"152":{"start":{"line":241,"column":3},"end":{"line":241,"column":50}},"153":{"start":{"line":243,"column":3},"end":{"line":243,"column":17}},"154":{"start":{"line":246,"column":3},"end":{"line":246,"column":17}},"155":{"start":{"line":248,"column":3},"end":{"line":250,"column":4}},"156":{"start":{"line":249,"column":4},"end":{"line":249,"column":7}},"157":{"start":{"line":252,"column":3},"end":{"line":252,"column":79}},"158":{"start":{"line":252,"column":26},"end":{"line":252,"column":79}},"159":{"start":{"line":254,"column":3},"end":{"line":254,"column":57}},"160":{"start":{"line":255,"column":3},"end":{"line":255,"column":17}},"161":{"start":{"line":258,"column":6},"end":{"line":258,"column":57}},"162":{"start":{"line":261,"column":6},"end":{"line":273,"column":7}},"163":{"start":{"line":262,"column":8},"end":{"line":272,"column":9}},"164":{"start":{"line":264,"column":12},"end":{"line":264,"column":34}},"165":{"start":{"line":265,"column":12},"end":{"line":265,"column":18}},"166":{"start":{"line":267,"column":12},"end":{"line":267,"column":34}},"167":{"start":{"line":268,"column":12},"end":{"line":268,"column":18}},"168":{"start":{"line":270,"column":12},"end":{"line":270,"column":34}},"169":{"start":{"line":271,"column":12},"end":{"line":271,"column":18}},"170":{"start":{"line":275,"column":6},"end":{"line":275,"column":63}},"171":{"start":{"line":276,"column":11},"end":{"line":417,"column":3}},"172":{"start":{"line":278,"column":3},"end":{"line":278,"column":17}},"173":{"start":{"line":280,"column":3},"end":{"line":282,"column":4}},"174":{"start":{"line":281,"column":4},"end":{"line":281,"column":7}},"175":{"start":{"line":284,"column":3},"end":{"line":284,"column":79}},"176":{"start":{"line":284,"column":26},"end":{"line":284,"column":79}},"177":{"start":{"line":286,"column":3},"end":{"line":286,"column":50}},"178":{"start":{"line":287,"column":6},"end":{"line":287,"column":20}},"179":{"start":{"line":290,"column":3},"end":{"line":290,"column":17}},"180":{"start":{"line":292,"column":3},"end":{"line":294,"column":4}},"181":{"start":{"line":293,"column":4},"end":{"line":293,"column":7}},"182":{"start":{"line":296,"column":3},"end":{"line":296,"column":79}},"183":{"start":{"line":296,"column":26},"end":{"line":296,"column":79}},"184":{"start":{"line":298,"column":3},"end":{"line":298,"column":57}},"185":{"start":{"line":299,"column":6},"end":{"line":299,"column":20}},"186":{"start":{"line":302,"column":6},"end":{"line":302,"column":59}},"187":{"start":{"line":303,"column":9},"end":{"line":417,"column":3}},"188":{"start":{"line":304,"column":6},"end":{"line":304,"column":110}},"189":{"start":{"line":305,"column":3},"end":{"line":305,"column":147}},"190":{"start":{"line":305,"column":102},"end":{"line":305,"column":147}},"191":{"start":{"line":306,"column":6},"end":{"line":306,"column":88}},"192":{"start":{"line":307,"column":6},"end":{"line":307,"column":33}},"193":{"start":{"line":308,"column":9},"end":{"line":417,"column":3}},"194":{"start":{"line":309,"column":6},"end":{"line":309,"column":107}},"195":{"start":{"line":310,"column":6},"end":{"line":310,"column":108}},"196":{"start":{"line":311,"column":6},"end":{"line":311,"column":54}},"197":{"start":{"line":312,"column":9},"end":{"line":417,"column":3}},"198":{"start":{"line":313,"column":6},"end":{"line":313,"column":34}},"199":{"start":{"line":314,"column":9},"end":{"line":417,"column":3}},"200":{"start":{"line":315,"column":6},"end":{"line":315,"column":34}},"201":{"start":{"line":316,"column":9},"end":{"line":417,"column":3}},"202":{"start":{"line":317,"column":6},"end":{"line":317,"column":110}},"203":{"start":{"line":318,"column":3},"end":{"line":318,"column":147}},"204":{"start":{"line":318,"column":102},"end":{"line":318,"column":147}},"205":{"start":{"line":319,"column":6},"end":{"line":319,"column":82}},"206":{"start":{"line":322,"column":6},"end":{"line":334,"column":7}},"207":{"start":{"line":323,"column":8},"end":{"line":323,"column":25}},"208":{"start":{"line":325,"column":8},"end":{"line":331,"column":9}},"209":{"start":{"line":326,"column":10},"end":{"line":326,"column":82}},"210":{"start":{"line":328,"column":10},"end":{"line":328,"column":90}},"211":{"start":{"line":330,"column":10},"end":{"line":330,"column":53}},"212":{"start":{"line":333,"column":8},"end":{"line":333,"column":49}},"213":{"start":{"line":337,"column":6},"end":{"line":337,"column":33}},"214":{"start":{"line":338,"column":9},"end":{"line":417,"column":3}},"215":{"start":{"line":339,"column":6},"end":{"line":339,"column":109}},"216":{"start":{"line":342,"column":3},"end":{"line":344,"column":4}},"217":{"start":{"line":343,"column":4},"end":{"line":343,"column":79}},"218":{"start":{"line":347,"column":6},"end":{"line":347,"column":110}},"219":{"start":{"line":349,"column":3},"end":{"line":349,"column":147}},"220":{"start":{"line":349,"column":102},"end":{"line":349,"column":147}},"221":{"start":{"line":352,"column":6},"end":{"line":352,"column":82}},"222":{"start":{"line":354,"column":6},"end":{"line":354,"column":33}},"223":{"start":{"line":356,"column":3},"end":{"line":356,"column":22}},"224":{"start":{"line":358,"column":6},"end":{"line":358,"column":114}},"225":{"start":{"line":360,"column":6},"end":{"line":360,"column":74}},"226":{"start":{"line":362,"column":6},"end":{"line":362,"column":33}},"227":{"start":{"line":365,"column":3},"end":{"line":367,"column":4}},"228":{"start":{"line":366,"column":4},"end":{"line":366,"column":77}},"229":{"start":{"line":370,"column":3},"end":{"line":372,"column":4}},"230":{"start":{"line":371,"column":4},"end":{"line":371,"column":80}},"231":{"start":{"line":375,"column":6},"end":{"line":390,"column":7}},"232":{"start":{"line":377,"column":8},"end":{"line":377,"column":25}},"233":{"start":{"line":379,"column":8},"end":{"line":385,"column":9}},"234":{"start":{"line":380,"column":10},"end":{"line":380,"column":82}},"235":{"start":{"line":382,"column":10},"end":{"line":382,"column":90}},"236":{"start":{"line":384,"column":10},"end":{"line":384,"column":53}},"237":{"start":{"line":387,"column":8},"end":{"line":387,"column":41}},"238":{"start":{"line":389,"column":8},"end":{"line":389,"column":62}},"239":{"start":{"line":391,"column":9},"end":{"line":417,"column":3}},"240":{"start":{"line":393,"column":6},"end":{"line":393,"column":110}},"241":{"start":{"line":395,"column":3},"end":{"line":395,"column":147}},"242":{"start":{"line":395,"column":102},"end":{"line":395,"column":147}},"243":{"start":{"line":397,"column":6},"end":{"line":397,"column":77}},"244":{"start":{"line":399,"column":6},"end":{"line":399,"column":33}},"245":{"start":{"line":402,"column":3},"end":{"line":402,"column":34}},"246":{"start":{"line":403,"column":3},"end":{"line":403,"column":48}},"247":{"start":{"line":404,"column":6},"end":{"line":404,"column":40}},"248":{"start":{"line":407,"column":3},"end":{"line":407,"column":22}},"249":{"start":{"line":410,"column":3},"end":{"line":410,"column":36}},"250":{"start":{"line":411,"column":3},"end":{"line":411,"column":26}},"251":{"start":{"line":412,"column":3},"end":{"line":412,"column":36}},"252":{"start":{"line":414,"column":3},"end":{"line":414,"column":49}},"253":{"start":{"line":416,"column":3},"end":{"line":416,"column":151}},"254":{"start":{"line":421,"column":1},"end":{"line":424,"column":2}},"255":{"start":{"line":422,"column":2},"end":{"line":422,"column":52}},"256":{"start":{"line":422,"column":14},"end":{"line":422,"column":52}},"257":{"start":{"line":423,"column":2},"end":{"line":423,"column":41}},"258":{"start":{"line":427,"column":2},"end":{"line":427,"column":93}},"259":{"start":{"line":427,"column":28},"end":{"line":427,"column":93}},"260":{"start":{"line":428,"column":2},"end":{"line":428,"column":16}},"261":{"start":{"line":437,"column":0},"end":{"line":448,"column":1}},"262":{"start":{"line":439,"column":2},"end":{"line":439,"column":19}},"263":{"start":{"line":442,"column":2},"end":{"line":445,"column":3}},"264":{"start":{"line":443,"column":4},"end":{"line":443,"column":38}},"265":{"start":{"line":444,"column":4},"end":{"line":444,"column":32}},"266":{"start":{"line":447,"column":2},"end":{"line":447,"column":42}},"267":{"start":{"line":456,"column":0},"end":{"line":462,"column":1}},"268":{"start":{"line":458,"column":2},"end":{"line":458,"column":19}},"269":{"start":{"line":460,"column":2},"end":{"line":460,"column":36}},"270":{"start":{"line":461,"column":2},"end":{"line":461,"column":15}},"271":{"start":{"line":464,"column":0},"end":{"line":464,"column":14}},"272":{"start":{"line":472,"column":0},"end":{"line":472,"column":44}},"273":{"start":{"line":479,"column":0},"end":{"line":479,"column":26}},"274":{"start":{"line":485,"column":0},"end":{"line":485,"column":26}},"275":{"start":{"line":491,"column":0},"end":{"line":491,"column":26}},"276":{"start":{"line":497,"column":0},"end":{"line":497,"column":25}},"277":{"start":{"line":503,"column":0},"end":{"line":503,"column":26}},"278":{"start":{"line":509,"column":0},"end":{"line":509,"column":29}},"279":{"start":{"line":515,"column":0},"end":{"line":515,"column":23}},"280":{"start":{"line":521,"column":0},"end":{"line":521,"column":27}},"281":{"start":{"line":527,"column":0},"end":{"line":527,"column":24}},"282":{"start":{"line":533,"column":0},"end":{"line":533,"column":25}},"283":{"start":{"line":539,"column":0},"end":{"line":539,"column":27}},"284":{"start":{"line":545,"column":0},"end":{"line":545,"column":30}},"285":{"start":{"line":551,"column":0},"end":{"line":551,"column":25}},"286":{"start":{"line":557,"column":0},"end":{"line":557,"column":27}},"287":{"start":{"line":563,"column":0},"end":{"line":563,"column":33}},"288":{"start":{"line":569,"column":0},"end":{"line":569,"column":24}},"289":{"start":{"line":575,"column":0},"end":{"line":575,"column":30}},"290":{"start":{"line":581,"column":0},"end":{"line":581,"column":25}},"291":{"start":{"line":587,"column":0},"end":{"line":587,"column":31}},"292":{"start":{"line":593,"column":0},"end":{"line":593,"column":30}},"293":{"start":{"line":599,"column":0},"end":{"line":599,"column":30}},"294":{"start":{"line":606,"column":0},"end":{"line":606,"column":37}},"295":{"start":{"line":612,"column":0},"end":{"line":612,"column":38}},"296":{"start":{"line":618,"column":0},"end":{"line":618,"column":40}},"297":{"start":{"line":624,"column":0},"end":{"line":624,"column":34}},"298":{"start":{"line":630,"column":0},"end":{"line":630,"column":33}},"299":{"start":{"line":636,"column":0},"end":{"line":636,"column":44}},"300":{"start":{"line":639,"column":0},"end":{"line":639,"column":33}},"301":{"start":{"line":640,"column":0},"end":{"line":640,"column":34}},"302":{"start":{"line":642,"column":0},"end":{"line":642,"column":42}},"303":{"start":{"line":643,"column":0},"end":{"line":643,"column":39}},"304":{"start":{"line":646,"column":0},"end":{"line":646,"column":35}},"305":{"start":{"line":647,"column":0},"end":{"line":647,"column":36}},"306":{"start":{"line":650,"column":0},"end":{"line":650,"column":56}},"307":{"start":{"line":651,"column":0},"end":{"line":651,"column":57}},"308":{"start":{"line":653,"column":0},"end":{"line":653,"column":28}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":29},"end":{"line":20,"column":31}},{"start":{"line":20,"column":34},"end":{"line":20,"column":41}}]},"2":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":53}},{"start":{"line":21,"column":56},"end":{"line":21,"column":57}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":20}},{"start":{"line":21,"column":24},"end":{"line":21,"column":37}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":5},"end":{"line":26,"column":13}},{"start":{"line":26,"column":17},"end":{"line":26,"column":37}},{"start":{"line":26,"column":41},"end":{"line":26,"column":71}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},{"start":{"line":31,"column":1},"end":{"line":31,"column":1}}]},"7":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":56},"end":{"line":40,"column":61}},{"start":{"line":40,"column":64},"end":{"line":40,"column":88}}]},"8":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":59},"end":{"line":41,"column":64}},{"start":{"line":41,"column":67},"end":{"line":41,"column":92}}]},"9":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":69},"end":{"line":42,"column":74}},{"start":{"line":42,"column":77},"end":{"line":42,"column":107}}]},"10":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":52},"end":{"line":43,"column":56}},{"start":{"line":43,"column":59},"end":{"line":43,"column":81}}]},"11":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":36},"end":{"line":46,"column":41}},{"start":{"line":46,"column":44},"end":{"line":46,"column":58}}]},"12":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":63},"end":{"line":49,"column":84}},{"start":{"line":49,"column":87},"end":{"line":49,"column":92}}]},"13":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":58},"end":{"line":52,"column":63}},{"start":{"line":52,"column":66},"end":{"line":52,"column":91}}]},"14":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":54},"end":{"line":53,"column":58}},{"start":{"line":53,"column":61},"end":{"line":53,"column":84}}]},"15":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":56},"end":{"line":54,"column":60}},{"start":{"line":54,"column":63},"end":{"line":54,"column":87}}]},"16":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"17":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"18":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":5},"end":{"line":66,"column":13}},{"start":{"line":66,"column":17},"end":{"line":66,"column":37}}]},"19":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":25},"end":{"line":69,"column":27}},{"start":{"line":69,"column":30},"end":{"line":69,"column":32}}]},"20":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"21":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":26}},{"start":{"line":85,"column":30},"end":{"line":85,"column":47}}]},"22":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"23":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":23},"end":{"line":91,"column":35}},{"start":{"line":91,"column":38},"end":{"line":91,"column":71}}]},"24":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"25":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":3},"end":{"line":97,"column":3}},{"start":{"line":97,"column":3},"end":{"line":97,"column":3}}]},"26":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":21}},{"start":{"line":97,"column":25},"end":{"line":97,"column":61}},{"start":{"line":97,"column":65},"end":{"line":97,"column":100}}]},"27":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":100,"column":9}},{"start":{"line":100,"column":9},"end":{"line":100,"column":9}}]},"28":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":9},"end":{"line":105,"column":9}},{"start":{"line":105,"column":9},"end":{"line":105,"column":9}}]},"29":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":45}},{"start":{"line":105,"column":49},"end":{"line":105,"column":71}}]},"30":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":9},"end":{"line":107,"column":9}},{"start":{"line":107,"column":9},"end":{"line":107,"column":9}}]},"31":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":9},"end":{"line":109,"column":9}},{"start":{"line":109,"column":9},"end":{"line":109,"column":9}}]},"32":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":48}},{"start":{"line":109,"column":52},"end":{"line":109,"column":74}}]},"33":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":9},"end":{"line":112,"column":9}},{"start":{"line":112,"column":9},"end":{"line":112,"column":9}}]},"34":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":9},"end":{"line":115,"column":9}},{"start":{"line":115,"column":9},"end":{"line":115,"column":9}}]},"35":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":9}},{"start":{"line":119,"column":9},"end":{"line":119,"column":9}}]},"36":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":3},"end":{"line":120,"column":3}},{"start":{"line":120,"column":3},"end":{"line":120,"column":3}}]},"37":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":24}},{"start":{"line":120,"column":28},"end":{"line":120,"column":46}}]},"38":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":9},"end":{"line":122,"column":9}},{"start":{"line":122,"column":9},"end":{"line":122,"column":9}}]},"39":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":3},"end":{"line":125,"column":3}},{"start":{"line":125,"column":3},"end":{"line":125,"column":3}}]},"40":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":21}},{"start":{"line":125,"column":25},"end":{"line":125,"column":61}}]},"41":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":3},"end":{"line":128,"column":3}},{"start":{"line":128,"column":3},"end":{"line":128,"column":3}}]},"42":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":9},"end":{"line":135,"column":9}},{"start":{"line":135,"column":9},"end":{"line":135,"column":9}}]},"43":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":3},"end":{"line":144,"column":3}},{"start":{"line":144,"column":3},"end":{"line":144,"column":3}}]},"44":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":17}},{"start":{"line":144,"column":21},"end":{"line":144,"column":38}}]},"45":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":3},"end":{"line":153,"column":3}},{"start":{"line":153,"column":3},"end":{"line":153,"column":3}}]},"46":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":3},"end":{"line":154,"column":3}},{"start":{"line":154,"column":3},"end":{"line":154,"column":3}}]},"47":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":9},"end":{"line":155,"column":9}},{"start":{"line":155,"column":9},"end":{"line":155,"column":9}}]},"48":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":9}},{"start":{"line":157,"column":9},"end":{"line":157,"column":9}}]},"49":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":9},"end":{"line":159,"column":9}},{"start":{"line":159,"column":9},"end":{"line":159,"column":9}}]},"50":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":6}},{"start":{"line":165,"column":6},"end":{"line":165,"column":6}}]},"51":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":21}},{"start":{"line":165,"column":25},"end":{"line":165,"column":46}}]},"52":{"line":166,"type":"cond-expr","locations":[{"start":{"line":166,"column":107},"end":{"line":166,"column":122}},{"start":{"line":166,"column":125},"end":{"line":166,"column":129}}]},"53":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":23},"end":{"line":166,"column":60}},{"start":{"line":166,"column":64},"end":{"line":166,"column":104}}]},"54":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":9},"end":{"line":170,"column":9}},{"start":{"line":170,"column":9},"end":{"line":170,"column":9}}]},"55":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":40},"end":{"line":180,"column":61}},{"start":{"line":180,"column":64},"end":{"line":180,"column":74}}]},"56":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":9},"end":{"line":181,"column":9}},{"start":{"line":181,"column":9},"end":{"line":181,"column":9}}]},"57":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":3},"end":{"line":187,"column":3}},{"start":{"line":187,"column":3},"end":{"line":187,"column":3}}]},"58":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":3},"end":{"line":190,"column":3}},{"start":{"line":190,"column":3},"end":{"line":190,"column":3}}]},"59":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"60":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"61":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":5},"end":{"line":197,"column":5}},{"start":{"line":197,"column":5},"end":{"line":197,"column":5}}]},"62":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":5},"end":{"line":198,"column":5}},{"start":{"line":198,"column":5},"end":{"line":198,"column":5}}]},"63":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":5},"end":{"line":199,"column":5}},{"start":{"line":199,"column":5},"end":{"line":199,"column":5}}]},"64":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"65":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":11},"end":{"line":202,"column":25}},{"start":{"line":202,"column":29},"end":{"line":202,"column":42}}]},"66":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":57},"end":{"line":208,"column":100}},{"start":{"line":208,"column":103},"end":{"line":208,"column":124}}]},"67":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"68":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":5},"end":{"line":212,"column":5}},{"start":{"line":212,"column":5},"end":{"line":212,"column":5}}]},"69":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":5},"end":{"line":213,"column":5}},{"start":{"line":213,"column":5},"end":{"line":213,"column":5}}]},"70":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":5},"end":{"line":214,"column":5}},{"start":{"line":214,"column":5},"end":{"line":214,"column":5}}]},"71":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":8}},{"start":{"line":222,"column":8},"end":{"line":222,"column":8}}]},"72":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":11},"end":{"line":222,"column":25}},{"start":{"line":222,"column":29},"end":{"line":222,"column":42}}]},"73":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":9},"end":{"line":231,"column":9}},{"start":{"line":231,"column":9},"end":{"line":231,"column":9}}]},"74":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":48}},{"start":{"line":231,"column":52},"end":{"line":231,"column":71}}]},"75":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":9},"end":{"line":235,"column":27}},{"start":{"line":235,"column":31},"end":{"line":235,"column":48}}]},"76":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":3},"end":{"line":239,"column":3}},{"start":{"line":239,"column":3},"end":{"line":239,"column":3}}]},"77":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":9},"end":{"line":248,"column":27}},{"start":{"line":248,"column":31},"end":{"line":248,"column":48}}]},"78":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":3},"end":{"line":252,"column":3}},{"start":{"line":252,"column":3},"end":{"line":252,"column":3}}]},"79":{"line":262,"type":"switch","locations":[{"start":{"line":263,"column":10},"end":{"line":265,"column":18}},{"start":{"line":266,"column":10},"end":{"line":268,"column":18}},{"start":{"line":269,"column":10},"end":{"line":271,"column":18}}]},"80":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":11},"end":{"line":276,"column":11}},{"start":{"line":276,"column":11},"end":{"line":276,"column":11}}]},"81":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":14},"end":{"line":276,"column":50}},{"start":{"line":276,"column":54},"end":{"line":276,"column":72}}]},"82":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":9},"end":{"line":280,"column":27}},{"start":{"line":280,"column":31},"end":{"line":280,"column":48}}]},"83":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":3},"end":{"line":284,"column":3}},{"start":{"line":284,"column":3},"end":{"line":284,"column":3}}]},"84":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":9},"end":{"line":292,"column":27}},{"start":{"line":292,"column":31},"end":{"line":292,"column":48}}]},"85":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":3},"end":{"line":296,"column":3}},{"start":{"line":296,"column":3},"end":{"line":296,"column":3}}]},"86":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":9},"end":{"line":303,"column":9}},{"start":{"line":303,"column":9},"end":{"line":303,"column":9}}]},"87":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":3},"end":{"line":305,"column":3}},{"start":{"line":305,"column":3},"end":{"line":305,"column":3}}]},"88":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":6},"end":{"line":305,"column":21}},{"start":{"line":305,"column":25},"end":{"line":305,"column":61}},{"start":{"line":305,"column":65},"end":{"line":305,"column":100}}]},"89":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":9},"end":{"line":308,"column":9}},{"start":{"line":308,"column":9},"end":{"line":308,"column":9}}]},"90":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":9},"end":{"line":312,"column":9}},{"start":{"line":312,"column":9},"end":{"line":312,"column":9}}]},"91":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":9},"end":{"line":314,"column":9}},{"start":{"line":314,"column":9},"end":{"line":314,"column":9}}]},"92":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":9},"end":{"line":316,"column":9}},{"start":{"line":316,"column":9},"end":{"line":316,"column":9}}]},"93":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":3},"end":{"line":318,"column":3}},{"start":{"line":318,"column":3},"end":{"line":318,"column":3}}]},"94":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":21}},{"start":{"line":318,"column":25},"end":{"line":318,"column":61}},{"start":{"line":318,"column":65},"end":{"line":318,"column":100}}]},"95":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":6}},{"start":{"line":322,"column":6},"end":{"line":322,"column":6}}]},"96":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":8},"end":{"line":325,"column":8}},{"start":{"line":325,"column":8},"end":{"line":325,"column":8}}]},"97":{"line":326,"type":"cond-expr","locations":[{"start":{"line":326,"column":43},"end":{"line":326,"column":64}},{"start":{"line":326,"column":67},"end":{"line":326,"column":81}}]},"98":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":9},"end":{"line":338,"column":9}},{"start":{"line":338,"column":9},"end":{"line":338,"column":9}}]},"99":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":3},"end":{"line":342,"column":3}},{"start":{"line":342,"column":3},"end":{"line":342,"column":3}}]},"100":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":3},"end":{"line":349,"column":3}},{"start":{"line":349,"column":3},"end":{"line":349,"column":3}}]},"101":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":6},"end":{"line":349,"column":21}},{"start":{"line":349,"column":25},"end":{"line":349,"column":61}},{"start":{"line":349,"column":65},"end":{"line":349,"column":100}}]},"102":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":3},"end":{"line":365,"column":3}},{"start":{"line":365,"column":3},"end":{"line":365,"column":3}}]},"103":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":3},"end":{"line":370,"column":3}},{"start":{"line":370,"column":3},"end":{"line":370,"column":3}}]},"104":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":6},"end":{"line":375,"column":6}},{"start":{"line":375,"column":6},"end":{"line":375,"column":6}}]},"105":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":8}},{"start":{"line":379,"column":8},"end":{"line":379,"column":8}}]},"106":{"line":380,"type":"cond-expr","locations":[{"start":{"line":380,"column":43},"end":{"line":380,"column":64}},{"start":{"line":380,"column":67},"end":{"line":380,"column":81}}]},"107":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":9},"end":{"line":391,"column":9}},{"start":{"line":391,"column":9},"end":{"line":391,"column":9}}]},"108":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":3},"end":{"line":395,"column":3}},{"start":{"line":395,"column":3},"end":{"line":395,"column":3}}]},"109":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":21}},{"start":{"line":395,"column":25},"end":{"line":395,"column":61}},{"start":{"line":395,"column":65},"end":{"line":395,"column":100}}]},"110":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":1},"end":{"line":421,"column":1}},{"start":{"line":421,"column":1},"end":{"line":421,"column":1}}]},"111":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":2},"end":{"line":422,"column":2}},{"start":{"line":422,"column":2},"end":{"line":422,"column":2}}]},"112":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":2},"end":{"line":427,"column":2}},{"start":{"line":427,"column":2},"end":{"line":427,"column":2}}]},"113":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]}},"code":["\"use strict\"","","var readIEEE754 = require('../float_parser').readIEEE754,","\tf = require('util').format,","\tLong = require('../long').Long,","  Double = require('../double').Double,","  Timestamp = require('../timestamp').Timestamp,","  ObjectID = require('../objectid').ObjectID,","  Symbol = require('../symbol').Symbol,","  Code = require('../code').Code,","  MinKey = require('../min_key').MinKey,","  MaxKey = require('../max_key').MaxKey,","\tDecimal128 = require('../decimal128'),","\tInt32 = require('../int_32'),","  DBRef = require('../db_ref').DBRef,","  BSONRegExp = require('../regexp').BSONRegExp,","  Binary = require('../binary').Binary;","","var deserialize = function(buffer, options, isArray) {","\toptions = options == null ? {} : options;","\tvar index = options && options.index ? options.index : 0;","\t// Read the document size","  var size = buffer[index] | buffer[index+1] << 8 | buffer[index+2] << 16 | buffer[index+3] << 24;","","\t// Ensure buffer is valid size","  if(size < 5 || buffer.length < size || (size + index) > buffer.length) {","\t\tthrow new Error(\"corrupt bson message\");","\t}","","\t// Illegal end value","\tif(buffer[index + size - 1] != 0) {","\t\tthrow new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");","\t}","","\t// Start deserializtion","\treturn deserializeObject(buffer, index, options, isArray);","}","","var deserializeObject = function(buffer, index, options, isArray) {","\tvar evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];","  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];","  var cacheFunctionsCrc32 = options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];","\tvar fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];","","\t// Return raw bson buffer instead of parsing it","\tvar raw = options['raw'] == null ? false : options['raw'];","","\t// Return BSONRegExp objects instead of native regular expressions","  var bsonRegExp = typeof options['bsonRegExp'] == 'boolean' ? options['bsonRegExp'] : false;","","\t// Controls the promotion of values vs wrapper classes","\tvar promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];","\tvar promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];","\tvar promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];","","\t// Set the start index","\tvar startIndex = index;","","  // Validate that we have at least 4 bytes of buffer","  if(buffer.length < 5) throw new Error(\"corrupt bson message < 5 bytes long\");","","\t// Read the document size","  var size = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","","\t// Ensure buffer is valid size","  if(size < 5 || size > buffer.length) throw new Error(\"corrupt bson message\");","","  // Create holding object","  var object = isArray ? [] : {};","\t// Used for arrays to skip having to perform utf8 decoding","\tvar arrayIndex = 0;","","  // While we have more left data left keep parsing","  while(true) {","    // Read the type","    var elementType = buffer[index++];","    // If we get a zero it's the last byte, exit","    if(elementType == 0) {","\t\t\tbreak;","\t\t}","","\t\t// Get the start search index","\t\tvar i = index;","\t\t// Locate the end of the c string","\t\twhile(buffer[i] !== 0x00 && i < buffer.length) {","\t\t\ti++","\t\t}","","\t\t// If are at the end of the buffer there is a problem with the document","\t\tif(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\tvar name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);","","\t\tindex = i + 1;","","\t\tif(elementType == BSON.BSON_DATA_STRING) {","      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\tif(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");","      object[name] = buffer.toString('utf8', index, index + stringSize - 1);","      index = index + stringSize;","\t\t} else if(elementType == BSON.BSON_DATA_OID) {","\t\t\tvar oid = new Buffer(12);","\t\t\tbuffer.copy(oid, 0, index, index + 12);","      object[name] = new ObjectID(oid);","      index = index + 12;","\t\t} else if(elementType == BSON.BSON_DATA_INT && promoteValues == false) {","\t\t\tobject[name] = new Int32(buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24);","\t\t} else if(elementType == BSON.BSON_DATA_INT) {","      object[name] = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t} else if(elementType == BSON.BSON_DATA_NUMBER && promoteValues == false) {","\t\t\tobject[name] = new Double(buffer.readDoubleLE(index));","\t\t\tindex = index + 8;","\t\t} else if(elementType == BSON.BSON_DATA_NUMBER) {","\t\t\tobject[name] = buffer.readDoubleLE(index);","      index = index + 8;","\t\t} else if(elementType == BSON.BSON_DATA_DATE) {","      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      object[name] = new Date(new Long(lowBits, highBits).toNumber());","\t\t} else if(elementType == BSON.BSON_DATA_BOOLEAN) {","\t\t\tif(buffer[index] != 0 && buffer[index] != 1) throw new Error('illegal boolean type value');","      object[name] = buffer[index++] == 1;","\t\t} else if(elementType == BSON.BSON_DATA_OBJECT) {","\t\t\tvar _index = index;","      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;","\t\t\tif(objectSize <= 0 || objectSize > (buffer.length - index)) throw new Error(\"bad embedded document length in bson\");","","\t\t\t// We have a raw value","\t\t\tif(raw) {","\t      object[name] = buffer.slice(index, index + objectSize);","\t\t\t} else {","\t      object[name] = deserializeObject(buffer, _index, options, false);","\t\t\t}","","      index = index + objectSize;","\t\t} else if(elementType == BSON.BSON_DATA_ARRAY) {","\t\t\tvar _index = index;","      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;","\t\t\tvar arrayOptions = options;","","\t\t\t// Stop index","\t\t\tvar stopIndex = index + objectSize;","","\t\t\t// All elements of array to be returned as raw bson","\t\t\tif(fieldsAsRaw && fieldsAsRaw[name]) {","\t\t\t\tarrayOptions = {};","\t\t\t\tfor(var n in options) arrayOptions[n] = options[n];","\t\t\t\tarrayOptions['raw'] = true;","\t\t\t}","","      object[name] = deserializeObject(buffer, _index, arrayOptions, true);","      index = index + objectSize;","","\t\t\tif(buffer[index - 1] != 0) throw new Error('invalid array terminator byte');","\t\t\tif(index != stopIndex) throw new Error('corrupted array bson');","\t\t} else if(elementType == BSON.BSON_DATA_UNDEFINED) {","      object[name] = undefined;","\t\t} else if(elementType == BSON.BSON_DATA_NULL) {","\t\t\tobject[name] = null;","\t\t} else if(elementType == BSON.BSON_DATA_LONG) {","      // Unpack the low and high bits","      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      var long = new Long(lowBits, highBits);","      // Promote the long if possible","      if(promoteLongs && promoteValues == true) {","        object[name] = long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG) ? long.toNumber() : long;","      } else {","        object[name] = long;","      }","\t\t} else if(elementType == BSON.BSON_DATA_DECIMAL128) {","\t\t\t// Buffer to contain the decimal bytes","\t\t\tvar bytes = new Buffer(16);","\t\t\t// Copy the next 16 bytes into the bytes buffer","\t\t\tbuffer.copy(bytes, 0, index, index + 16);","\t\t\t// Update index","\t\t\tindex = index + 16;","\t\t\t// Assign the new Decimal128 value","\t\t\tvar decimal128 = new Decimal128(bytes);","\t\t\t// If we have an alternative mapper use that","\t\t\tobject[name] = decimal128.toObject ? decimal128.toObject() : decimal128;","\t\t} else if(elementType == BSON.BSON_DATA_BINARY) {","      var binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\tvar totalBinarySize = binarySize;","      var subType = buffer[index++];","","\t\t\t// Did we have a negative binary size, throw","\t\t\tif(binarySize < 0) throw new Error('Negative binary type element size found');","","\t\t\t// Is the length longer than the document","\t\t\tif(binarySize > buffer.length) throw new Error('Binary type size larger than document size');","","\t\t\t// Decode as raw Buffer object if options specifies it","      if(buffer['slice'] != null) {","        // If we have subtype 2 skip the 4 bytes for the size","        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\t\t\tif(binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');","\t\t\t\t\tif(binarySize > (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to long binary size');","\t\t\t\t\tif(binarySize < (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to short binary size');","        }","","        if(promoteBuffers && promoteValues) {","          object[name] = buffer.slice(index, index + binarySize);","        } else {","          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);","        }","      } else {","        var _buffer = typeof Uint8Array != 'undefined' ? new Uint8Array(new ArrayBuffer(binarySize)) : new Array(binarySize);","        // If we have subtype 2 skip the 4 bytes for the size","        if(subType == Binary.SUBTYPE_BYTE_ARRAY) {","          binarySize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\t\t\tif(binarySize < 0) throw new Error('Negative binary type element size found for subtype 0x02');","\t\t\t\t\tif(binarySize > (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to long binary size');","\t\t\t\t\tif(binarySize < (totalBinarySize - 4)) throw new Error('Binary type with subtype 0x02 contains to short binary size');","        }","","        // Copy the data","        for(var i = 0; i < binarySize; i++) {","          _buffer[i] = buffer[index + i];","        }","","        if(promoteBuffers && promoteValues) {","          object[name] = _buffer;","        } else {","          object[name] = new Binary(_buffer, subType);","        }","      }","","      // Update the index","      index = index + binarySize;","\t\t} else if(elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == false) {","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 && i < buffer.length) {","\t\t\t\ti++","\t\t\t}","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar source = buffer.toString('utf8', index, i);","      // Create the regexp","\t\t\tindex = i + 1;","","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 && i < buffer.length) {","\t\t\t\ti++","\t\t\t}","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);","\t\t\tindex = i + 1;","","      // For each option add the corresponding one for javascript","      var optionsArray = new Array(regExpOptions.length);","","      // Parse options","      for(var i = 0; i < regExpOptions.length; i++) {","        switch(regExpOptions[i]) {","          case 'm':","            optionsArray[i] = 'm';","            break;","          case 's':","            optionsArray[i] = 'g';","            break;","          case 'i':","            optionsArray[i] = 'i';","            break;","        }","      }","","      object[name] = new RegExp(source, optionsArray.join(''));","    } else if(elementType == BSON.BSON_DATA_REGEXP && bsonRegExp == true) {","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 && i < buffer.length) {","\t\t\t\ti++","\t\t\t}","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar source = buffer.toString('utf8', index, i);","      index = i + 1;","","\t\t\t// Get the start search index","\t\t\tvar i = index;","\t\t\t// Locate the end of the c string","\t\t\twhile(buffer[i] !== 0x00 && i < buffer.length) {","\t\t\t\ti++","\t\t\t}","\t\t\t// If are at the end of the buffer there is a problem with the document","\t\t\tif(i >= buffer.length) throw new Error(\"Bad BSON Document: illegal CString\")","\t\t\t// Return the C string","\t\t\tvar regExpOptions = buffer.toString('utf8', index, i);","      index = i + 1;","","      // Set the object","      object[name] = new BSONRegExp(source, regExpOptions);","\t\t} else if(elementType == BSON.BSON_DATA_SYMBOL) {","      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\tif(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");","      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));","      index = index + stringSize;","\t\t} else if(elementType == BSON.BSON_DATA_TIMESTAMP) {","      var lowBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      var highBits = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","      object[name] = new Timestamp(lowBits, highBits);","\t\t} else if(elementType == BSON.BSON_DATA_MIN_KEY) {","      object[name] = new MinKey();","\t\t} else if(elementType == BSON.BSON_DATA_MAX_KEY) {","      object[name] = new MaxKey();","\t\t} else if(elementType == BSON.BSON_DATA_CODE) {","      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\tif(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");","      var functionString = buffer.toString('utf8', index, index + stringSize - 1);","","      // If we are evaluating the functions","      if(evalFunctions) {","        var value = null;","        // If we have cache enabled let's look for the md5 of the function in the cache","        if(cacheFunctions) {","          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","          // Got to do this to avoid V8 deoptimizing the call due to finding eval","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","        } else {","          object[name] = isolateEval(functionString);","        }","      } else {","        object[name]  = new Code(functionString);","      }","","      // Update parse index position","      index = index + stringSize;","\t\t} else if(elementType == BSON.BSON_DATA_CODE_W_SCOPE) {","      var totalSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","","\t\t\t// Element cannot be shorter than totalSize + stringSize + documentSize + terminator","\t\t\tif(totalSize < (4 + 4 + 4 + 1)) {","\t\t\t\tthrow new Error(\"code_w_scope total size shorter minimum expected length\");","\t\t\t}","","\t\t\t// Get the code string size","      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\t// Check if we have a valid string","\t\t\tif(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");","","      // Javascript function","      var functionString = buffer.toString('utf8', index, index + stringSize - 1);","      // Update parse index position","      index = index + stringSize;","      // Parse the element","\t\t\tvar _index = index;","      // Decode the size of the object document","      var objectSize = buffer[index] | buffer[index + 1] << 8 | buffer[index + 2] << 16 | buffer[index + 3] << 24;","      // Decode the scope object","      var scopeObject = deserializeObject(buffer, _index, options, false);","      // Adjust the index","      index = index + objectSize;","","\t\t\t// Check if field length is to short","\t\t\tif(totalSize < (4 + 4 + objectSize + stringSize)) {","\t\t\t\tthrow new Error('code_w_scope total size is to short, truncating scope');","\t\t\t}","","\t\t\t// Check if totalSize field is to long","\t\t\tif(totalSize > (4 + 4 + objectSize + stringSize)) {","\t\t\t\tthrow new Error('code_w_scope total size is to long, clips outer document');","\t\t\t}","","      // If we are evaluating the functions","      if(evalFunctions) {","        // Contains the value we are going to set","        var value = null;","        // If we have cache enabled let's look for the md5 of the function in the cache","        if(cacheFunctions) {","          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;","          // Got to do this to avoid V8 deoptimizing the call due to finding eval","          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);","        } else {","          object[name] = isolateEval(functionString);","        }","","        object[name].scope = scopeObject;","      } else {","        object[name]  = new Code(functionString, scopeObject);","      }","\t\t} else if(elementType == BSON.BSON_DATA_DBPOINTER) {","\t\t\t// Get the code string size","      var stringSize = buffer[index++] | buffer[index++] << 8 | buffer[index++] << 16 | buffer[index++] << 24;","\t\t\t// Check if we have a valid string","\t\t\tif(stringSize <= 0 || stringSize > (buffer.length - index) || buffer[index + stringSize - 1] != 0) throw new Error(\"bad string length in bson\");","\t\t\t// Namespace","      var namespace = buffer.toString('utf8', index, index + stringSize - 1);","\t\t\t// Update parse index position","      index = index + stringSize;","","\t\t\t// Read the oid","\t\t\tvar oidBuffer = new Buffer(12);","\t\t\tbuffer.copy(oidBuffer, 0, index, index + 12);","      var oid = new ObjectID(oidBuffer);","","\t\t\t// Update the index","\t\t\tindex = index + 12;","","\t\t\t// Split the namespace","\t\t\tvar parts = namespace.split('.');","\t\t\tvar db = parts.shift();","\t\t\tvar collection = parts.join('.');","\t\t\t// Upgrade to DBRef type","\t\t\tobject[name] = new DBRef(collection, oid, db);","    } else {","\t\t\tthrow new Error(\"Detected unknown BSON type \" + elementType.toString(16) + \" for fieldname \\\"\" + name + \"\\\", are you using the latest BSON parser\");","\t\t}","  }","","\t// Check if the deserialization was against a valid array/object","\tif(size != (index - startIndex)) {","\t\tif(isArray) throw new Error('corrupt array bson');","\t\tthrow new Error('corrupt object bson');","\t}","","  // Check if we have a db ref object","  if(object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);","  return object;","}","","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEvalWithHash = function(functionCache, hash, functionString, object) {","  // Contains the value we are going to set","  var value = null;","","  // Check for cache hit, eval if missing and return cached function","  if(functionCache[hash] == null) {","    eval(\"value = \" + functionString);","    functionCache[hash] = value;","  }","  // Set the object","  return functionCache[hash].bind(object);","}","","/**"," * Ensure eval is isolated."," *"," * @ignore"," * @api private"," */","var isolateEval = function(functionString) {","  // Contains the value we are going to set","  var value = null;","  // Eval the function","  eval(\"value = \" + functionString);","  return value;","}","","var BSON = {};","","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_UNDEFINED"," **/","BSON.BSON_DATA_UNDEFINED = 6;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_DBPOINTER"," **/","BSON.BSON_DATA_DBPOINTER = 12;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_DECIMAL128"," **/","BSON.BSON_DATA_DECIMAL128 = 19;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","BSON.BSON_INT32_MIN = -0x80000000;","","BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;","BSON.BSON_INT64_MIN = -Math.pow(2, 63);","","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = deserialize",""],"l":{"3":1,"19":1,"20":0,"21":0,"23":0,"26":0,"27":0,"31":0,"32":0,"36":0,"39":1,"40":0,"41":0,"42":0,"43":0,"46":0,"49":0,"52":0,"53":0,"54":0,"57":0,"60":0,"63":0,"66":0,"69":0,"71":0,"74":0,"76":0,"78":0,"79":0,"83":0,"85":0,"86":0,"90":0,"91":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"128":0,"129":0,"131":0,"134":0,"135":0,"136":0,"137":0,"138":0,"141":0,"144":0,"145":0,"146":0,"147":0,"150":0,"151":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"165":0,"166":0,"168":0,"170":0,"172":0,"174":0,"176":0,"178":0,"180":0,"181":0,"182":0,"183":0,"184":0,"187":0,"190":0,"193":0,"195":0,"196":0,"197":0,"198":0,"199":0,"202":0,"203":0,"205":0,"208":0,"210":0,"211":0,"212":0,"213":0,"214":0,"218":0,"219":0,"222":0,"223":0,"225":0,"230":0,"231":0,"233":0,"235":0,"236":0,"239":0,"241":0,"243":0,"246":0,"248":0,"249":0,"252":0,"254":0,"255":0,"258":0,"261":0,"262":0,"264":0,"265":0,"267":0,"268":0,"270":0,"271":0,"275":0,"276":0,"278":0,"280":0,"281":0,"284":0,"286":0,"287":0,"290":0,"292":0,"293":0,"296":0,"298":0,"299":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"322":0,"323":0,"325":0,"326":0,"328":0,"330":0,"333":0,"337":0,"338":0,"339":0,"342":0,"343":0,"347":0,"349":0,"352":0,"354":0,"356":0,"358":0,"360":0,"362":0,"365":0,"366":0,"370":0,"371":0,"375":0,"377":0,"379":0,"380":0,"382":0,"384":0,"387":0,"389":0,"391":0,"393":0,"395":0,"397":0,"399":0,"402":0,"403":0,"404":0,"407":0,"410":0,"411":0,"412":0,"414":0,"416":0,"421":0,"422":0,"423":0,"427":0,"428":0,"437":1,"439":0,"442":0,"443":0,"444":0,"447":0,"456":1,"458":0,"460":0,"461":0,"464":1,"472":1,"479":1,"485":1,"491":1,"497":1,"503":1,"509":1,"515":1,"521":1,"527":1,"533":1,"539":1,"545":1,"551":1,"557":1,"563":1,"569":1,"575":1,"581":1,"587":1,"593":1,"599":1,"606":1,"612":1,"618":1,"624":1,"630":1,"636":1,"639":1,"640":1,"642":1,"643":1,"646":1,"647":1,"650":1,"651":1,"653":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/serializer.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/serializer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":1,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"isDate","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":32}}},"2":{"name":"isRegExp","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":36}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":22},"end":{"line":37,"column":67}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":67}}},"5":{"name":"(anonymous_5)","line":128,"loc":{"start":{"line":128,"column":20},"end":{"line":128,"column":65}}},"6":{"name":"(anonymous_6)","line":139,"loc":{"start":{"line":139,"column":23},"end":{"line":139,"column":68}}},"7":{"name":"(anonymous_7)","line":152,"loc":{"start":{"line":152,"column":20},"end":{"line":152,"column":65}}},"8":{"name":"(anonymous_8)","line":178,"loc":{"start":{"line":178,"column":22},"end":{"line":178,"column":67}}},"9":{"name":"(anonymous_9)","line":202,"loc":{"start":{"line":202,"column":26},"end":{"line":202,"column":71}}},"10":{"name":"(anonymous_10)","line":229,"loc":{"start":{"line":229,"column":22},"end":{"line":229,"column":67}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":24},"end":{"line":247,"column":69}}},"12":{"name":"(anonymous_12)","line":270,"loc":{"start":{"line":270,"column":22},"end":{"line":270,"column":67}}},"13":{"name":"(anonymous_13)","line":294,"loc":{"start":{"line":294,"column":22},"end":{"line":294,"column":128}}},"14":{"name":"(anonymous_14)","line":316,"loc":{"start":{"line":316,"column":26},"end":{"line":316,"column":71}}},"15":{"name":"(anonymous_15)","line":328,"loc":{"start":{"line":328,"column":20},"end":{"line":328,"column":65}}},"16":{"name":"(anonymous_16)","line":352,"loc":{"start":{"line":352,"column":21},"end":{"line":352,"column":66}}},"17":{"name":"(anonymous_17)","line":368,"loc":{"start":{"line":368,"column":22},"end":{"line":368,"column":67}}},"18":{"name":"(anonymous_18)","line":383,"loc":{"start":{"line":383,"column":24},"end":{"line":383,"column":87}}},"19":{"name":"(anonymous_19)","line":406,"loc":{"start":{"line":406,"column":20},"end":{"line":406,"column":120}}},"20":{"name":"(anonymous_20)","line":476,"loc":{"start":{"line":476,"column":22},"end":{"line":476,"column":67}}},"21":{"name":"(anonymous_21)","line":514,"loc":{"start":{"line":514,"column":22},"end":{"line":514,"column":67}}},"22":{"name":"(anonymous_22)","line":536,"loc":{"start":{"line":536,"column":21},"end":{"line":536,"column":93}}},"23":{"name":"serializeInto","line":574,"loc":{"start":{"line":574,"column":20},"end":{"line":574,"column":135}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":18,"column":39}},"2":{"start":{"line":20,"column":0},"end":{"line":24,"column":1}},"3":{"start":{"line":21,"column":2},"end":{"line":21,"column":27}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":19}},"6":{"start":{"line":29,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":88}},"8":{"start":{"line":33,"column":0},"end":{"line":35,"column":1}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":65}},"10":{"start":{"line":37,"column":0},"end":{"line":57,"column":1}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":42}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":109}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":43}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":24}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":52}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":46}},"17":{"start":{"line":49,"column":2},"end":{"line":49,"column":46}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":45}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":34}},"20":{"start":{"line":53,"column":2},"end":{"line":53,"column":27}},"21":{"start":{"line":55,"column":2},"end":{"line":55,"column":22}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":15}},"23":{"start":{"line":59,"column":0},"end":{"line":126,"column":1}},"24":{"start":{"line":61,"column":2},"end":{"line":123,"column":3}},"25":{"start":{"line":64,"column":4},"end":{"line":110,"column":5}},"26":{"start":{"line":66,"column":6},"end":{"line":66,"column":43}},"27":{"start":{"line":68,"column":6},"end":{"line":68,"column":113}},"28":{"start":{"line":70,"column":6},"end":{"line":70,"column":43}},"29":{"start":{"line":71,"column":6},"end":{"line":71,"column":26}},"30":{"start":{"line":73,"column":6},"end":{"line":73,"column":37}},"31":{"start":{"line":74,"column":6},"end":{"line":74,"column":44}},"32":{"start":{"line":75,"column":6},"end":{"line":75,"column":45}},"33":{"start":{"line":76,"column":6},"end":{"line":76,"column":45}},"34":{"start":{"line":77,"column":11},"end":{"line":110,"column":5}},"35":{"start":{"line":79,"column":6},"end":{"line":79,"column":46}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":113}},"37":{"start":{"line":83,"column":6},"end":{"line":83,"column":43}},"38":{"start":{"line":84,"column":6},"end":{"line":84,"column":26}},"39":{"start":{"line":86,"column":6},"end":{"line":86,"column":58}},"40":{"start":{"line":88,"column":6},"end":{"line":88,"column":24}},"41":{"start":{"line":91,"column":6},"end":{"line":91,"column":44}},"42":{"start":{"line":93,"column":6},"end":{"line":93,"column":113}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":43}},"44":{"start":{"line":96,"column":6},"end":{"line":96,"column":26}},"45":{"start":{"line":97,"column":6},"end":{"line":97,"column":43}},"46":{"start":{"line":98,"column":6},"end":{"line":98,"column":41}},"47":{"start":{"line":99,"column":6},"end":{"line":99,"column":43}},"48":{"start":{"line":101,"column":6},"end":{"line":101,"column":39}},"49":{"start":{"line":102,"column":6},"end":{"line":102,"column":46}},"50":{"start":{"line":103,"column":6},"end":{"line":103,"column":47}},"51":{"start":{"line":104,"column":6},"end":{"line":104,"column":47}},"52":{"start":{"line":106,"column":6},"end":{"line":106,"column":40}},"53":{"start":{"line":107,"column":6},"end":{"line":107,"column":47}},"54":{"start":{"line":108,"column":6},"end":{"line":108,"column":48}},"55":{"start":{"line":109,"column":6},"end":{"line":109,"column":48}},"56":{"start":{"line":113,"column":4},"end":{"line":113,"column":44}},"57":{"start":{"line":115,"column":4},"end":{"line":115,"column":111}},"58":{"start":{"line":117,"column":4},"end":{"line":117,"column":41}},"59":{"start":{"line":118,"column":4},"end":{"line":118,"column":24}},"60":{"start":{"line":120,"column":4},"end":{"line":120,"column":56}},"61":{"start":{"line":122,"column":4},"end":{"line":122,"column":22}},"62":{"start":{"line":125,"column":2},"end":{"line":125,"column":15}},"63":{"start":{"line":128,"column":0},"end":{"line":137,"column":1}},"64":{"start":{"line":130,"column":2},"end":{"line":130,"column":40}},"65":{"start":{"line":132,"column":2},"end":{"line":132,"column":109}},"66":{"start":{"line":134,"column":2},"end":{"line":134,"column":39}},"67":{"start":{"line":135,"column":2},"end":{"line":135,"column":22}},"68":{"start":{"line":136,"column":2},"end":{"line":136,"column":15}},"69":{"start":{"line":139,"column":0},"end":{"line":150,"column":1}},"70":{"start":{"line":141,"column":2},"end":{"line":141,"column":43}},"71":{"start":{"line":143,"column":2},"end":{"line":143,"column":109}},"72":{"start":{"line":145,"column":2},"end":{"line":145,"column":39}},"73":{"start":{"line":146,"column":2},"end":{"line":146,"column":22}},"74":{"start":{"line":148,"column":2},"end":{"line":148,"column":34}},"75":{"start":{"line":149,"column":2},"end":{"line":149,"column":15}},"76":{"start":{"line":152,"column":0},"end":{"line":176,"column":1}},"77":{"start":{"line":154,"column":2},"end":{"line":154,"column":40}},"78":{"start":{"line":156,"column":2},"end":{"line":156,"column":109}},"79":{"start":{"line":158,"column":2},"end":{"line":158,"column":39}},"80":{"start":{"line":159,"column":2},"end":{"line":159,"column":22}},"81":{"start":{"line":162,"column":2},"end":{"line":162,"column":53}},"82":{"start":{"line":163,"column":2},"end":{"line":163,"column":41}},"83":{"start":{"line":164,"column":2},"end":{"line":164,"column":43}},"84":{"start":{"line":166,"column":2},"end":{"line":166,"column":35}},"85":{"start":{"line":167,"column":2},"end":{"line":167,"column":42}},"86":{"start":{"line":168,"column":2},"end":{"line":168,"column":43}},"87":{"start":{"line":169,"column":2},"end":{"line":169,"column":43}},"88":{"start":{"line":171,"column":2},"end":{"line":171,"column":36}},"89":{"start":{"line":172,"column":2},"end":{"line":172,"column":43}},"90":{"start":{"line":173,"column":2},"end":{"line":173,"column":44}},"91":{"start":{"line":174,"column":2},"end":{"line":174,"column":44}},"92":{"start":{"line":175,"column":2},"end":{"line":175,"column":15}},"93":{"start":{"line":178,"column":0},"end":{"line":200,"column":1}},"94":{"start":{"line":180,"column":2},"end":{"line":180,"column":42}},"95":{"start":{"line":182,"column":2},"end":{"line":182,"column":109}},"96":{"start":{"line":184,"column":2},"end":{"line":184,"column":39}},"97":{"start":{"line":185,"column":2},"end":{"line":185,"column":22}},"98":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"99":{"start":{"line":187,"column":4},"end":{"line":187,"column":74}},"100":{"start":{"line":190,"column":2},"end":{"line":190,"column":60}},"101":{"start":{"line":192,"column":2},"end":{"line":192,"column":25}},"102":{"start":{"line":194,"column":2},"end":{"line":194,"column":42}},"103":{"start":{"line":194,"column":19},"end":{"line":194,"column":42}},"104":{"start":{"line":195,"column":2},"end":{"line":195,"column":46}},"105":{"start":{"line":195,"column":23},"end":{"line":195,"column":46}},"106":{"start":{"line":196,"column":2},"end":{"line":196,"column":45}},"107":{"start":{"line":196,"column":22},"end":{"line":196,"column":45}},"108":{"start":{"line":198,"column":2},"end":{"line":198,"column":25}},"109":{"start":{"line":199,"column":2},"end":{"line":199,"column":15}},"110":{"start":{"line":202,"column":0},"end":{"line":227,"column":1}},"111":{"start":{"line":204,"column":2},"end":{"line":204,"column":42}},"112":{"start":{"line":206,"column":2},"end":{"line":206,"column":109}},"113":{"start":{"line":208,"column":2},"end":{"line":208,"column":39}},"114":{"start":{"line":209,"column":2},"end":{"line":209,"column":22}},"115":{"start":{"line":212,"column":2},"end":{"line":216,"column":3}},"116":{"start":{"line":215,"column":4},"end":{"line":215,"column":77}},"117":{"start":{"line":219,"column":2},"end":{"line":219,"column":61}},"118":{"start":{"line":221,"column":2},"end":{"line":221,"column":25}},"119":{"start":{"line":223,"column":2},"end":{"line":223,"column":87}},"120":{"start":{"line":225,"column":2},"end":{"line":225,"column":25}},"121":{"start":{"line":226,"column":2},"end":{"line":226,"column":15}},"122":{"start":{"line":229,"column":0},"end":{"line":245,"column":1}},"123":{"start":{"line":231,"column":2},"end":{"line":237,"column":3}},"124":{"start":{"line":232,"column":4},"end":{"line":232,"column":42}},"125":{"start":{"line":233,"column":9},"end":{"line":237,"column":3}},"126":{"start":{"line":234,"column":4},"end":{"line":234,"column":45}},"127":{"start":{"line":236,"column":4},"end":{"line":236,"column":45}},"128":{"start":{"line":240,"column":2},"end":{"line":240,"column":109}},"129":{"start":{"line":242,"column":2},"end":{"line":242,"column":39}},"130":{"start":{"line":243,"column":2},"end":{"line":243,"column":22}},"131":{"start":{"line":244,"column":2},"end":{"line":244,"column":15}},"132":{"start":{"line":247,"column":0},"end":{"line":268,"column":1}},"133":{"start":{"line":249,"column":2},"end":{"line":249,"column":39}},"134":{"start":{"line":251,"column":2},"end":{"line":251,"column":109}},"135":{"start":{"line":254,"column":2},"end":{"line":254,"column":39}},"136":{"start":{"line":255,"column":2},"end":{"line":255,"column":22}},"137":{"start":{"line":258,"column":2},"end":{"line":264,"column":3}},"138":{"start":{"line":259,"column":4},"end":{"line":259,"column":43}},"139":{"start":{"line":260,"column":9},"end":{"line":264,"column":3}},"140":{"start":{"line":261,"column":4},"end":{"line":261,"column":40}},"141":{"start":{"line":263,"column":4},"end":{"line":263,"column":86}},"142":{"start":{"line":267,"column":2},"end":{"line":267,"column":20}},"143":{"start":{"line":270,"column":0},"end":{"line":292,"column":1}},"144":{"start":{"line":272,"column":2},"end":{"line":272,"column":42}},"145":{"start":{"line":274,"column":2},"end":{"line":274,"column":109}},"146":{"start":{"line":276,"column":2},"end":{"line":276,"column":39}},"147":{"start":{"line":277,"column":2},"end":{"line":277,"column":22}},"148":{"start":{"line":279,"column":2},"end":{"line":279,"column":26}},"149":{"start":{"line":281,"column":2},"end":{"line":281,"column":32}},"150":{"start":{"line":282,"column":2},"end":{"line":282,"column":39}},"151":{"start":{"line":283,"column":2},"end":{"line":283,"column":40}},"152":{"start":{"line":284,"column":2},"end":{"line":284,"column":40}},"153":{"start":{"line":286,"column":2},"end":{"line":286,"column":53}},"154":{"start":{"line":288,"column":2},"end":{"line":288,"column":37}},"155":{"start":{"line":290,"column":2},"end":{"line":290,"column":23}},"156":{"start":{"line":291,"column":2},"end":{"line":291,"column":15}},"157":{"start":{"line":294,"column":0},"end":{"line":314,"column":1}},"158":{"start":{"line":295,"column":2},"end":{"line":297,"column":3}},"159":{"start":{"line":296,"column":4},"end":{"line":296,"column":72}},"160":{"start":{"line":296,"column":26},"end":{"line":296,"column":72}},"161":{"start":{"line":300,"column":2},"end":{"line":300,"column":19}},"162":{"start":{"line":302,"column":2},"end":{"line":302,"column":88}},"163":{"start":{"line":304,"column":2},"end":{"line":304,"column":109}},"164":{"start":{"line":306,"column":2},"end":{"line":306,"column":39}},"165":{"start":{"line":307,"column":2},"end":{"line":307,"column":22}},"166":{"start":{"line":308,"column":2},"end":{"line":308,"column":118}},"167":{"start":{"line":310,"column":2},"end":{"line":310,"column":13}},"168":{"start":{"line":312,"column":2},"end":{"line":312,"column":30}},"169":{"start":{"line":313,"column":2},"end":{"line":313,"column":18}},"170":{"start":{"line":316,"column":0},"end":{"line":326,"column":1}},"171":{"start":{"line":317,"column":2},"end":{"line":317,"column":46}},"172":{"start":{"line":319,"column":2},"end":{"line":319,"column":109}},"173":{"start":{"line":321,"column":2},"end":{"line":321,"column":39}},"174":{"start":{"line":322,"column":2},"end":{"line":322,"column":22}},"175":{"start":{"line":324,"column":2},"end":{"line":324,"column":41}},"176":{"start":{"line":325,"column":2},"end":{"line":325,"column":20}},"177":{"start":{"line":328,"column":0},"end":{"line":350,"column":1}},"178":{"start":{"line":330,"column":2},"end":{"line":330,"column":95}},"179":{"start":{"line":332,"column":2},"end":{"line":332,"column":109}},"180":{"start":{"line":334,"column":2},"end":{"line":334,"column":39}},"181":{"start":{"line":335,"column":2},"end":{"line":335,"column":22}},"182":{"start":{"line":337,"column":2},"end":{"line":337,"column":35}},"183":{"start":{"line":338,"column":2},"end":{"line":338,"column":37}},"184":{"start":{"line":340,"column":2},"end":{"line":340,"column":35}},"185":{"start":{"line":341,"column":2},"end":{"line":341,"column":42}},"186":{"start":{"line":342,"column":2},"end":{"line":342,"column":43}},"187":{"start":{"line":343,"column":2},"end":{"line":343,"column":43}},"188":{"start":{"line":345,"column":2},"end":{"line":345,"column":36}},"189":{"start":{"line":346,"column":2},"end":{"line":346,"column":43}},"190":{"start":{"line":347,"column":2},"end":{"line":347,"column":44}},"191":{"start":{"line":348,"column":2},"end":{"line":348,"column":44}},"192":{"start":{"line":349,"column":2},"end":{"line":349,"column":15}},"193":{"start":{"line":352,"column":0},"end":{"line":366,"column":1}},"194":{"start":{"line":354,"column":2},"end":{"line":354,"column":39}},"195":{"start":{"line":356,"column":2},"end":{"line":356,"column":109}},"196":{"start":{"line":358,"column":2},"end":{"line":358,"column":39}},"197":{"start":{"line":359,"column":2},"end":{"line":359,"column":22}},"198":{"start":{"line":361,"column":2},"end":{"line":361,"column":33}},"199":{"start":{"line":362,"column":2},"end":{"line":362,"column":40}},"200":{"start":{"line":363,"column":2},"end":{"line":363,"column":41}},"201":{"start":{"line":364,"column":2},"end":{"line":364,"column":41}},"202":{"start":{"line":365,"column":2},"end":{"line":365,"column":15}},"203":{"start":{"line":368,"column":0},"end":{"line":381,"column":1}},"204":{"start":{"line":370,"column":2},"end":{"line":370,"column":42}},"205":{"start":{"line":372,"column":2},"end":{"line":372,"column":109}},"206":{"start":{"line":374,"column":2},"end":{"line":374,"column":39}},"207":{"start":{"line":375,"column":2},"end":{"line":375,"column":22}},"208":{"start":{"line":377,"column":2},"end":{"line":377,"column":54}},"209":{"start":{"line":379,"column":2},"end":{"line":379,"column":20}},"210":{"start":{"line":380,"column":2},"end":{"line":380,"column":15}},"211":{"start":{"line":383,"column":0},"end":{"line":404,"column":1}},"212":{"start":{"line":384,"column":2},"end":{"line":384,"column":40}},"213":{"start":{"line":386,"column":2},"end":{"line":386,"column":109}},"214":{"start":{"line":388,"column":2},"end":{"line":388,"column":39}},"215":{"start":{"line":389,"column":2},"end":{"line":389,"column":22}},"216":{"start":{"line":391,"column":2},"end":{"line":391,"column":40}},"217":{"start":{"line":393,"column":2},"end":{"line":393,"column":65}},"218":{"start":{"line":395,"column":2},"end":{"line":395,"column":30}},"219":{"start":{"line":396,"column":2},"end":{"line":396,"column":41}},"220":{"start":{"line":397,"column":2},"end":{"line":397,"column":42}},"221":{"start":{"line":398,"column":2},"end":{"line":398,"column":42}},"222":{"start":{"line":400,"column":2},"end":{"line":400,"column":31}},"223":{"start":{"line":402,"column":2},"end":{"line":402,"column":22}},"224":{"start":{"line":403,"column":2},"end":{"line":403,"column":15}},"225":{"start":{"line":406,"column":0},"end":{"line":474,"column":1}},"226":{"start":{"line":407,"column":2},"end":{"line":471,"column":3}},"227":{"start":{"line":409,"column":4},"end":{"line":409,"column":50}},"228":{"start":{"line":411,"column":4},"end":{"line":411,"column":111}},"229":{"start":{"line":413,"column":4},"end":{"line":413,"column":41}},"230":{"start":{"line":414,"column":4},"end":{"line":414,"column":24}},"231":{"start":{"line":417,"column":4},"end":{"line":417,"column":27}},"232":{"start":{"line":421,"column":4},"end":{"line":421,"column":92}},"233":{"start":{"line":423,"column":4},"end":{"line":423,"column":22}},"234":{"start":{"line":425,"column":4},"end":{"line":425,"column":71}},"235":{"start":{"line":427,"column":4},"end":{"line":427,"column":36}},"236":{"start":{"line":428,"column":4},"end":{"line":428,"column":47}},"237":{"start":{"line":429,"column":4},"end":{"line":429,"column":48}},"238":{"start":{"line":430,"column":4},"end":{"line":430,"column":48}},"239":{"start":{"line":432,"column":4},"end":{"line":432,"column":41}},"240":{"start":{"line":434,"column":4},"end":{"line":434,"column":33}},"241":{"start":{"line":438,"column":4},"end":{"line":438,"column":119}},"242":{"start":{"line":439,"column":4},"end":{"line":439,"column":25}},"243":{"start":{"line":442,"column":4},"end":{"line":442,"column":42}},"244":{"start":{"line":445,"column":4},"end":{"line":445,"column":44}},"245":{"start":{"line":446,"column":4},"end":{"line":446,"column":51}},"246":{"start":{"line":447,"column":4},"end":{"line":447,"column":52}},"247":{"start":{"line":448,"column":4},"end":{"line":448,"column":52}},"248":{"start":{"line":450,"column":4},"end":{"line":450,"column":24}},"249":{"start":{"line":452,"column":4},"end":{"line":452,"column":42}},"250":{"start":{"line":454,"column":4},"end":{"line":454,"column":111}},"251":{"start":{"line":456,"column":4},"end":{"line":456,"column":41}},"252":{"start":{"line":457,"column":4},"end":{"line":457,"column":24}},"253":{"start":{"line":459,"column":4},"end":{"line":459,"column":47}},"254":{"start":{"line":461,"column":4},"end":{"line":461,"column":67}},"255":{"start":{"line":463,"column":4},"end":{"line":463,"column":32}},"256":{"start":{"line":464,"column":4},"end":{"line":464,"column":43}},"257":{"start":{"line":465,"column":4},"end":{"line":465,"column":44}},"258":{"start":{"line":466,"column":4},"end":{"line":466,"column":44}},"259":{"start":{"line":468,"column":4},"end":{"line":468,"column":33}},"260":{"start":{"line":470,"column":4},"end":{"line":470,"column":24}},"261":{"start":{"line":473,"column":2},"end":{"line":473,"column":15}},"262":{"start":{"line":476,"column":0},"end":{"line":512,"column":1}},"263":{"start":{"line":478,"column":2},"end":{"line":478,"column":42}},"264":{"start":{"line":480,"column":2},"end":{"line":480,"column":109}},"265":{"start":{"line":482,"column":2},"end":{"line":482,"column":39}},"266":{"start":{"line":483,"column":2},"end":{"line":483,"column":22}},"267":{"start":{"line":485,"column":2},"end":{"line":485,"column":31}},"268":{"start":{"line":487,"column":2},"end":{"line":487,"column":28}},"269":{"start":{"line":489,"column":2},"end":{"line":489,"column":66}},"270":{"start":{"line":489,"column":50},"end":{"line":489,"column":66}},"271":{"start":{"line":491,"column":2},"end":{"line":491,"column":32}},"272":{"start":{"line":492,"column":2},"end":{"line":492,"column":39}},"273":{"start":{"line":493,"column":2},"end":{"line":493,"column":40}},"274":{"start":{"line":494,"column":2},"end":{"line":494,"column":40}},"275":{"start":{"line":496,"column":2},"end":{"line":496,"column":35}},"276":{"start":{"line":499,"column":2},"end":{"line":505,"column":3}},"277":{"start":{"line":500,"column":4},"end":{"line":500,"column":20}},"278":{"start":{"line":501,"column":4},"end":{"line":501,"column":34}},"279":{"start":{"line":502,"column":4},"end":{"line":502,"column":41}},"280":{"start":{"line":503,"column":4},"end":{"line":503,"column":42}},"281":{"start":{"line":504,"column":4},"end":{"line":504,"column":42}},"282":{"start":{"line":508,"column":2},"end":{"line":508,"column":46}},"283":{"start":{"line":510,"column":2},"end":{"line":510,"column":33}},"284":{"start":{"line":511,"column":2},"end":{"line":511,"column":15}},"285":{"start":{"line":514,"column":0},"end":{"line":534,"column":1}},"286":{"start":{"line":516,"column":2},"end":{"line":516,"column":42}},"287":{"start":{"line":518,"column":2},"end":{"line":518,"column":109}},"288":{"start":{"line":520,"column":2},"end":{"line":520,"column":39}},"289":{"start":{"line":521,"column":2},"end":{"line":521,"column":22}},"290":{"start":{"line":523,"column":2},"end":{"line":523,"column":62}},"291":{"start":{"line":525,"column":2},"end":{"line":525,"column":30}},"292":{"start":{"line":526,"column":2},"end":{"line":526,"column":41}},"293":{"start":{"line":527,"column":2},"end":{"line":527,"column":42}},"294":{"start":{"line":528,"column":2},"end":{"line":528,"column":42}},"295":{"start":{"line":530,"column":2},"end":{"line":530,"column":31}},"296":{"start":{"line":532,"column":2},"end":{"line":532,"column":25}},"297":{"start":{"line":533,"column":2},"end":{"line":533,"column":15}},"298":{"start":{"line":536,"column":0},"end":{"line":572,"column":1}},"299":{"start":{"line":538,"column":2},"end":{"line":538,"column":42}},"300":{"start":{"line":540,"column":2},"end":{"line":540,"column":109}},"301":{"start":{"line":543,"column":2},"end":{"line":543,"column":39}},"302":{"start":{"line":544,"column":2},"end":{"line":544,"column":22}},"303":{"start":{"line":546,"column":2},"end":{"line":546,"column":25}},"304":{"start":{"line":547,"column":2},"end":{"line":547,"column":15}},"305":{"start":{"line":550,"column":2},"end":{"line":561,"column":3}},"306":{"start":{"line":551,"column":4},"end":{"line":555,"column":52}},"307":{"start":{"line":557,"column":4},"end":{"line":560,"column":52}},"308":{"start":{"line":564,"column":2},"end":{"line":564,"column":35}},"309":{"start":{"line":566,"column":2},"end":{"line":566,"column":37}},"310":{"start":{"line":567,"column":2},"end":{"line":567,"column":44}},"311":{"start":{"line":568,"column":2},"end":{"line":568,"column":45}},"312":{"start":{"line":569,"column":2},"end":{"line":569,"column":45}},"313":{"start":{"line":571,"column":2},"end":{"line":571,"column":18}},"314":{"start":{"line":574,"column":0},"end":{"line":817,"column":1}},"315":{"start":{"line":575,"column":2},"end":{"line":575,"column":37}},"316":{"start":{"line":576,"column":2},"end":{"line":576,"column":20}},"317":{"start":{"line":579,"column":2},"end":{"line":579,"column":20}},"318":{"start":{"line":582,"column":2},"end":{"line":582,"column":32}},"319":{"start":{"line":583,"column":2},"end":{"line":583,"column":18}},"320":{"start":{"line":586,"column":2},"end":{"line":801,"column":3}},"321":{"start":{"line":588,"column":4},"end":{"line":642,"column":5}},"322":{"start":{"line":589,"column":6},"end":{"line":589,"column":23}},"323":{"start":{"line":590,"column":6},"end":{"line":590,"column":28}},"324":{"start":{"line":593,"column":6},"end":{"line":596,"column":7}},"325":{"start":{"line":594,"column":8},"end":{"line":594,"column":90}},"326":{"start":{"line":594,"column":46},"end":{"line":594,"column":90}},"327":{"start":{"line":595,"column":8},"end":{"line":595,"column":31}},"328":{"start":{"line":598,"column":6},"end":{"line":598,"column":30}},"329":{"start":{"line":599,"column":6},"end":{"line":641,"column":7}},"330":{"start":{"line":600,"column":8},"end":{"line":600,"column":65}},"331":{"start":{"line":601,"column":13},"end":{"line":641,"column":7}},"332":{"start":{"line":602,"column":8},"end":{"line":602,"column":65}},"333":{"start":{"line":603,"column":13},"end":{"line":641,"column":7}},"334":{"start":{"line":604,"column":8},"end":{"line":604,"column":66}},"335":{"start":{"line":605,"column":13},"end":{"line":641,"column":7}},"336":{"start":{"line":606,"column":8},"end":{"line":606,"column":63}},"337":{"start":{"line":607,"column":13},"end":{"line":641,"column":7}},"338":{"start":{"line":608,"column":8},"end":{"line":608,"column":63}},"339":{"start":{"line":609,"column":13},"end":{"line":641,"column":7}},"340":{"start":{"line":610,"column":8},"end":{"line":610,"column":63}},"341":{"start":{"line":611,"column":13},"end":{"line":641,"column":7}},"342":{"start":{"line":612,"column":8},"end":{"line":612,"column":67}},"343":{"start":{"line":613,"column":13},"end":{"line":641,"column":7}},"344":{"start":{"line":614,"column":8},"end":{"line":614,"column":65}},"345":{"start":{"line":615,"column":13},"end":{"line":641,"column":7}},"346":{"start":{"line":616,"column":8},"end":{"line":616,"column":65}},"347":{"start":{"line":617,"column":13},"end":{"line":641,"column":7}},"348":{"start":{"line":618,"column":8},"end":{"line":618,"column":126}},"349":{"start":{"line":619,"column":13},"end":{"line":641,"column":7}},"350":{"start":{"line":620,"column":8},"end":{"line":620,"column":69}},"351":{"start":{"line":621,"column":13},"end":{"line":641,"column":7}},"352":{"start":{"line":622,"column":8},"end":{"line":622,"column":63}},"353":{"start":{"line":623,"column":13},"end":{"line":641,"column":7}},"354":{"start":{"line":624,"column":8},"end":{"line":624,"column":65}},"355":{"start":{"line":625,"column":13},"end":{"line":641,"column":7}},"356":{"start":{"line":626,"column":8},"end":{"line":626,"column":105}},"357":{"start":{"line":627,"column":13},"end":{"line":641,"column":7}},"358":{"start":{"line":628,"column":8},"end":{"line":628,"column":118}},"359":{"start":{"line":629,"column":13},"end":{"line":641,"column":7}},"360":{"start":{"line":630,"column":8},"end":{"line":630,"column":65}},"361":{"start":{"line":631,"column":13},"end":{"line":641,"column":7}},"362":{"start":{"line":632,"column":8},"end":{"line":632,"column":65}},"363":{"start":{"line":633,"column":13},"end":{"line":641,"column":7}},"364":{"start":{"line":634,"column":8},"end":{"line":634,"column":91}},"365":{"start":{"line":635,"column":13},"end":{"line":641,"column":7}},"366":{"start":{"line":636,"column":8},"end":{"line":636,"column":69}},"367":{"start":{"line":637,"column":13},"end":{"line":641,"column":7}},"368":{"start":{"line":638,"column":8},"end":{"line":638,"column":64}},"369":{"start":{"line":639,"column":13},"end":{"line":641,"column":7}},"370":{"start":{"line":640,"column":8},"end":{"line":640,"column":65}},"371":{"start":{"line":643,"column":9},"end":{"line":801,"column":3}},"372":{"start":{"line":644,"column":4},"end":{"line":644,"column":36}},"373":{"start":{"line":645,"column":4},"end":{"line":645,"column":21}},"374":{"start":{"line":647,"column":4},"end":{"line":720,"column":5}},"375":{"start":{"line":649,"column":6},"end":{"line":649,"column":34}},"376":{"start":{"line":650,"column":6},"end":{"line":650,"column":24}},"377":{"start":{"line":652,"column":6},"end":{"line":652,"column":24}},"378":{"start":{"line":652,"column":15},"end":{"line":652,"column":24}},"379":{"start":{"line":655,"column":6},"end":{"line":655,"column":31}},"380":{"start":{"line":656,"column":6},"end":{"line":656,"column":33}},"381":{"start":{"line":659,"column":6},"end":{"line":659,"column":30}},"382":{"start":{"line":662,"column":6},"end":{"line":676,"column":7}},"383":{"start":{"line":663,"column":8},"end":{"line":667,"column":9}},"384":{"start":{"line":666,"column":10},"end":{"line":666,"column":69}},"385":{"start":{"line":669,"column":8},"end":{"line":675,"column":9}},"386":{"start":{"line":670,"column":10},"end":{"line":674,"column":11}},"387":{"start":{"line":671,"column":12},"end":{"line":671,"column":67}},"388":{"start":{"line":672,"column":17},"end":{"line":674,"column":11}},"389":{"start":{"line":673,"column":12},"end":{"line":673,"column":64}},"390":{"start":{"line":678,"column":6},"end":{"line":719,"column":7}},"391":{"start":{"line":679,"column":8},"end":{"line":679,"column":59}},"392":{"start":{"line":680,"column":13},"end":{"line":719,"column":7}},"393":{"start":{"line":681,"column":8},"end":{"line":681,"column":59}},"394":{"start":{"line":682,"column":13},"end":{"line":719,"column":7}},"395":{"start":{"line":683,"column":8},"end":{"line":683,"column":60}},"396":{"start":{"line":684,"column":13},"end":{"line":719,"column":7}},"397":{"start":{"line":685,"column":8},"end":{"line":685,"column":57}},"398":{"start":{"line":686,"column":13},"end":{"line":719,"column":7}},"399":{"start":{"line":687,"column":13},"end":{"line":719,"column":7}},"400":{"start":{"line":688,"column":8},"end":{"line":688,"column":57}},"401":{"start":{"line":689,"column":13},"end":{"line":719,"column":7}},"402":{"start":{"line":690,"column":8},"end":{"line":690,"column":61}},"403":{"start":{"line":691,"column":13},"end":{"line":719,"column":7}},"404":{"start":{"line":692,"column":8},"end":{"line":692,"column":59}},"405":{"start":{"line":693,"column":13},"end":{"line":719,"column":7}},"406":{"start":{"line":694,"column":8},"end":{"line":694,"column":59}},"407":{"start":{"line":695,"column":13},"end":{"line":719,"column":7}},"408":{"start":{"line":696,"column":8},"end":{"line":696,"column":127}},"409":{"start":{"line":697,"column":13},"end":{"line":719,"column":7}},"410":{"start":{"line":698,"column":8},"end":{"line":698,"column":63}},"411":{"start":{"line":699,"column":13},"end":{"line":719,"column":7}},"412":{"start":{"line":700,"column":8},"end":{"line":700,"column":57}},"413":{"start":{"line":701,"column":13},"end":{"line":719,"column":7}},"414":{"start":{"line":702,"column":8},"end":{"line":702,"column":59}},"415":{"start":{"line":703,"column":13},"end":{"line":719,"column":7}},"416":{"start":{"line":704,"column":8},"end":{"line":704,"column":112}},"417":{"start":{"line":705,"column":13},"end":{"line":719,"column":7}},"418":{"start":{"line":706,"column":8},"end":{"line":706,"column":99}},"419":{"start":{"line":707,"column":13},"end":{"line":719,"column":7}},"420":{"start":{"line":708,"column":8},"end":{"line":708,"column":59}},"421":{"start":{"line":709,"column":13},"end":{"line":719,"column":7}},"422":{"start":{"line":710,"column":8},"end":{"line":710,"column":59}},"423":{"start":{"line":711,"column":13},"end":{"line":719,"column":7}},"424":{"start":{"line":712,"column":8},"end":{"line":712,"column":85}},"425":{"start":{"line":713,"column":13},"end":{"line":719,"column":7}},"426":{"start":{"line":714,"column":8},"end":{"line":714,"column":63}},"427":{"start":{"line":715,"column":13},"end":{"line":719,"column":7}},"428":{"start":{"line":716,"column":8},"end":{"line":716,"column":58}},"429":{"start":{"line":717,"column":13},"end":{"line":719,"column":7}},"430":{"start":{"line":718,"column":8},"end":{"line":718,"column":59}},"431":{"start":{"line":723,"column":4},"end":{"line":727,"column":5}},"432":{"start":{"line":724,"column":6},"end":{"line":724,"column":89}},"433":{"start":{"line":724,"column":45},"end":{"line":724,"column":89}},"434":{"start":{"line":725,"column":6},"end":{"line":725,"column":31}},"435":{"start":{"line":726,"column":6},"end":{"line":726,"column":114}},"436":{"start":{"line":726,"column":54},"end":{"line":726,"column":114}},"437":{"start":{"line":730,"column":4},"end":{"line":800,"column":5}},"438":{"start":{"line":731,"column":6},"end":{"line":731,"column":30}},"439":{"start":{"line":733,"column":6},"end":{"line":736,"column":7}},"440":{"start":{"line":734,"column":8},"end":{"line":734,"column":90}},"441":{"start":{"line":734,"column":46},"end":{"line":734,"column":90}},"442":{"start":{"line":735,"column":8},"end":{"line":735,"column":31}},"443":{"start":{"line":739,"column":6},"end":{"line":739,"column":30}},"444":{"start":{"line":742,"column":6},"end":{"line":756,"column":7}},"445":{"start":{"line":743,"column":8},"end":{"line":747,"column":9}},"446":{"start":{"line":746,"column":10},"end":{"line":746,"column":69}},"447":{"start":{"line":749,"column":8},"end":{"line":755,"column":9}},"448":{"start":{"line":750,"column":10},"end":{"line":754,"column":11}},"449":{"start":{"line":751,"column":12},"end":{"line":751,"column":67}},"450":{"start":{"line":752,"column":17},"end":{"line":754,"column":11}},"451":{"start":{"line":753,"column":12},"end":{"line":753,"column":64}},"452":{"start":{"line":758,"column":6},"end":{"line":799,"column":7}},"453":{"start":{"line":759,"column":8},"end":{"line":759,"column":59}},"454":{"start":{"line":760,"column":13},"end":{"line":799,"column":7}},"455":{"start":{"line":761,"column":8},"end":{"line":761,"column":59}},"456":{"start":{"line":762,"column":13},"end":{"line":799,"column":7}},"457":{"start":{"line":763,"column":8},"end":{"line":763,"column":60}},"458":{"start":{"line":764,"column":13},"end":{"line":799,"column":7}},"459":{"start":{"line":765,"column":8},"end":{"line":765,"column":57}},"460":{"start":{"line":766,"column":13},"end":{"line":799,"column":7}},"461":{"start":{"line":767,"column":13},"end":{"line":799,"column":7}},"462":{"start":{"line":768,"column":8},"end":{"line":768,"column":57}},"463":{"start":{"line":769,"column":13},"end":{"line":799,"column":7}},"464":{"start":{"line":770,"column":8},"end":{"line":770,"column":61}},"465":{"start":{"line":771,"column":13},"end":{"line":799,"column":7}},"466":{"start":{"line":772,"column":8},"end":{"line":772,"column":59}},"467":{"start":{"line":773,"column":13},"end":{"line":799,"column":7}},"468":{"start":{"line":774,"column":8},"end":{"line":774,"column":59}},"469":{"start":{"line":775,"column":13},"end":{"line":799,"column":7}},"470":{"start":{"line":776,"column":8},"end":{"line":776,"column":127}},"471":{"start":{"line":777,"column":13},"end":{"line":799,"column":7}},"472":{"start":{"line":778,"column":8},"end":{"line":778,"column":63}},"473":{"start":{"line":779,"column":13},"end":{"line":799,"column":7}},"474":{"start":{"line":780,"column":8},"end":{"line":780,"column":57}},"475":{"start":{"line":781,"column":13},"end":{"line":799,"column":7}},"476":{"start":{"line":782,"column":8},"end":{"line":782,"column":59}},"477":{"start":{"line":783,"column":13},"end":{"line":799,"column":7}},"478":{"start":{"line":784,"column":8},"end":{"line":784,"column":112}},"479":{"start":{"line":785,"column":13},"end":{"line":799,"column":7}},"480":{"start":{"line":786,"column":8},"end":{"line":786,"column":99}},"481":{"start":{"line":787,"column":13},"end":{"line":799,"column":7}},"482":{"start":{"line":788,"column":8},"end":{"line":788,"column":59}},"483":{"start":{"line":789,"column":13},"end":{"line":799,"column":7}},"484":{"start":{"line":790,"column":8},"end":{"line":790,"column":59}},"485":{"start":{"line":791,"column":13},"end":{"line":799,"column":7}},"486":{"start":{"line":792,"column":8},"end":{"line":792,"column":85}},"487":{"start":{"line":793,"column":13},"end":{"line":799,"column":7}},"488":{"start":{"line":794,"column":8},"end":{"line":794,"column":63}},"489":{"start":{"line":795,"column":13},"end":{"line":799,"column":7}},"490":{"start":{"line":796,"column":8},"end":{"line":796,"column":58}},"491":{"start":{"line":797,"column":13},"end":{"line":799,"column":7}},"492":{"start":{"line":798,"column":8},"end":{"line":798,"column":59}},"493":{"start":{"line":804,"column":2},"end":{"line":804,"column":13}},"494":{"start":{"line":807,"column":2},"end":{"line":807,"column":25}},"495":{"start":{"line":810,"column":2},"end":{"line":810,"column":35}},"496":{"start":{"line":812,"column":2},"end":{"line":812,"column":40}},"497":{"start":{"line":813,"column":2},"end":{"line":813,"column":47}},"498":{"start":{"line":814,"column":2},"end":{"line":814,"column":48}},"499":{"start":{"line":815,"column":2},"end":{"line":815,"column":48}},"500":{"start":{"line":816,"column":2},"end":{"line":816,"column":15}},"501":{"start":{"line":819,"column":0},"end":{"line":819,"column":14}},"502":{"start":{"line":827,"column":0},"end":{"line":827,"column":44}},"503":{"start":{"line":834,"column":0},"end":{"line":834,"column":26}},"504":{"start":{"line":840,"column":0},"end":{"line":840,"column":26}},"505":{"start":{"line":846,"column":0},"end":{"line":846,"column":26}},"506":{"start":{"line":852,"column":0},"end":{"line":852,"column":25}},"507":{"start":{"line":858,"column":0},"end":{"line":858,"column":26}},"508":{"start":{"line":864,"column":0},"end":{"line":864,"column":29}},"509":{"start":{"line":870,"column":0},"end":{"line":870,"column":23}},"510":{"start":{"line":876,"column":0},"end":{"line":876,"column":27}},"511":{"start":{"line":882,"column":0},"end":{"line":882,"column":24}},"512":{"start":{"line":888,"column":0},"end":{"line":888,"column":25}},"513":{"start":{"line":894,"column":0},"end":{"line":894,"column":27}},"514":{"start":{"line":900,"column":0},"end":{"line":900,"column":25}},"515":{"start":{"line":906,"column":0},"end":{"line":906,"column":27}},"516":{"start":{"line":912,"column":0},"end":{"line":912,"column":33}},"517":{"start":{"line":918,"column":0},"end":{"line":918,"column":24}},"518":{"start":{"line":924,"column":0},"end":{"line":924,"column":30}},"519":{"start":{"line":930,"column":0},"end":{"line":930,"column":25}},"520":{"start":{"line":936,"column":0},"end":{"line":936,"column":31}},"521":{"start":{"line":942,"column":0},"end":{"line":942,"column":30}},"522":{"start":{"line":948,"column":0},"end":{"line":948,"column":30}},"523":{"start":{"line":954,"column":0},"end":{"line":954,"column":37}},"524":{"start":{"line":960,"column":0},"end":{"line":960,"column":38}},"525":{"start":{"line":966,"column":0},"end":{"line":966,"column":40}},"526":{"start":{"line":972,"column":0},"end":{"line":972,"column":34}},"527":{"start":{"line":978,"column":0},"end":{"line":978,"column":33}},"528":{"start":{"line":984,"column":0},"end":{"line":984,"column":44}},"529":{"start":{"line":987,"column":0},"end":{"line":987,"column":33}},"530":{"start":{"line":988,"column":0},"end":{"line":988,"column":34}},"531":{"start":{"line":990,"column":0},"end":{"line":990,"column":42}},"532":{"start":{"line":991,"column":0},"end":{"line":991,"column":39}},"533":{"start":{"line":994,"column":0},"end":{"line":994,"column":35}},"534":{"start":{"line":995,"column":0},"end":{"line":995,"column":36}},"535":{"start":{"line":998,"column":0},"end":{"line":998,"column":56}},"536":{"start":{"line":999,"column":0},"end":{"line":999,"column":57}},"537":{"start":{"line":1001,"column":0},"end":{"line":1001,"column":31}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":30}},{"start":{"line":30,"column":34},"end":{"line":30,"column":87}}]},"2":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":40},"end":{"line":41,"column":72}},{"start":{"line":41,"column":75},"end":{"line":41,"column":108}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":5},"end":{"line":61,"column":32}},{"start":{"line":61,"column":36},"end":{"line":61,"column":60}},{"start":{"line":61,"column":64},"end":{"line":61,"column":88}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":7},"end":{"line":64,"column":35}},{"start":{"line":64,"column":39},"end":{"line":64,"column":67}}]},"7":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":44},"end":{"line":68,"column":76}},{"start":{"line":68,"column":79},"end":{"line":68,"column":112}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":11},"end":{"line":77,"column":11}},{"start":{"line":77,"column":11},"end":{"line":77,"column":11}}]},"9":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":14},"end":{"line":77,"column":38}},{"start":{"line":77,"column":42},"end":{"line":77,"column":66}}]},"10":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":44},"end":{"line":81,"column":76}},{"start":{"line":81,"column":79},"end":{"line":81,"column":112}}]},"11":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":44},"end":{"line":93,"column":76}},{"start":{"line":93,"column":79},"end":{"line":93,"column":112}}]},"12":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":42},"end":{"line":115,"column":74}},{"start":{"line":115,"column":77},"end":{"line":115,"column":110}}]},"13":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":40},"end":{"line":132,"column":72}},{"start":{"line":132,"column":75},"end":{"line":132,"column":108}}]},"14":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":40},"end":{"line":143,"column":72}},{"start":{"line":143,"column":75},"end":{"line":143,"column":108}}]},"15":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":28},"end":{"line":148,"column":29}},{"start":{"line":148,"column":32},"end":{"line":148,"column":33}}]},"16":{"line":156,"type":"cond-expr","locations":[{"start":{"line":156,"column":40},"end":{"line":156,"column":72}},{"start":{"line":156,"column":75},"end":{"line":156,"column":108}}]},"17":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":40},"end":{"line":182,"column":72}},{"start":{"line":182,"column":75},"end":{"line":182,"column":108}}]},"18":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"19":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":18}},{"start":{"line":186,"column":22},"end":{"line":186,"column":56}}]},"20":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"21":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"22":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"23":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":40},"end":{"line":206,"column":72}},{"start":{"line":206,"column":75},"end":{"line":206,"column":108}}]},"24":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"25":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"26":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":9},"end":{"line":233,"column":9}},{"start":{"line":233,"column":9},"end":{"line":233,"column":9}}]},"27":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":40},"end":{"line":240,"column":72}},{"start":{"line":240,"column":75},"end":{"line":240,"column":108}}]},"28":{"line":251,"type":"cond-expr","locations":[{"start":{"line":251,"column":40},"end":{"line":251,"column":72}},{"start":{"line":251,"column":75},"end":{"line":251,"column":108}}]},"29":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"30":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":9},"end":{"line":260,"column":9}},{"start":{"line":260,"column":9},"end":{"line":260,"column":9}}]},"31":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":12},"end":{"line":260,"column":20}},{"start":{"line":260,"column":24},"end":{"line":260,"column":37}}]},"32":{"line":274,"type":"cond-expr","locations":[{"start":{"line":274,"column":40},"end":{"line":274,"column":72}},{"start":{"line":274,"column":75},"end":{"line":274,"column":108}}]},"33":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"34":{"line":302,"type":"cond-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":63}},{"start":{"line":302,"column":66},"end":{"line":302,"column":87}}]},"35":{"line":304,"type":"cond-expr","locations":[{"start":{"line":304,"column":40},"end":{"line":304,"column":72}},{"start":{"line":304,"column":75},"end":{"line":304,"column":108}}]},"36":{"line":319,"type":"cond-expr","locations":[{"start":{"line":319,"column":40},"end":{"line":319,"column":72}},{"start":{"line":319,"column":75},"end":{"line":319,"column":108}}]},"37":{"line":330,"type":"cond-expr","locations":[{"start":{"line":330,"column":48},"end":{"line":330,"column":67}},{"start":{"line":330,"column":70},"end":{"line":330,"column":94}}]},"38":{"line":332,"type":"cond-expr","locations":[{"start":{"line":332,"column":40},"end":{"line":332,"column":72}},{"start":{"line":332,"column":75},"end":{"line":332,"column":108}}]},"39":{"line":356,"type":"cond-expr","locations":[{"start":{"line":356,"column":40},"end":{"line":356,"column":72}},{"start":{"line":356,"column":75},"end":{"line":356,"column":108}}]},"40":{"line":372,"type":"cond-expr","locations":[{"start":{"line":372,"column":40},"end":{"line":372,"column":72}},{"start":{"line":372,"column":75},"end":{"line":372,"column":108}}]},"41":{"line":386,"type":"cond-expr","locations":[{"start":{"line":386,"column":40},"end":{"line":386,"column":72}},{"start":{"line":386,"column":75},"end":{"line":386,"column":108}}]},"42":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"43":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":5},"end":{"line":407,"column":16}},{"start":{"line":407,"column":20},"end":{"line":407,"column":50}}]},"44":{"line":411,"type":"cond-expr","locations":[{"start":{"line":411,"column":42},"end":{"line":411,"column":74}},{"start":{"line":411,"column":77},"end":{"line":411,"column":110}}]},"45":{"line":421,"type":"cond-expr","locations":[{"start":{"line":421,"column":57},"end":{"line":421,"column":67}},{"start":{"line":421,"column":70},"end":{"line":421,"column":91}}]},"46":{"line":454,"type":"cond-expr","locations":[{"start":{"line":454,"column":42},"end":{"line":454,"column":74}},{"start":{"line":454,"column":77},"end":{"line":454,"column":110}}]},"47":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":40},"end":{"line":480,"column":72}},{"start":{"line":480,"column":75},"end":{"line":480,"column":108}}]},"48":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"49":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":499,"column":2}},{"start":{"line":499,"column":2},"end":{"line":499,"column":2}}]},"50":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":40},"end":{"line":518,"column":72}},{"start":{"line":518,"column":75},"end":{"line":518,"column":108}}]},"51":{"line":540,"type":"cond-expr","locations":[{"start":{"line":540,"column":40},"end":{"line":540,"column":72}},{"start":{"line":540,"column":75},"end":{"line":540,"column":108}}]},"52":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":2},"end":{"line":550,"column":2}},{"start":{"line":550,"column":2},"end":{"line":550,"column":2}}]},"53":{"line":575,"type":"binary-expr","locations":[{"start":{"line":575,"column":18},"end":{"line":575,"column":31}},{"start":{"line":575,"column":35},"end":{"line":575,"column":36}}]},"54":{"line":576,"type":"binary-expr","locations":[{"start":{"line":576,"column":9},"end":{"line":576,"column":13}},{"start":{"line":576,"column":17},"end":{"line":576,"column":19}}]},"55":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":586,"column":2}},{"start":{"line":586,"column":2},"end":{"line":586,"column":2}}]},"56":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":6},"end":{"line":593,"column":6}},{"start":{"line":593,"column":6},"end":{"line":593,"column":6}}]},"57":{"line":593,"type":"binary-expr","locations":[{"start":{"line":593,"column":9},"end":{"line":593,"column":14}},{"start":{"line":593,"column":18},"end":{"line":593,"column":30}}]},"58":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":8},"end":{"line":594,"column":8}},{"start":{"line":594,"column":8},"end":{"line":594,"column":8}}]},"59":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":6},"end":{"line":599,"column":6}},{"start":{"line":599,"column":6},"end":{"line":599,"column":6}}]},"60":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":13},"end":{"line":601,"column":13}},{"start":{"line":601,"column":13},"end":{"line":601,"column":13}}]},"61":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":13},"end":{"line":603,"column":13}},{"start":{"line":603,"column":13},"end":{"line":603,"column":13}}]},"62":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":13},"end":{"line":605,"column":13}},{"start":{"line":605,"column":13},"end":{"line":605,"column":13}}]},"63":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":16},"end":{"line":605,"column":37}},{"start":{"line":605,"column":41},"end":{"line":605,"column":54}}]},"64":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":13},"end":{"line":607,"column":13}},{"start":{"line":607,"column":13},"end":{"line":607,"column":13}}]},"65":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":13},"end":{"line":609,"column":13}},{"start":{"line":609,"column":13},"end":{"line":609,"column":13}}]},"66":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":13},"end":{"line":611,"column":13}},{"start":{"line":611,"column":13},"end":{"line":611,"column":13}}]},"67":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":13},"end":{"line":613,"column":13}},{"start":{"line":613,"column":13},"end":{"line":613,"column":13}}]},"68":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":13},"end":{"line":615,"column":13}},{"start":{"line":615,"column":13},"end":{"line":615,"column":13}}]},"69":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":16},"end":{"line":615,"column":39}},{"start":{"line":615,"column":43},"end":{"line":615,"column":58}}]},"70":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":13},"end":{"line":617,"column":13}},{"start":{"line":617,"column":13},"end":{"line":617,"column":13}}]},"71":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":16},"end":{"line":617,"column":32}},{"start":{"line":617,"column":36},"end":{"line":617,"column":62}}]},"72":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":13},"end":{"line":619,"column":13}},{"start":{"line":619,"column":13},"end":{"line":619,"column":13}}]},"73":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":16},"end":{"line":619,"column":32}},{"start":{"line":619,"column":36},"end":{"line":619,"column":70}}]},"74":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":13},"end":{"line":621,"column":13}},{"start":{"line":621,"column":13},"end":{"line":621,"column":13}}]},"75":{"line":621,"type":"binary-expr","locations":[{"start":{"line":621,"column":16},"end":{"line":621,"column":44}},{"start":{"line":621,"column":48},"end":{"line":621,"column":81}}]},"76":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":13},"end":{"line":623,"column":13}},{"start":{"line":623,"column":13},"end":{"line":623,"column":13}}]},"77":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":13},"end":{"line":625,"column":13}},{"start":{"line":625,"column":13},"end":{"line":625,"column":13}}]},"78":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":16},"end":{"line":625,"column":42}},{"start":{"line":625,"column":46},"end":{"line":625,"column":64}}]},"79":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":13},"end":{"line":627,"column":13}},{"start":{"line":627,"column":13},"end":{"line":627,"column":13}}]},"80":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":13},"end":{"line":629,"column":13}},{"start":{"line":629,"column":13},"end":{"line":629,"column":13}}]},"81":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":13},"end":{"line":631,"column":13}},{"start":{"line":631,"column":13},"end":{"line":631,"column":13}}]},"82":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":13},"end":{"line":633,"column":13}},{"start":{"line":633,"column":13},"end":{"line":633,"column":13}}]},"83":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":13},"end":{"line":635,"column":13}},{"start":{"line":635,"column":13},"end":{"line":635,"column":13}}]},"84":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":13},"end":{"line":637,"column":13}},{"start":{"line":637,"column":13},"end":{"line":637,"column":13}}]},"85":{"line":639,"type":"if","locations":[{"start":{"line":639,"column":13},"end":{"line":639,"column":13}},{"start":{"line":639,"column":13},"end":{"line":639,"column":13}}]},"86":{"line":639,"type":"binary-expr","locations":[{"start":{"line":639,"column":16},"end":{"line":639,"column":46}},{"start":{"line":639,"column":50},"end":{"line":639,"column":80}}]},"87":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":9},"end":{"line":643,"column":9}},{"start":{"line":643,"column":9},"end":{"line":643,"column":9}}]},"88":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":6},"end":{"line":652,"column":6}},{"start":{"line":652,"column":6},"end":{"line":652,"column":6}}]},"89":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":6},"end":{"line":662,"column":6}},{"start":{"line":662,"column":6},"end":{"line":662,"column":6}}]},"90":{"line":662,"type":"binary-expr","locations":[{"start":{"line":662,"column":9},"end":{"line":662,"column":21}},{"start":{"line":662,"column":25},"end":{"line":662,"column":38}},{"start":{"line":662,"column":42},"end":{"line":662,"column":54}}]},"91":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":8},"end":{"line":663,"column":8}},{"start":{"line":663,"column":8},"end":{"line":663,"column":8}}]},"92":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":8},"end":{"line":669,"column":8}},{"start":{"line":669,"column":8},"end":{"line":669,"column":8}}]},"93":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":10},"end":{"line":670,"column":10}},{"start":{"line":670,"column":10},"end":{"line":670,"column":10}}]},"94":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":17},"end":{"line":672,"column":17}},{"start":{"line":672,"column":17},"end":{"line":672,"column":17}}]},"95":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":6},"end":{"line":678,"column":6}},{"start":{"line":678,"column":6},"end":{"line":678,"column":6}}]},"96":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":13},"end":{"line":680,"column":13}},{"start":{"line":680,"column":13},"end":{"line":680,"column":13}}]},"97":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":13},"end":{"line":682,"column":13}},{"start":{"line":682,"column":13},"end":{"line":682,"column":13}}]},"98":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":13},"end":{"line":684,"column":13}},{"start":{"line":684,"column":13},"end":{"line":684,"column":13}}]},"99":{"line":684,"type":"binary-expr","locations":[{"start":{"line":684,"column":16},"end":{"line":684,"column":37}},{"start":{"line":684,"column":41},"end":{"line":684,"column":54}}]},"100":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":13},"end":{"line":686,"column":13}},{"start":{"line":686,"column":13},"end":{"line":686,"column":13}}]},"101":{"line":686,"type":"binary-expr","locations":[{"start":{"line":686,"column":16},"end":{"line":686,"column":35}},{"start":{"line":686,"column":39},"end":{"line":686,"column":62}}]},"102":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":13},"end":{"line":687,"column":13}},{"start":{"line":687,"column":13},"end":{"line":687,"column":13}}]},"103":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":16},"end":{"line":687,"column":30}},{"start":{"line":687,"column":34},"end":{"line":687,"column":53}}]},"104":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":13},"end":{"line":689,"column":13}},{"start":{"line":689,"column":13},"end":{"line":689,"column":13}}]},"105":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":13},"end":{"line":691,"column":13}},{"start":{"line":691,"column":13},"end":{"line":691,"column":13}}]},"106":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":13},"end":{"line":693,"column":13}},{"start":{"line":693,"column":13},"end":{"line":693,"column":13}}]},"107":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":16},"end":{"line":693,"column":39}},{"start":{"line":693,"column":43},"end":{"line":693,"column":58}}]},"108":{"line":695,"type":"if","locations":[{"start":{"line":695,"column":13},"end":{"line":695,"column":13}},{"start":{"line":695,"column":13},"end":{"line":695,"column":13}}]},"109":{"line":695,"type":"binary-expr","locations":[{"start":{"line":695,"column":16},"end":{"line":695,"column":32}},{"start":{"line":695,"column":36},"end":{"line":695,"column":62}}]},"110":{"line":697,"type":"if","locations":[{"start":{"line":697,"column":13},"end":{"line":697,"column":13}},{"start":{"line":697,"column":13},"end":{"line":697,"column":13}}]},"111":{"line":697,"type":"binary-expr","locations":[{"start":{"line":697,"column":16},"end":{"line":697,"column":32}},{"start":{"line":697,"column":36},"end":{"line":697,"column":70}}]},"112":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":13},"end":{"line":699,"column":13}},{"start":{"line":699,"column":13},"end":{"line":699,"column":13}}]},"113":{"line":699,"type":"binary-expr","locations":[{"start":{"line":699,"column":16},"end":{"line":699,"column":44}},{"start":{"line":699,"column":48},"end":{"line":699,"column":81}}]},"114":{"line":701,"type":"if","locations":[{"start":{"line":701,"column":13},"end":{"line":701,"column":13}},{"start":{"line":701,"column":13},"end":{"line":701,"column":13}}]},"115":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":13},"end":{"line":703,"column":13}},{"start":{"line":703,"column":13},"end":{"line":703,"column":13}}]},"116":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":13},"end":{"line":705,"column":13}},{"start":{"line":705,"column":13},"end":{"line":705,"column":13}}]},"117":{"line":705,"type":"binary-expr","locations":[{"start":{"line":705,"column":16},"end":{"line":705,"column":42}},{"start":{"line":705,"column":46},"end":{"line":705,"column":64}}]},"118":{"line":707,"type":"if","locations":[{"start":{"line":707,"column":13},"end":{"line":707,"column":13}},{"start":{"line":707,"column":13},"end":{"line":707,"column":13}}]},"119":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":13},"end":{"line":709,"column":13}},{"start":{"line":709,"column":13},"end":{"line":709,"column":13}}]},"120":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":13},"end":{"line":711,"column":13}},{"start":{"line":711,"column":13},"end":{"line":711,"column":13}}]},"121":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":13},"end":{"line":713,"column":13}},{"start":{"line":713,"column":13},"end":{"line":713,"column":13}}]},"122":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":13},"end":{"line":715,"column":13}},{"start":{"line":715,"column":13},"end":{"line":715,"column":13}}]},"123":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":13},"end":{"line":717,"column":13}},{"start":{"line":717,"column":13},"end":{"line":717,"column":13}}]},"124":{"line":717,"type":"binary-expr","locations":[{"start":{"line":717,"column":16},"end":{"line":717,"column":46}},{"start":{"line":717,"column":50},"end":{"line":717,"column":80}}]},"125":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":4},"end":{"line":723,"column":4}},{"start":{"line":723,"column":4},"end":{"line":723,"column":4}}]},"126":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":6},"end":{"line":724,"column":6}},{"start":{"line":724,"column":6},"end":{"line":724,"column":6}}]},"127":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":6},"end":{"line":726,"column":6}},{"start":{"line":726,"column":6},"end":{"line":726,"column":6}}]},"128":{"line":726,"type":"binary-expr","locations":[{"start":{"line":726,"column":9},"end":{"line":726,"column":23}},{"start":{"line":726,"column":27},"end":{"line":726,"column":52}}]},"129":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":6},"end":{"line":733,"column":6}},{"start":{"line":733,"column":6},"end":{"line":733,"column":6}}]},"130":{"line":733,"type":"binary-expr","locations":[{"start":{"line":733,"column":9},"end":{"line":733,"column":14}},{"start":{"line":733,"column":18},"end":{"line":733,"column":30}}]},"131":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":8}},{"start":{"line":734,"column":8},"end":{"line":734,"column":8}}]},"132":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":6},"end":{"line":742,"column":6}},{"start":{"line":742,"column":6},"end":{"line":742,"column":6}}]},"133":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":9},"end":{"line":742,"column":21}},{"start":{"line":742,"column":25},"end":{"line":742,"column":38}},{"start":{"line":742,"column":42},"end":{"line":742,"column":54}}]},"134":{"line":743,"type":"if","locations":[{"start":{"line":743,"column":8},"end":{"line":743,"column":8}},{"start":{"line":743,"column":8},"end":{"line":743,"column":8}}]},"135":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":8},"end":{"line":749,"column":8}},{"start":{"line":749,"column":8},"end":{"line":749,"column":8}}]},"136":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":10},"end":{"line":750,"column":10}},{"start":{"line":750,"column":10},"end":{"line":750,"column":10}}]},"137":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":17},"end":{"line":752,"column":17}},{"start":{"line":752,"column":17},"end":{"line":752,"column":17}}]},"138":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":6},"end":{"line":758,"column":6}},{"start":{"line":758,"column":6},"end":{"line":758,"column":6}}]},"139":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":13},"end":{"line":760,"column":13}},{"start":{"line":760,"column":13},"end":{"line":760,"column":13}}]},"140":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":13},"end":{"line":762,"column":13}},{"start":{"line":762,"column":13},"end":{"line":762,"column":13}}]},"141":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":13},"end":{"line":764,"column":13}},{"start":{"line":764,"column":13},"end":{"line":764,"column":13}}]},"142":{"line":764,"type":"binary-expr","locations":[{"start":{"line":764,"column":16},"end":{"line":764,"column":37}},{"start":{"line":764,"column":41},"end":{"line":764,"column":54}}]},"143":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":13},"end":{"line":766,"column":13}},{"start":{"line":766,"column":13},"end":{"line":766,"column":13}}]},"144":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":16},"end":{"line":766,"column":35}},{"start":{"line":766,"column":39},"end":{"line":766,"column":62}}]},"145":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":13},"end":{"line":767,"column":13}},{"start":{"line":767,"column":13},"end":{"line":767,"column":13}}]},"146":{"line":767,"type":"binary-expr","locations":[{"start":{"line":767,"column":16},"end":{"line":767,"column":30}},{"start":{"line":767,"column":34},"end":{"line":767,"column":53}}]},"147":{"line":769,"type":"if","locations":[{"start":{"line":769,"column":13},"end":{"line":769,"column":13}},{"start":{"line":769,"column":13},"end":{"line":769,"column":13}}]},"148":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":13},"end":{"line":771,"column":13}},{"start":{"line":771,"column":13},"end":{"line":771,"column":13}}]},"149":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":13},"end":{"line":773,"column":13}},{"start":{"line":773,"column":13},"end":{"line":773,"column":13}}]},"150":{"line":773,"type":"binary-expr","locations":[{"start":{"line":773,"column":16},"end":{"line":773,"column":39}},{"start":{"line":773,"column":43},"end":{"line":773,"column":58}}]},"151":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":13},"end":{"line":775,"column":13}},{"start":{"line":775,"column":13},"end":{"line":775,"column":13}}]},"152":{"line":775,"type":"binary-expr","locations":[{"start":{"line":775,"column":16},"end":{"line":775,"column":32}},{"start":{"line":775,"column":36},"end":{"line":775,"column":62}}]},"153":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":13},"end":{"line":777,"column":13}},{"start":{"line":777,"column":13},"end":{"line":777,"column":13}}]},"154":{"line":777,"type":"binary-expr","locations":[{"start":{"line":777,"column":16},"end":{"line":777,"column":32}},{"start":{"line":777,"column":36},"end":{"line":777,"column":70}}]},"155":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":13},"end":{"line":779,"column":13}},{"start":{"line":779,"column":13},"end":{"line":779,"column":13}}]},"156":{"line":779,"type":"binary-expr","locations":[{"start":{"line":779,"column":16},"end":{"line":779,"column":44}},{"start":{"line":779,"column":48},"end":{"line":779,"column":81}}]},"157":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":13},"end":{"line":781,"column":13}},{"start":{"line":781,"column":13},"end":{"line":781,"column":13}}]},"158":{"line":783,"type":"if","locations":[{"start":{"line":783,"column":13},"end":{"line":783,"column":13}},{"start":{"line":783,"column":13},"end":{"line":783,"column":13}}]},"159":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":13},"end":{"line":785,"column":13}},{"start":{"line":785,"column":13},"end":{"line":785,"column":13}}]},"160":{"line":785,"type":"binary-expr","locations":[{"start":{"line":785,"column":16},"end":{"line":785,"column":42}},{"start":{"line":785,"column":46},"end":{"line":785,"column":64}}]},"161":{"line":787,"type":"if","locations":[{"start":{"line":787,"column":13},"end":{"line":787,"column":13}},{"start":{"line":787,"column":13},"end":{"line":787,"column":13}}]},"162":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":13},"end":{"line":789,"column":13}},{"start":{"line":789,"column":13},"end":{"line":789,"column":13}}]},"163":{"line":791,"type":"if","locations":[{"start":{"line":791,"column":13},"end":{"line":791,"column":13}},{"start":{"line":791,"column":13},"end":{"line":791,"column":13}}]},"164":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":13},"end":{"line":793,"column":13}},{"start":{"line":793,"column":13},"end":{"line":793,"column":13}}]},"165":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":13},"end":{"line":795,"column":13}},{"start":{"line":795,"column":13},"end":{"line":795,"column":13}}]},"166":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":13},"end":{"line":797,"column":13}},{"start":{"line":797,"column":13},"end":{"line":797,"column":13}}]},"167":{"line":797,"type":"binary-expr","locations":[{"start":{"line":797,"column":16},"end":{"line":797,"column":46}},{"start":{"line":797,"column":50},"end":{"line":797,"column":80}}]}},"code":["\"use strict\"","","var writeIEEE754 = require('../float_parser').writeIEEE754,","  readIEEE754 = require('../float_parser').readIEEE754,","  Long = require('../long').Long,","  Map = require('../map'),","  Double = require('../double').Double,","  Timestamp = require('../timestamp').Timestamp,","  ObjectID = require('../objectid').ObjectID,","  Symbol = require('../symbol').Symbol,","  Code = require('../code').Code,","  BSONRegExp = require('../regexp').BSONRegExp,","  Int32 = require('../int_32').Int32,","  MinKey = require('../min_key').MinKey,","  MaxKey = require('../max_key').MaxKey,","  Decimal128 = require('../decimal128'),","  DBRef = require('../db_ref').DBRef,","  Binary = require('../binary').Binary;","","try {","  var _Buffer = Uint8Array;","} catch(e) {","  var _Buffer = Buffer;","}","","var regexp = /\\x00/","","// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';","}","","var isRegExp = function isRegExp(d) {","  return Object.prototype.toString.call(d) === '[object RegExp]';","}","","var serializeString = function(buffer, key, value, index, isArray) {","  // Encode String type","  buffer[index++] = BSON.BSON_DATA_STRING;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes + 1;","  buffer[index - 1] = 0;","  // Write the string","  var size = buffer.write(value, index + 4, 'utf8');","  // Write the size of the string to buffer","  buffer[index + 3] = (size + 1 >> 24) & 0xff;","  buffer[index + 2] = (size + 1 >> 16) & 0xff;","  buffer[index + 1] = (size + 1 >> 8) & 0xff;","  buffer[index] = size + 1 & 0xff;","  // Update index","  index = index + 4 + size;","  // Write zero","  buffer[index++] = 0;","  return index;","}","","var serializeNumber = function(buffer, key, value, index, isArray) {","  // We have an integer value","  if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {","    // If the value fits in 32 bits encode as int, if it fits in a double","    // encode it as a double, otherwise long","    if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {","      // Set int type 32 bits or less","      buffer[index++] = BSON.BSON_DATA_INT;","      // Number of written bytes","      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","      // Encode the name","      index = index + numberOfWrittenBytes;","      buffer[index++] = 0;","      // Write the int value","      buffer[index++] = value & 0xff;","      buffer[index++] = (value >> 8) & 0xff;","      buffer[index++] = (value >> 16) & 0xff;","      buffer[index++] = (value >> 24) & 0xff;","    } else if(value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {","      // Encode as double","      buffer[index++] = BSON.BSON_DATA_NUMBER;","      // Number of written bytes","      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","      // Encode the name","      index = index + numberOfWrittenBytes;","      buffer[index++] = 0;","      // Write float","      writeIEEE754(buffer, value, index, 'little', 52, 8);","      // Ajust index","      index = index + 8;","    } else {","      // Set long type","      buffer[index++] = BSON.BSON_DATA_LONG;","      // Number of written bytes","      var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","      // Encode the name","      index = index + numberOfWrittenBytes;","      buffer[index++] = 0;","      var longVal = Long.fromNumber(value);","      var lowBits = longVal.getLowBits();","      var highBits = longVal.getHighBits();","      // Encode low bits","      buffer[index++] = lowBits & 0xff;","      buffer[index++] = (lowBits >> 8) & 0xff;","      buffer[index++] = (lowBits >> 16) & 0xff;","      buffer[index++] = (lowBits >> 24) & 0xff;","      // Encode high bits","      buffer[index++] = highBits & 0xff;","      buffer[index++] = (highBits >> 8) & 0xff;","      buffer[index++] = (highBits >> 16) & 0xff;","      buffer[index++] = (highBits >> 24) & 0xff;","    }","  } else {","    // Encode as double","    buffer[index++] = BSON.BSON_DATA_NUMBER;","    // Number of written bytes","    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","    // Encode the name","    index = index + numberOfWrittenBytes;","    buffer[index++] = 0;","    // Write float","    writeIEEE754(buffer, value, index, 'little', 52, 8);","    // Ajust index","    index = index + 8;","  }","","  return index;","}","","var serializeNull = function(buffer, key, value, index, isArray) {","  // Set long type","  buffer[index++] = BSON.BSON_DATA_NULL;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  return index;","}","","var serializeBoolean = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BOOLEAN;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Encode the boolean value","  buffer[index++] = value ? 1 : 0;","  return index;","}","","var serializeDate = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_DATE;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","","  // Write the date","  var dateInMilis = Long.fromNumber(value.getTime());","  var lowBits = dateInMilis.getLowBits();","  var highBits = dateInMilis.getHighBits();","  // Encode low bits","  buffer[index++] = lowBits & 0xff;","  buffer[index++] = (lowBits >> 8) & 0xff;","  buffer[index++] = (lowBits >> 16) & 0xff;","  buffer[index++] = (lowBits >> 24) & 0xff;","  // Encode high bits","  buffer[index++] = highBits & 0xff;","  buffer[index++] = (highBits >> 8) & 0xff;","  buffer[index++] = (highBits >> 16) & 0xff;","  buffer[index++] = (highBits >> 24) & 0xff;","  return index;","}","","var serializeRegExp = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_REGEXP;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  if (value.source && value.source.match(regexp) != null) {","    throw Error(\"value \" + value.source + \" must not contain null bytes\");","  }","  // Adjust the index","  index = index + buffer.write(value.source, index, 'utf8');","  // Write zero","  buffer[index++] = 0x00;","  // Write the parameters","  if(value.global) buffer[index++] = 0x73; // s","  if(value.ignoreCase) buffer[index++] = 0x69; // i","  if(value.multiline) buffer[index++] = 0x6d; // m","  // Add ending zero","  buffer[index++] = 0x00;","  return index;","}","","var serializeBSONRegExp = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_REGEXP;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","","  // Check the pattern for 0 bytes","  if (value.pattern.match(regexp) != null) {","    // The BSON spec doesn't allow keys with null bytes because keys are","    // null-terminated.","    throw Error(\"pattern \" + value.pattern + \" must not contain null bytes\");","  }","","  // Adjust the index","  index = index + buffer.write(value.pattern, index, 'utf8');","  // Write zero","  buffer[index++] = 0x00;","  // Write the options","  index = index + buffer.write(value.options.split('').sort().join(''), index, 'utf8');","  // Add ending zero","  buffer[index++] = 0x00;","  return index;","}","","var serializeMinMax = function(buffer, key, value, index, isArray) {","  // Write the type of either min or max key","  if(value === null) {","    buffer[index++] = BSON.BSON_DATA_NULL;","  } else if(value instanceof MinKey) {","    buffer[index++] = BSON.BSON_DATA_MIN_KEY;","  } else {","    buffer[index++] = BSON.BSON_DATA_MAX_KEY;","  }","","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  return index;","}","","var serializeObjectId = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_OID;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","","  // Write the objectId into the shared buffer","  if(typeof value.id == 'string') {","    buffer.write(value.id, index, 'binary')","  } else if(value.id && value.id.copy){","    value.id.copy(buffer, index, 0, 12);","  } else {","    throw new Error('object [' + JSON.stringify(value) + \"] is not a valid ObjectId\");","  }","","  // Ajust index","  return index + 12;","}","","var serializeBuffer = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BINARY;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Get size of the buffer (current write point)","  var size = value.length;","  // Write the size of the string to buffer","  buffer[index++] = size & 0xff;","  buffer[index++] = (size >> 8) & 0xff;","  buffer[index++] = (size >> 16) & 0xff;","  buffer[index++] = (size >> 24) & 0xff;","  // Write the default subtype","  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;","  // Copy the content form the binary field to the buffer","  value.copy(buffer, index, 0, size);","  // Adjust the index","  index = index + size;","  return index;","}","","var serializeObject = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path) {","  for(var i = 0; i < path.length; i++) {","    if(path[i] === value) throw new Error('cyclic dependency detected');","  }","","  // Push value to stack","  path.push(value);","  // Write the type","  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  var endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);","  // Pop stack","  path.pop();","  // Write size","  var size = endIndex - index;","  return endIndex;","}","","var serializeDecimal128 = function(buffer, key, value, index, isArray) {","  buffer[index++] = BSON.BSON_DATA_DECIMAL128;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Write the data from the value","  value.bytes.copy(buffer, index, 0, 16);","  return index + 16;","}","","var serializeLong = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = value._bsontype == 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Write the date","  var lowBits = value.getLowBits();","  var highBits = value.getHighBits();","  // Encode low bits","  buffer[index++] = lowBits & 0xff;","  buffer[index++] = (lowBits >> 8) & 0xff;","  buffer[index++] = (lowBits >> 16) & 0xff;","  buffer[index++] = (lowBits >> 24) & 0xff;","  // Encode high bits","  buffer[index++] = highBits & 0xff;","  buffer[index++] = (highBits >> 8) & 0xff;","  buffer[index++] = (highBits >> 16) & 0xff;","  buffer[index++] = (highBits >> 24) & 0xff;","  return index;","}","","var serializeInt32 = function(buffer, key, value, index, isArray) {","  // Set int type 32 bits or less","  buffer[index++] = BSON.BSON_DATA_INT;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Write the int value","  buffer[index++] = value & 0xff;","  buffer[index++] = (value >> 8) & 0xff;","  buffer[index++] = (value >> 16) & 0xff;","  buffer[index++] = (value >> 24) & 0xff;","  return index;","}","","var serializeDouble = function(buffer, key, value, index, isArray) {","  // Encode as double","  buffer[index++] = BSON.BSON_DATA_NUMBER;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Write float","  writeIEEE754(buffer, value, index, 'little', 52, 8);","  // Ajust index","  index = index + 8;","  return index;","}","","var serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {","  buffer[index++] = BSON.BSON_DATA_CODE;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Function string","  var functionString = value.toString();","  // Write the string","  var size = buffer.write(functionString, index + 4, 'utf8') + 1;","  // Write the size of the string to buffer","  buffer[index] = size & 0xff;","  buffer[index + 1] = (size >> 8) & 0xff;","  buffer[index + 2] = (size >> 16) & 0xff;","  buffer[index + 3] = (size >> 24) & 0xff;","  // Update index","  index = index + 4 + size - 1;","  // Write zero","  buffer[index++] = 0;","  return index;","}","","var serializeCode = function(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {","  if(value.scope && typeof value.scope == 'object') {","    // Write the type","    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;","    // Number of written bytes","    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","    // Encode the name","    index = index + numberOfWrittenBytes;","    buffer[index++] = 0;","","    // Starting index","    var startIndex = index;","","    // Serialize the function","    // Get the function string","    var functionString = typeof value.code == 'string' ? value.code : value.code.toString();","    // Index adjustment","    index = index + 4;","    // Write string into buffer","    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;","    // Write the size of the string to buffer","    buffer[index] = codeSize & 0xff;","    buffer[index + 1] = (codeSize >> 8) & 0xff;","    buffer[index + 2] = (codeSize >> 16) & 0xff;","    buffer[index + 3] = (codeSize >> 24) & 0xff;","    // Write end 0","    buffer[index + 4 + codeSize - 1] = 0;","    // Write the","    index = index + codeSize + 4;","","    //","    // Serialize the scope value","    var endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined)","    index = endIndex - 1;","","    // Writ the total","    var totalSize = endIndex - startIndex;","","    // Write the total size of the object","    buffer[startIndex++] = totalSize & 0xff;","    buffer[startIndex++] = (totalSize >> 8) & 0xff;","    buffer[startIndex++] = (totalSize >> 16) & 0xff;","    buffer[startIndex++] = (totalSize >> 24) & 0xff;","    // Write trailing zero","    buffer[index++] = 0;","  } else {","    buffer[index++] = BSON.BSON_DATA_CODE;","    // Number of written bytes","    var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","    // Encode the name","    index = index + numberOfWrittenBytes;","    buffer[index++] = 0;","    // Function string","    var functionString = value.code.toString();","    // Write the string","    var size = buffer.write(functionString, index + 4, 'utf8') + 1;","    // Write the size of the string to buffer","    buffer[index] = size & 0xff;","    buffer[index + 1] = (size >> 8) & 0xff;","    buffer[index + 2] = (size >> 16) & 0xff;","    buffer[index + 3] = (size >> 24) & 0xff;","    // Update index","    index = index + 4 + size - 1;","    // Write zero","    buffer[index++] = 0;","  }","","  return index;","}","","var serializeBinary = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_BINARY;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Extract the buffer","  var data = value.value(true);","  // Calculate size","  var size = value.position;","  // Add the deprecated 02 type 4 bytes of size to total","  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;","  // Write the size of the string to buffer","  buffer[index++] = size & 0xff;","  buffer[index++] = (size >> 8) & 0xff;","  buffer[index++] = (size >> 16) & 0xff;","  buffer[index++] = (size >> 24) & 0xff;","  // Write the subtype to the buffer","  buffer[index++] = value.sub_type;","","  // If we have binary type 2 the 4 first bytes are the size","  if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","    size = size - 4;","    buffer[index++] = size & 0xff;","    buffer[index++] = (size >> 8) & 0xff;","    buffer[index++] = (size >> 16) & 0xff;","    buffer[index++] = (size >> 24) & 0xff;","  }","","  // Write the data to the object","  data.copy(buffer, index, 0, value.position);","  // Adjust the index","  index = index + value.position;","  return index;","}","","var serializeSymbol = function(buffer, key, value, index, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_SYMBOL;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","  // Write the string","  var size = buffer.write(value.value, index + 4, 'utf8') + 1;","  // Write the size of the string to buffer","  buffer[index] = size & 0xff;","  buffer[index + 1] = (size >> 8) & 0xff;","  buffer[index + 2] = (size >> 16) & 0xff;","  buffer[index + 3] = (size >> 24) & 0xff;","  // Update index","  index = index + 4 + size - 1;","  // Write zero","  buffer[index++] = 0x00;","  return index;","}","","var serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {","  // Write the type","  buffer[index++] = BSON.BSON_DATA_OBJECT;","  // Number of written bytes","  var numberOfWrittenBytes = !isArray ? buffer.write(key, index, 'utf8') : buffer.write(key, index, 'ascii');","","  // Encode the name","  index = index + numberOfWrittenBytes;","  buffer[index++] = 0;","","  var startIndex = index;","  var endIndex;","","  // Serialize object","  if(null != value.db) {","    endIndex = serializeInto(buffer, {","        '$ref': value.namespace","      , '$id' : value.oid","      , '$db' : value.db","    }, false, index, depth + 1, serializeFunctions);","  } else {","    endIndex = serializeInto(buffer, {","        '$ref': value.namespace","      , '$id' : value.oid","    }, false, index, depth + 1, serializeFunctions);","  }","","  // Calculate object size","  var size = endIndex - startIndex;","  // Write the size","  buffer[startIndex++] = size & 0xff;","  buffer[startIndex++] = (size >> 8) & 0xff;","  buffer[startIndex++] = (size >> 16) & 0xff;","  buffer[startIndex++] = (size >> 24) & 0xff;","  // Set index","  return endIndex;","}","","var serializeInto = function serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {","  startingIndex = startingIndex || 0;","  path = path || [];","","  // Push the object to the path","  path.push(object);","","  // Start place to serialize into","  var index = startingIndex + 4;","  var self = this;","","  // Special case isArray","  if(Array.isArray(object)) {","    // Get object keys","    for(var i = 0; i < object.length; i++) {","      var key = \"\" + i;","      var value = object[i];","","      // Is there an override value","      if(value && value.toBSON) {","        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");","        value = value.toBSON();","      }","","      var type = typeof value;","      if(type == 'string') {","        index = serializeString(buffer, key, value, index, true);","      } else if(type == 'number') {","        index = serializeNumber(buffer, key, value, index, true);","      } else if(type == 'boolean') {","        index = serializeBoolean(buffer, key, value, index, true);","      } else if(value instanceof Date || isDate(value)) {","        index = serializeDate(buffer, key, value, index, true);","      } else if(value === undefined) {","        index = serializeNull(buffer, key, value, index, true);","      } else if(value === null) {","        index = serializeNull(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'ObjectID') {","        index = serializeObjectId(buffer, key, value, index, true);","      } else if(Buffer.isBuffer(value)) {","        index = serializeBuffer(buffer, key, value, index, true);","      } else if(value instanceof RegExp || isRegExp(value)) {","        index = serializeRegExp(buffer, key, value, index, true);","      } else if(type == 'object' && value['_bsontype'] == null) {","        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);","      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {","        index = serializeDecimal128(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {","        index = serializeLong(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'Double') {","        index = serializeDouble(buffer, key, value, index, true);","      } else if(typeof value == 'function' && serializeFunctions) {","        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions, true);","      } else if(value['_bsontype'] == 'Code') {","        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);","      } else if(value['_bsontype'] == 'Binary') {","        index = serializeBinary(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'Symbol') {","        index = serializeSymbol(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'DBRef') {","        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);","      } else if(value['_bsontype'] == 'BSONRegExp') {","        index = serializeBSONRegExp(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'Int32') {","        index = serializeInt32(buffer, key, value, index, true);","      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {","        index = serializeMinMax(buffer, key, value, index, true);","      }","    }","  } else if(object instanceof Map) {","    var iterator = object.entries();","    var done = false;","","    while(!done) {","      // Unpack the next entry","      var entry = iterator.next();","      done = entry.done;","      // Are we done, then skip and terminate","      if(done) continue;","","      // Get the entry values","      var key = entry.value[0];","      var value = entry.value[1];","","      // Check the type of the value","      var type = typeof value;","","      // Check the key and throw error if it's illegal","      if(key != '$db' && key != '$ref' && key != '$id') {","        if (key.match(regexp) != null) {","          // The BSON spec doesn't allow keys with null bytes because keys are","          // null-terminated.","          throw Error(\"key \" + key + \" must not contain null bytes\");","        }","","        if (checkKeys) {","          if('$' == key[0]) {","            throw Error(\"key \" + key + \" must not start with '$'\");","          } else if (!!~key.indexOf('.')) {","            throw Error(\"key \" + key + \" must not contain '.'\");","          }","        }","      }","","      if(type == 'string') {","        index = serializeString(buffer, key, value, index);","      } else if(type == 'number') {","        index = serializeNumber(buffer, key, value, index);","      } else if(type == 'boolean') {","        index = serializeBoolean(buffer, key, value, index);","      } else if(value instanceof Date || isDate(value)) {","        index = serializeDate(buffer, key, value, index);","      } else if(value === undefined && ignoreUndefined == true) {","      } else if(value === null || value === undefined) {","        index = serializeNull(buffer, key, value, index);","      } else if(value['_bsontype'] == 'ObjectID') {","        index = serializeObjectId(buffer, key, value, index);","      } else if(Buffer.isBuffer(value)) {","        index = serializeBuffer(buffer, key, value, index);","      } else if(value instanceof RegExp || isRegExp(value)) {","        index = serializeRegExp(buffer, key, value, index);","      } else if(type == 'object' && value['_bsontype'] == null) {","        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);","      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {","        index = serializeDecimal128(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {","        index = serializeLong(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Double') {","        index = serializeDouble(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Code') {","        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);","      } else if(typeof value == 'function' && serializeFunctions) {","        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);","      } else if(value['_bsontype'] == 'Binary') {","        index = serializeBinary(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Symbol') {","        index = serializeSymbol(buffer, key, value, index);","      } else if(value['_bsontype'] == 'DBRef') {","        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);","      } else if(value['_bsontype'] == 'BSONRegExp') {","        index = serializeBSONRegExp(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Int32') {","        index = serializeInt32(buffer, key, value, index);","      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {","        index = serializeMinMax(buffer, key, value, index);","      }","    }","  } else {","    // Did we provide a custom serialization method","    if(object.toBSON) {","      if(typeof object.toBSON != 'function') throw new Error(\"toBSON is not a function\");","      object = object.toBSON();","      if(object != null && typeof object != 'object') throw new Error(\"toBSON function did not return an object\");","    }","","    // Iterate over all the keys","    for(var key in object) {","      var value = object[key];","      // Is there an override value","      if(value && value.toBSON) {","        if(typeof value.toBSON != 'function') throw new Error(\"toBSON is not a function\");","        value = value.toBSON();","      }","","      // Check the type of the value","      var type = typeof value;","","      // Check the key and throw error if it's illegal","      if(key != '$db' && key != '$ref' && key != '$id') {","        if (key.match(regexp) != null) {","          // The BSON spec doesn't allow keys with null bytes because keys are","          // null-terminated.","          throw Error(\"key \" + key + \" must not contain null bytes\");","        }","","        if (checkKeys) {","          if('$' == key[0]) {","            throw Error(\"key \" + key + \" must not start with '$'\");","          } else if (!!~key.indexOf('.')) {","            throw Error(\"key \" + key + \" must not contain '.'\");","          }","        }","      }","","      if(type == 'string') {","        index = serializeString(buffer, key, value, index);","      } else if(type == 'number') {","        index = serializeNumber(buffer, key, value, index);","      } else if(type == 'boolean') {","        index = serializeBoolean(buffer, key, value, index);","      } else if(value instanceof Date || isDate(value)) {","        index = serializeDate(buffer, key, value, index);","      } else if(value === undefined && ignoreUndefined == true) {","      } else if(value === null || value === undefined) {","        index = serializeNull(buffer, key, value, index);","      } else if(value['_bsontype'] == 'ObjectID') {","        index = serializeObjectId(buffer, key, value, index);","      } else if(Buffer.isBuffer(value)) {","        index = serializeBuffer(buffer, key, value, index);","      } else if(value instanceof RegExp || isRegExp(value)) {","        index = serializeRegExp(buffer, key, value, index);","      } else if(type == 'object' && value['_bsontype'] == null) {","        index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);","      } else if(type == 'object' && value['_bsontype'] == 'Decimal128') {","        index = serializeDecimal128(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Long' || value['_bsontype'] == 'Timestamp') {","        index = serializeLong(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Double') {","        index = serializeDouble(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Code') {","        index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);","      } else if(typeof value == 'function' && serializeFunctions) {","        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);","      } else if(value['_bsontype'] == 'Binary') {","        index = serializeBinary(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Symbol') {","        index = serializeSymbol(buffer, key, value, index);","      } else if(value['_bsontype'] == 'DBRef') {","        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);","      } else if(value['_bsontype'] == 'BSONRegExp') {","        index = serializeBSONRegExp(buffer, key, value, index);","      } else if(value['_bsontype'] == 'Int32') {","        index = serializeInt32(buffer, key, value, index);","      } else if(value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {","        index = serializeMinMax(buffer, key, value, index);","      }","    }","  }","","  // Remove the path","  path.pop();","","  // Final padding byte for object","  buffer[index++] = 0x00;","","  // Final size","  var size = index - startingIndex;","  // Write the size of the object","  buffer[startingIndex++] = size & 0xff;","  buffer[startingIndex++] = (size >> 8) & 0xff;","  buffer[startingIndex++] = (size >> 16) & 0xff;","  buffer[startingIndex++] = (size >> 24) & 0xff;","  return index;","}","","var BSON = {};","","/**"," * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5"," *"," * @ignore"," * @api private"," */","var functionCache = BSON.functionCache = {};","","/**"," * Number BSON Type"," *"," * @classconstant BSON_DATA_NUMBER"," **/","BSON.BSON_DATA_NUMBER = 1;","/**"," * String BSON Type"," *"," * @classconstant BSON_DATA_STRING"," **/","BSON.BSON_DATA_STRING = 2;","/**"," * Object BSON Type"," *"," * @classconstant BSON_DATA_OBJECT"," **/","BSON.BSON_DATA_OBJECT = 3;","/**"," * Array BSON Type"," *"," * @classconstant BSON_DATA_ARRAY"," **/","BSON.BSON_DATA_ARRAY = 4;","/**"," * Binary BSON Type"," *"," * @classconstant BSON_DATA_BINARY"," **/","BSON.BSON_DATA_BINARY = 5;","/**"," * ObjectID BSON Type, deprecated"," *"," * @classconstant BSON_DATA_UNDEFINED"," **/","BSON.BSON_DATA_UNDEFINED = 6;","/**"," * ObjectID BSON Type"," *"," * @classconstant BSON_DATA_OID"," **/","BSON.BSON_DATA_OID = 7;","/**"," * Boolean BSON Type"," *"," * @classconstant BSON_DATA_BOOLEAN"," **/","BSON.BSON_DATA_BOOLEAN = 8;","/**"," * Date BSON Type"," *"," * @classconstant BSON_DATA_DATE"," **/","BSON.BSON_DATA_DATE = 9;","/**"," * null BSON Type"," *"," * @classconstant BSON_DATA_NULL"," **/","BSON.BSON_DATA_NULL = 10;","/**"," * RegExp BSON Type"," *"," * @classconstant BSON_DATA_REGEXP"," **/","BSON.BSON_DATA_REGEXP = 11;","/**"," * Code BSON Type"," *"," * @classconstant BSON_DATA_CODE"," **/","BSON.BSON_DATA_CODE = 13;","/**"," * Symbol BSON Type"," *"," * @classconstant BSON_DATA_SYMBOL"," **/","BSON.BSON_DATA_SYMBOL = 14;","/**"," * Code with Scope BSON Type"," *"," * @classconstant BSON_DATA_CODE_W_SCOPE"," **/","BSON.BSON_DATA_CODE_W_SCOPE = 15;","/**"," * 32 bit Integer BSON Type"," *"," * @classconstant BSON_DATA_INT"," **/","BSON.BSON_DATA_INT = 16;","/**"," * Timestamp BSON Type"," *"," * @classconstant BSON_DATA_TIMESTAMP"," **/","BSON.BSON_DATA_TIMESTAMP = 17;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_LONG"," **/","BSON.BSON_DATA_LONG = 18;","/**"," * Long BSON Type"," *"," * @classconstant BSON_DATA_DECIMAL128"," **/","BSON.BSON_DATA_DECIMAL128 = 19;","/**"," * MinKey BSON Type"," *"," * @classconstant BSON_DATA_MIN_KEY"," **/","BSON.BSON_DATA_MIN_KEY = 0xff;","/**"," * MaxKey BSON Type"," *"," * @classconstant BSON_DATA_MAX_KEY"," **/","BSON.BSON_DATA_MAX_KEY = 0x7f;","/**"," * Binary Default Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_DEFAULT"," **/","BSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;","/**"," * Binary Function Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_FUNCTION"," **/","BSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;","/**"," * Binary Byte Array Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY"," **/","BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;","/**"," * Binary UUID Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_UUID"," **/","BSON.BSON_BINARY_SUBTYPE_UUID = 3;","/**"," * Binary MD5 Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_MD5"," **/","BSON.BSON_BINARY_SUBTYPE_MD5 = 4;","/**"," * Binary User Defined Type"," *"," * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED"," **/","BSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;","","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","BSON.BSON_INT32_MIN = -0x80000000;","","BSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;","BSON.BSON_INT64_MIN = -Math.pow(2, 63);","","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","// Internal long versions","var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.","var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = serializeInto;",""],"l":{"3":1,"20":1,"21":1,"23":0,"26":1,"29":1,"30":0,"33":1,"34":0,"37":1,"39":0,"41":0,"43":0,"44":0,"46":0,"48":0,"49":0,"50":0,"51":0,"53":0,"55":0,"56":0,"59":1,"61":0,"64":0,"66":0,"68":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"79":0,"81":0,"83":0,"84":0,"86":0,"88":0,"91":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"113":0,"115":0,"117":0,"118":0,"120":0,"122":0,"125":0,"128":1,"130":0,"132":0,"134":0,"135":0,"136":0,"139":1,"141":0,"143":0,"145":0,"146":0,"148":0,"149":0,"152":1,"154":0,"156":0,"158":0,"159":0,"162":0,"163":0,"164":0,"166":0,"167":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"175":0,"178":1,"180":0,"182":0,"184":0,"185":0,"186":0,"187":0,"190":0,"192":0,"194":0,"195":0,"196":0,"198":0,"199":0,"202":1,"204":0,"206":0,"208":0,"209":0,"212":0,"215":0,"219":0,"221":0,"223":0,"225":0,"226":0,"229":1,"231":0,"232":0,"233":0,"234":0,"236":0,"240":0,"242":0,"243":0,"244":0,"247":1,"249":0,"251":0,"254":0,"255":0,"258":0,"259":0,"260":0,"261":0,"263":0,"267":0,"270":1,"272":0,"274":0,"276":0,"277":0,"279":0,"281":0,"282":0,"283":0,"284":0,"286":0,"288":0,"290":0,"291":0,"294":1,"295":0,"296":0,"300":0,"302":0,"304":0,"306":0,"307":0,"308":0,"310":0,"312":0,"313":0,"316":1,"317":0,"319":0,"321":0,"322":0,"324":0,"325":0,"328":1,"330":0,"332":0,"334":0,"335":0,"337":0,"338":0,"340":0,"341":0,"342":0,"343":0,"345":0,"346":0,"347":0,"348":0,"349":0,"352":1,"354":0,"356":0,"358":0,"359":0,"361":0,"362":0,"363":0,"364":0,"365":0,"368":1,"370":0,"372":0,"374":0,"375":0,"377":0,"379":0,"380":0,"383":1,"384":0,"386":0,"388":0,"389":0,"391":0,"393":0,"395":0,"396":0,"397":0,"398":0,"400":0,"402":0,"403":0,"406":1,"407":0,"409":0,"411":0,"413":0,"414":0,"417":0,"421":0,"423":0,"425":0,"427":0,"428":0,"429":0,"430":0,"432":0,"434":0,"438":0,"439":0,"442":0,"445":0,"446":0,"447":0,"448":0,"450":0,"452":0,"454":0,"456":0,"457":0,"459":0,"461":0,"463":0,"464":0,"465":0,"466":0,"468":0,"470":0,"473":0,"476":1,"478":0,"480":0,"482":0,"483":0,"485":0,"487":0,"489":0,"491":0,"492":0,"493":0,"494":0,"496":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"508":0,"510":0,"511":0,"514":1,"516":0,"518":0,"520":0,"521":0,"523":0,"525":0,"526":0,"527":0,"528":0,"530":0,"532":0,"533":0,"536":1,"538":0,"540":0,"543":0,"544":0,"546":0,"547":0,"550":0,"551":0,"557":0,"564":0,"566":0,"567":0,"568":0,"569":0,"571":0,"574":1,"575":0,"576":0,"579":0,"582":0,"583":0,"586":0,"588":0,"589":0,"590":0,"593":0,"594":0,"595":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"643":0,"644":0,"645":0,"647":0,"649":0,"650":0,"652":0,"655":0,"656":0,"659":0,"662":0,"663":0,"666":0,"669":0,"670":0,"671":0,"672":0,"673":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"723":0,"724":0,"725":0,"726":0,"730":0,"731":0,"733":0,"734":0,"735":0,"739":0,"742":0,"743":0,"746":0,"749":0,"750":0,"751":0,"752":0,"753":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"804":0,"807":0,"810":0,"812":0,"813":0,"814":0,"815":0,"816":0,"819":1,"827":1,"834":1,"840":1,"846":1,"852":1,"858":1,"864":1,"870":1,"876":1,"882":1,"888":1,"894":1,"900":1,"906":1,"912":1,"918":1,"924":1,"930":1,"936":1,"942":1,"948":1,"954":1,"960":1,"966":1,"972":1,"978":1,"984":1,"987":1,"988":1,"990":1,"991":1,"994":1,"995":1,"998":1,"999":1,"1001":1}},"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/calculate_size.js":{"path":"/home/travis/build/npmtest/node-npmtest-bson/node_modules/bson/lib/bson/parser/calculate_size.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0],"72":[0,0],"73":[0,0],"74":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"isDate","line":19,"loc":{"start":{"line":19,"column":13},"end":{"line":19,"column":32}}},"2":{"name":"calculateObjectSize","line":23,"loc":{"start":{"line":23,"column":26},"end":{"line":23,"column":100}}},"3":{"name":"calculateElement","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":85}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":16,"column":41}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"3":{"start":{"line":20,"column":2},"end":{"line":20,"column":88}},"4":{"start":{"line":23,"column":0},"end":{"line":43,"column":1}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":28}},"6":{"start":{"line":26,"column":2},"end":{"line":40,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":105}},"9":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"10":{"start":{"line":33,"column":3},"end":{"line":33,"column":28}},"11":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":99}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"14":{"start":{"line":49,"column":0},"end":{"line":140,"column":1}},"15":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":27}},"17":{"start":{"line":55,"column":2},"end":{"line":137,"column":3}},"18":{"start":{"line":57,"column":6},"end":{"line":57,"column":96}},"19":{"start":{"line":59,"column":6},"end":{"line":67,"column":7}},"20":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"21":{"start":{"line":61,"column":10},"end":{"line":61,"column":86}},"22":{"start":{"line":63,"column":10},"end":{"line":63,"column":86}},"23":{"start":{"line":66,"column":8},"end":{"line":66,"column":84}},"24":{"start":{"line":69,"column":6},"end":{"line":69,"column":110}},"25":{"start":{"line":69,"column":38},"end":{"line":69,"column":110}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":15}},"27":{"start":{"line":72,"column":6},"end":{"line":72,"column":82}},"28":{"start":{"line":74,"column":6},"end":{"line":124,"column":7}},"29":{"start":{"line":75,"column":8},"end":{"line":75,"column":80}},"30":{"start":{"line":76,"column":13},"end":{"line":124,"column":7}},"31":{"start":{"line":77,"column":8},"end":{"line":77,"column":85}},"32":{"start":{"line":78,"column":13},"end":{"line":124,"column":7}},"33":{"start":{"line":79,"column":8},"end":{"line":79,"column":84}},"34":{"start":{"line":80,"column":13},"end":{"line":124,"column":7}},"35":{"start":{"line":81,"column":8},"end":{"line":81,"column":103}},"36":{"start":{"line":82,"column":13},"end":{"line":124,"column":7}},"37":{"start":{"line":84,"column":8},"end":{"line":84,"column":84}},"38":{"start":{"line":85,"column":10},"end":{"line":124,"column":7}},"39":{"start":{"line":86,"column":8},"end":{"line":86,"column":85}},"40":{"start":{"line":87,"column":13},"end":{"line":124,"column":7}},"41":{"start":{"line":89,"column":8},"end":{"line":93,"column":9}},"42":{"start":{"line":90,"column":10},"end":{"line":90,"column":215}},"43":{"start":{"line":92,"column":10},"end":{"line":92,"column":139}},"44":{"start":{"line":94,"column":13},"end":{"line":124,"column":7}},"45":{"start":{"line":96,"column":8},"end":{"line":100,"column":9}},"46":{"start":{"line":97,"column":10},"end":{"line":97,"column":111}},"47":{"start":{"line":99,"column":10},"end":{"line":99,"column":107}},"48":{"start":{"line":101,"column":13},"end":{"line":124,"column":7}},"49":{"start":{"line":102,"column":8},"end":{"line":102,"column":127}},"50":{"start":{"line":103,"column":13},"end":{"line":124,"column":7}},"51":{"start":{"line":105,"column":8},"end":{"line":108,"column":10}},"52":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"53":{"start":{"line":112,"column":10},"end":{"line":112,"column":43}},"54":{"start":{"line":115,"column":8},"end":{"line":115,"column":153}},"55":{"start":{"line":116,"column":13},"end":{"line":124,"column":7}},"56":{"start":{"line":117,"column":10},"end":{"line":118,"column":97}},"57":{"start":{"line":119,"column":13},"end":{"line":124,"column":7}},"58":{"start":{"line":120,"column":10},"end":{"line":121,"column":58}},"59":{"start":{"line":123,"column":8},"end":{"line":123,"column":144}},"60":{"start":{"line":127,"column":6},"end":{"line":136,"column":7}},"61":{"start":{"line":128,"column":8},"end":{"line":129,"column":95}},"62":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"63":{"start":{"line":132,"column":10},"end":{"line":132,"column":210}},"64":{"start":{"line":133,"column":15},"end":{"line":135,"column":9}},"65":{"start":{"line":134,"column":10},"end":{"line":134,"column":134}},"66":{"start":{"line":139,"column":2},"end":{"line":139,"column":11}},"67":{"start":{"line":142,"column":0},"end":{"line":142,"column":14}},"68":{"start":{"line":145,"column":0},"end":{"line":145,"column":33}},"69":{"start":{"line":146,"column":0},"end":{"line":146,"column":34}},"70":{"start":{"line":149,"column":0},"end":{"line":149,"column":35}},"71":{"start":{"line":150,"column":0},"end":{"line":150,"column":36}},"72":{"start":{"line":152,"column":0},"end":{"line":152,"column":37}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":30}},{"start":{"line":20,"column":34},"end":{"line":20,"column":87}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"5":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":5},"end":{"line":51,"column":10}},{"start":{"line":51,"column":14},"end":{"line":51,"column":26}}]},"6":{"line":55,"type":"switch","locations":[{"start":{"line":56,"column":4},"end":{"line":57,"column":96}},{"start":{"line":58,"column":4},"end":{"line":67,"column":7}},{"start":{"line":68,"column":4},"end":{"line":70,"column":15}},{"start":{"line":71,"column":4},"end":{"line":72,"column":82}},{"start":{"line":73,"column":4},"end":{"line":124,"column":7}},{"start":{"line":125,"column":4},"end":{"line":136,"column":7}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":9},"end":{"line":59,"column":36}},{"start":{"line":59,"column":40},"end":{"line":59,"column":64}},{"start":{"line":59,"column":68},"end":{"line":59,"column":92}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"10":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":39}},{"start":{"line":60,"column":43},"end":{"line":60,"column":71}}]},"11":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":34},"end":{"line":61,"column":69}},{"start":{"line":61,"column":73},"end":{"line":61,"column":74}}]},"12":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":34},"end":{"line":63,"column":69}},{"start":{"line":63,"column":73},"end":{"line":63,"column":74}}]},"13":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":32},"end":{"line":66,"column":67}},{"start":{"line":66,"column":71},"end":{"line":66,"column":72}}]},"14":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"15":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":9},"end":{"line":69,"column":16}},{"start":{"line":69,"column":20},"end":{"line":69,"column":36}}]},"16":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":62},"end":{"line":69,"column":97}},{"start":{"line":69,"column":101},"end":{"line":69,"column":102}}]},"17":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":30},"end":{"line":72,"column":65}},{"start":{"line":72,"column":69},"end":{"line":72,"column":70}}]},"18":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"19":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":9},"end":{"line":74,"column":22}},{"start":{"line":74,"column":26},"end":{"line":74,"column":49}},{"start":{"line":74,"column":53},"end":{"line":74,"column":76}},{"start":{"line":74,"column":80},"end":{"line":74,"column":110}},{"start":{"line":74,"column":114},"end":{"line":74,"column":144}}]},"20":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":32},"end":{"line":75,"column":67}},{"start":{"line":75,"column":71},"end":{"line":75,"column":72}}]},"21":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":13},"end":{"line":76,"column":13}},{"start":{"line":76,"column":13},"end":{"line":76,"column":13}}]},"22":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":16},"end":{"line":76,"column":41}},{"start":{"line":76,"column":45},"end":{"line":76,"column":77}}]},"23":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":32},"end":{"line":77,"column":67}},{"start":{"line":77,"column":71},"end":{"line":77,"column":72}}]},"24":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":78,"column":13}},{"start":{"line":78,"column":13},"end":{"line":78,"column":13}}]},"25":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":16},"end":{"line":78,"column":37}},{"start":{"line":78,"column":41},"end":{"line":78,"column":54}}]},"26":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":32},"end":{"line":79,"column":67}},{"start":{"line":79,"column":71},"end":{"line":79,"column":72}}]},"27":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":13}},{"start":{"line":80,"column":13},"end":{"line":80,"column":13}}]},"28":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":16},"end":{"line":80,"column":45}},{"start":{"line":80,"column":49},"end":{"line":80,"column":71}}]},"29":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":32},"end":{"line":81,"column":67}},{"start":{"line":81,"column":71},"end":{"line":81,"column":72}}]},"30":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":13},"end":{"line":82,"column":13}},{"start":{"line":82,"column":13},"end":{"line":82,"column":13}}]},"31":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":37}},{"start":{"line":82,"column":41},"end":{"line":82,"column":64}},{"start":{"line":82,"column":68},"end":{"line":82,"column":94}},{"start":{"line":83,"column":13},"end":{"line":83,"column":41}},{"start":{"line":83,"column":45},"end":{"line":83,"column":75}},{"start":{"line":83,"column":79},"end":{"line":83,"column":112}}]},"32":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":32},"end":{"line":84,"column":67}},{"start":{"line":84,"column":71},"end":{"line":84,"column":72}}]},"33":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":10},"end":{"line":85,"column":10}},{"start":{"line":85,"column":10},"end":{"line":85,"column":10}}]},"34":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":13},"end":{"line":85,"column":40}},{"start":{"line":85,"column":44},"end":{"line":85,"column":78}}]},"35":{"line":86,"type":"cond-expr","locations":[{"start":{"line":86,"column":32},"end":{"line":86,"column":67}},{"start":{"line":86,"column":71},"end":{"line":86,"column":72}}]},"36":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":13},"end":{"line":87,"column":13}},{"start":{"line":87,"column":13},"end":{"line":87,"column":13}}]},"37":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":37}},{"start":{"line":87,"column":41},"end":{"line":87,"column":69}}]},"38":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":8}},{"start":{"line":89,"column":8},"end":{"line":89,"column":8}}]},"39":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":11},"end":{"line":89,"column":30}},{"start":{"line":89,"column":34},"end":{"line":89,"column":69}}]},"40":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":34},"end":{"line":90,"column":69}},{"start":{"line":90,"column":73},"end":{"line":90,"column":74}}]},"41":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":34},"end":{"line":92,"column":69}},{"start":{"line":92,"column":73},"end":{"line":92,"column":74}}]},"42":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":13},"end":{"line":94,"column":13}},{"start":{"line":94,"column":13},"end":{"line":94,"column":13}}]},"43":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":39}},{"start":{"line":94,"column":43},"end":{"line":94,"column":73}}]},"44":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"45":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":34},"end":{"line":97,"column":69}},{"start":{"line":97,"column":73},"end":{"line":97,"column":74}}]},"46":{"line":99,"type":"cond-expr","locations":[{"start":{"line":99,"column":34},"end":{"line":99,"column":69}},{"start":{"line":99,"column":73},"end":{"line":99,"column":74}}]},"47":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":13},"end":{"line":101,"column":13}},{"start":{"line":101,"column":13},"end":{"line":101,"column":13}}]},"48":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":16},"end":{"line":101,"column":39}},{"start":{"line":101,"column":43},"end":{"line":101,"column":73}}]},"49":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":32},"end":{"line":102,"column":67}},{"start":{"line":102,"column":71},"end":{"line":102,"column":72}}]},"50":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":13},"end":{"line":103,"column":13}},{"start":{"line":103,"column":13},"end":{"line":103,"column":13}}]},"51":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":38}},{"start":{"line":103,"column":42},"end":{"line":103,"column":71}}]},"52":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"53":{"line":115,"type":"cond-expr","locations":[{"start":{"line":115,"column":32},"end":{"line":115,"column":67}},{"start":{"line":115,"column":71},"end":{"line":115,"column":72}}]},"54":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":13},"end":{"line":116,"column":13}},{"start":{"line":116,"column":13},"end":{"line":116,"column":13}}]},"55":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":16},"end":{"line":116,"column":39}},{"start":{"line":116,"column":43},"end":{"line":116,"column":102}}]},"56":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":34},"end":{"line":117,"column":69}},{"start":{"line":117,"column":73},"end":{"line":117,"column":74}}]},"57":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":30},"end":{"line":118,"column":31}},{"start":{"line":118,"column":34},"end":{"line":118,"column":35}}]},"58":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":59},"end":{"line":118,"column":60}},{"start":{"line":118,"column":63},"end":{"line":118,"column":64}}]},"59":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":87},"end":{"line":118,"column":88}},{"start":{"line":118,"column":91},"end":{"line":118,"column":92}}]},"60":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":13},"end":{"line":119,"column":13}},{"start":{"line":119,"column":13},"end":{"line":119,"column":13}}]},"61":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":43}},{"start":{"line":119,"column":47},"end":{"line":119,"column":81}}]},"62":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":34},"end":{"line":120,"column":69}},{"start":{"line":120,"column":73},"end":{"line":120,"column":74}}]},"63":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":32},"end":{"line":123,"column":67}},{"start":{"line":123,"column":71},"end":{"line":123,"column":72}}]},"64":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"65":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":9},"end":{"line":127,"column":32}},{"start":{"line":127,"column":36},"end":{"line":127,"column":95}},{"start":{"line":127,"column":99},"end":{"line":127,"column":138}}]},"66":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":32},"end":{"line":128,"column":67}},{"start":{"line":128,"column":71},"end":{"line":128,"column":72}}]},"67":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":28},"end":{"line":129,"column":29}},{"start":{"line":129,"column":32},"end":{"line":129,"column":33}}]},"68":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":57},"end":{"line":129,"column":58}},{"start":{"line":129,"column":61},"end":{"line":129,"column":62}}]},"69":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":85},"end":{"line":129,"column":86}},{"start":{"line":129,"column":89},"end":{"line":129,"column":90}}]},"70":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"71":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":11},"end":{"line":131,"column":29}},{"start":{"line":131,"column":33},"end":{"line":131,"column":52}},{"start":{"line":131,"column":56},"end":{"line":131,"column":91}}]},"72":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":34},"end":{"line":132,"column":69}},{"start":{"line":132,"column":73},"end":{"line":132,"column":74}}]},"73":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":15},"end":{"line":133,"column":15}},{"start":{"line":133,"column":15},"end":{"line":133,"column":15}}]},"74":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":34},"end":{"line":134,"column":69}},{"start":{"line":134,"column":73},"end":{"line":134,"column":74}}]}},"code":["\"use strict\"","","var writeIEEE754 = require('../float_parser').writeIEEE754","\t, readIEEE754 = require('../float_parser').readIEEE754","\t, Long = require('../long').Long","  , Double = require('../double').Double","  , Timestamp = require('../timestamp').Timestamp","  , ObjectID = require('../objectid').ObjectID","  , Symbol = require('../symbol').Symbol","  , BSONRegExp = require('../regexp').BSONRegExp","  , Code = require('../code').Code","\t, Decimal128 = require('../decimal128')","  , MinKey = require('../min_key').MinKey","  , MaxKey = require('../max_key').MaxKey","  , DBRef = require('../db_ref').DBRef","  , Binary = require('../binary').Binary;","","// To ensure that 0.4 of node works correctly","var isDate = function isDate(d) {","  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';","}","","var calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {","  var totalLength = (4 + 1);","","  if(Array.isArray(object)) {","    for(var i = 0; i < object.length; i++) {","      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined)","    }","  } else {","\t\t// If we have toBSON defined, override the current object","\t\tif(object.toBSON) {","\t\t\tobject = object.toBSON();","\t\t}","","\t\t// Calculate size","    for(var key in object) {","      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined)","    }","  }","","  return totalLength;","}","","/**"," * @ignore"," * @api private"," */","function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {","\t// If we have toBSON defined, override the current object","  if(value && value.toBSON){","    value = value.toBSON();","  }","","  switch(typeof value) {","    case 'string':","      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;","    case 'number':","      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {","        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) { // 32 bit","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);","        } else {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);","        }","      } else {  // 64 bit","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);","      }","    case 'undefined':","      if(isArray || !ignoreUndefined) return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);","      return 0;","    case 'boolean':","      return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 1);","    case 'object':","      if(value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);","      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (12 + 1);","      } else if(value instanceof Date || isDate(value)) {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);","      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 4 + 1) + value.length;","      } else if(value instanceof Long || value instanceof Double || value instanceof Timestamp","          || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);","\t\t\t} else if(value instanceof Decimal128 || value['_bsontype'] == 'Decimal128') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (16 + 1);","      } else if(value instanceof Code || value['_bsontype'] == 'Code') {","        // Calculate size depending on the availability of a scope","        if(value.scope != null && Object.keys(value.scope).length > 0) {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);","        } else {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;","        }","      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {","        // Check what kind of subtype we have","        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1 + 4);","        } else {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1);","        }","      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;","      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {","        // Set up correct object for serialization","        var ordered_values = {","            '$ref': value.namespace","          , '$id' : value.oid","        };","","        // Add db reference if it exists","        if(null != value.db) {","          ordered_values['$db'] = value.db;","        }","","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);","      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1","            + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1","      } else if(value instanceof BSONRegExp || value['_bsontype'] == 'BSONRegExp') {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1","            + Buffer.byteLength(value.options, 'utf8') + 1","      } else {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;","      }","    case 'function':","      // WTF for 0.4.X where typeof /someregexp/ === 'function'","      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {","        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1","          + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1","      } else {","        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);","        } else if(serializeFunctions) {","          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1;","        }","      }","  }","","  return 0;","}","","var BSON = {};","","// BSON MAX VALUES","BSON.BSON_INT32_MAX = 0x7FFFFFFF;","BSON.BSON_INT32_MIN = -0x80000000;","","// JS MAX PRECISE VALUES","BSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.","BSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.","","module.exports = calculateObjectSize;",""],"l":{"3":1,"19":1,"20":0,"23":1,"24":0,"26":0,"27":0,"28":0,"32":0,"33":0,"37":0,"38":0,"42":0,"49":1,"51":0,"52":0,"55":0,"57":0,"59":0,"60":0,"61":0,"63":0,"66":0,"69":0,"70":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"92":0,"94":0,"96":0,"97":0,"99":0,"101":0,"102":0,"103":0,"105":0,"111":0,"112":0,"115":0,"116":0,"117":0,"119":0,"120":0,"123":0,"127":0,"128":0,"131":0,"132":0,"133":0,"134":0,"139":0,"142":1,"145":1,"146":1,"149":1,"150":1,"152":1}}}